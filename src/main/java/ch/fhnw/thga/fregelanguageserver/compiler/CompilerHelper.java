/*
  Source code is in UTF-8 encoding. The following symbols may appear, among others:
  α β γ δ ε ζ η θ ι κ λ μ ν ξ ο π ρ ς σ τ υ φ χ ψ ω « • ¦ » ∀ ∃ ∷ … → ← ﬁ ﬂ ƒ
  If you can't read this, you're out of luck. This code was generated with the frege compiler version 3.25.84
  from
  /Users/tricktron/github/master/frege-lsp-server/src/main/frege/ch/fhnw/thga/fregelanguageserver/compiler/CompilerHelper.fr
  Do not edit this file! Instead, edit the source file and recompile.
*/

package ch.fhnw.thga.fregelanguageserver.compiler;

import frege.run8.Func;
import frege.run8.Lazy;
import frege.run8.Thunk;
import frege.run.Kind;
import frege.run.RunTM;
import frege.runtime.Meta;
import frege.runtime.Phantom.RealWorld;
import frege.Prelude;
import frege.Version;
import frege.compiler.Classes;
import frege.compiler.Classtools;
import frege.compiler.Javatypes;
import frege.compiler.Kinds;
import frege.compiler.Typecheck;
import frege.compiler.Utilities;
import frege.compiler.classes.Nice;
import frege.compiler.classes.QNameMatcher;
import frege.compiler.common.Annotate;
import frege.compiler.common.AnnotateG;
import frege.compiler.common.Binders;
import frege.compiler.common.CompilerOptions;
import frege.compiler.common.Desugar;
import frege.compiler.common.Errors;
import frege.compiler.common.ImpExp;
import frege.compiler.common.JavaName;
import frege.compiler.common.Mangle;
import frege.compiler.common.PatternCompiler;
import frege.compiler.common.Resolve;
import frege.compiler.common.Roman;
import frege.compiler.common.SymbolTable;
import frege.compiler.common.Trans;
import frege.compiler.common.Tuples;
import frege.compiler.common.Types;
import frege.compiler.common.UnAlias;
import frege.compiler.enums.CaseKind;
import frege.compiler.enums.Flags;
import frege.compiler.enums.Literals;
import frege.compiler.enums.RFlag;
import frege.compiler.enums.SymState;
import frege.compiler.enums.TokenID;
import frege.compiler.enums.Visibility;
import frege.compiler.gen.java.Common;
import frege.compiler.gen.java.PrettyJava;
import frege.compiler.grammar.Frege;
import frege.compiler.grammar.Lexer;
import frege.compiler.instances.NiceExprS;
import frege.compiler.instances.Nicer;
import frege.compiler.instances.PositionedSName;
import frege.compiler.passes.Easy;
import frege.compiler.passes.Enter;
import frege.compiler.passes.Fields;
import frege.compiler.passes.Final;
import frege.compiler.passes.Fix;
import frege.compiler.passes.GlobalLam;
import frege.compiler.passes.Imp;
import frege.compiler.passes.Instances;
import frege.compiler.passes.LetUnroll;
import frege.compiler.passes.Strict;
import frege.compiler.passes.Transdef;
import frege.compiler.passes.TypeAlias;
import frege.compiler.tc.Methods;
import frege.compiler.tc.Patterns;
import frege.compiler.tc.Util;
import frege.compiler.types.AbstractJava;
import frege.compiler.types.ConstructorField;
import frege.compiler.types.Expression;
import frege.compiler.types.External;
import frege.compiler.types.Global;
import frege.compiler.types.ImportDetails;
import frege.compiler.types.JNames;
import frege.compiler.types.NSNames;
import frege.compiler.types.Packs;
import frege.compiler.types.Positions;
import frege.compiler.types.QNames;
import frege.compiler.types.SNames;
import frege.compiler.types.SourceDefinitions;
import frege.compiler.types.Strictness;
import frege.compiler.types.Symbols;
import frege.compiler.types.Targets;
import frege.compiler.types.Tokens;
import frege.control.Category;
import frege.control.Semigroupoid;
import frege.control.monad.State;
import frege.control.monad.trans.MonadIO;
import frege.control.monad.trans.MonadTrans;
import frege.data.Bits;
import frege.data.Char;
import frege.data.Foldable;
import frege.data.Graph;
import frege.data.List;
import frege.data.Monoid;
import frege.data.Traversable;
import frege.data.Tree;
import frege.data.TreeMap;
import frege.data.wrapper.Const;
import frege.data.wrapper.Dual;
import frege.data.wrapper.Endo;
import frege.data.wrapper.Identity;
import frege.data.wrapper.Num;
import frege.java.IO;
import frege.java.Lang;
import frege.java.Net;
import frege.java.util.Regex;
import frege.lib.PP;
import frege.prelude.Maybe;
import frege.prelude.PreludeArrays;
import frege.prelude.PreludeBase;
import frege.prelude.PreludeDecimal;
import frege.prelude.PreludeIO;
import frege.prelude.PreludeList;
import frege.prelude.PreludeMonad;
import frege.prelude.PreludeText;
import frege.system.Random;
import frege.test.QuickCheck;
import frege.test.QuickCheckArbitrary;
import frege.test.QuickCheckException;
import frege.test.QuickCheckGen;
import frege.test.QuickCheckModifiers;
import frege.test.QuickCheckProperty;
import frege.test.QuickCheckState;
import frege.test.QuickCheckTest;
import frege.test.QuickCheckText;

@SuppressWarnings("unused")
@Meta.FregePackage(
  source="/Users/tricktron/github/master/frege-lsp-server/src/main/frege/ch/fhnw/thga/fregelanguageserver/compiler/CompilerHelper.fr",
  time=1658496589095L, jmajor=11, jminor=-1,
  imps={
    "frege.compiler.Classes", "frege.compiler.common.CompilerOptions", "frege.compiler.common.Desugar",
    "frege.compiler.passes.Easy", "frege.compiler.passes.Enter", "frege.compiler.grammar.Frege",
    "frege.compiler.passes.Final", "frege.compiler.passes.Fields", "frege.compiler.passes.Fix",
    "frege.compiler.enums.Flags", "frege.compiler.passes.GlobalLam", "frege.compiler.types.Global",
    "frege.compiler.passes.Imp", "frege.compiler.passes.Instances", "frege.compiler.grammar.Lexer",
    "frege.compiler.passes.LetUnroll", "frege.compiler.types.Packs", "frege.Prelude", "frege.prelude.PreludeArrays",
    "frege.prelude.PreludeBase", "frege.prelude.PreludeDecimal", "frege.prelude.PreludeIO", "frege.prelude.PreludeList",
    "frege.prelude.PreludeMonad", "frege.prelude.PreludeText", "frege.test.QuickCheck", "frege.java.util.Regex",
    "frege.compiler.passes.Strict", "frege.control.monad.State", "frege.compiler.Typecheck",
    "frege.compiler.types.Targets", "frege.compiler.enums.TokenID", "frege.compiler.types.Tokens",
    "frege.compiler.passes.Transdef", "frege.compiler.passes.TypeAlias"
  },
  nmss={
    "Classes", "CompilerOptions", "Desugar", "EA", "Enter", "F", "FI", "Fields", "Fix",
    "Flags", "GL", "Global", "Imp", "Instances", "L", "LU", "Packs", "Prelude", "PreludeArrays",
    "PreludeBase", "PreludeDecimal", "PreludeIO", "PreludeList", "PreludeMonad", "PreludeText",
    "QuickCheck", "Regexp", "SC", "State", "TC", "Targets", "TokenID", "Tokens", "Transdef",
    "TypeAlias"
  },
  symas={}, symcs={},
  symis={
    @Meta.SymI(
      offset=1155,
      name=@Meta.QName(kind=0, pack="ch.fhnw.thga.fregelanguageserver.compiler.CompilerHelper", base="Show_Message"),
      clas=@Meta.QName(kind=0, pack="frege.prelude.PreludeText", base="Show"), typ=0, lnks={},
      funs={
        @Meta.SymV(
          offset=1155,
          name=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.compiler.CompilerHelper", base="Show_Message",
            member="showsub"
          ),
          stri="s(s)", sig=1, depth=1, rkind=13, doc="inherited from 'Show.showsub'"
        ),
        @Meta.SymV(
          offset=1155,
          name=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.compiler.CompilerHelper", base="Show_Message",
            member="showList"
          ),
          stri="s(ss)", sig=4, depth=2, rkind=13, doc="inherited from 'Show.showList'"
        ),
        @Meta.SymV(
          offset=1155,
          name=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.compiler.CompilerHelper", base="Show_Message",
            member="showsPrec"
          ),
          stri="s(uss)", sig=6, depth=3, rkind=13, doc="inherited from 'Show.showsPrec'"
        ),
        @Meta.SymV(
          offset=1155,
          name=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.compiler.CompilerHelper", base="Show_Message",
            member="display"
          ),
          stri="s(s)", sig=1, depth=1, rkind=13, doc="inherited from 'Show.display'"
        ),
        @Meta.SymV(
          offset=1185,
          name=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.compiler.CompilerHelper", base="Show_Message",
            member="show"
          ),
          stri="s(s)", sig=1, depth=1, rkind=13
        ),
        @Meta.SymV(
          offset=1155,
          name=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.compiler.CompilerHelper", base="Show_Message",
            member="showChars"
          ),
          stri="s(s)", sig=7, depth=1, rkind=13, doc="inherited from 'Show.showChars'"
        )
      }
    )
  },
  symts={},
  symvs={
    @Meta.SymV(
      offset=3791,
      name=@Meta.QName(pack="ch.fhnw.thga.fregelanguageserver.compiler.CompilerHelper", base="switchState"),
      stri="s(u)", sig=9, depth=1, rkind=13
    ),
    @Meta.SymV(
      offset=1300,
      name=@Meta.QName(pack="ch.fhnw.thga.fregelanguageserver.compiler.CompilerHelper", base="standardLSPOptions"),
      stri="u", sig=10, depth=0, rkind=8
    ),
    @Meta.SymV(
      offset=3423,
      name=@Meta.QName(pack="ch.fhnw.thga.fregelanguageserver.compiler.CompilerHelper", base="standardLSPGlobal"),
      stri="u", sig=11, depth=0, rkind=8
    ),
    @Meta.SymV(
      offset=5959,
      name=@Meta.QName(
        pack="ch.fhnw.thga.fregelanguageserver.compiler.CompilerHelper", base="shouldCorrectlyConfigureExtraClasspath"
      ),
      stri="u", sig=12, depth=0, rkind=8
    ),
    @Meta.SymV(
      offset=5772, name=@Meta.QName(pack="ch.fhnw.thga.fregelanguageserver.compiler.CompilerHelper", base="runpass"),
      stri="s(s(uu))", sig=14, depth=1, rkind=13
    ),
    @Meta.SymV(
      offset=1974, name=@Meta.QName(pack="ch.fhnw.thga.fregelanguageserver.compiler.CompilerHelper", base="passes"),
      stri="u", sig=15, depth=0, rkind=8
    ),
    @Meta.SymV(
      offset=4278, name=@Meta.QName(pack="ch.fhnw.thga.fregelanguageserver.compiler.CompilerHelper", base="parsePass"),
      stri="s", sig=16, depth=0, rkind=13
    ),
    @Meta.SymV(
      offset=4113, name=@Meta.QName(pack="ch.fhnw.thga.fregelanguageserver.compiler.CompilerHelper", base="lexPassLSP"),
      stri="s(s)", sig=17, depth=1, rkind=13
    ),
    @Meta.SymV(
      offset=3897,
      name=@Meta.QName(pack="ch.fhnw.thga.fregelanguageserver.compiler.CompilerHelper", base="lexParseLSP"),
      stri="s(s)", sig=18, depth=1, rkind=13
    ),
    @Meta.SymV(
      offset=3169,
      name=@Meta.QName(pack="ch.fhnw.thga.fregelanguageserver.compiler.CompilerHelper", base="createLSPGlobal"),
      stri="s(s)", sig=19, depth=1, rkind=13
    ),
    @Meta.SymV(
      offset=5402,
      name=@Meta.QName(pack="ch.fhnw.thga.fregelanguageserver.compiler.CompilerHelper", base="compileFregeFile"),
      stri="s(u)", sig=20, depth=1, rkind=13
    ),
    @Meta.SymV(
      offset=5615, name=@Meta.QName(pack="ch.fhnw.thga.fregelanguageserver.compiler.CompilerHelper", base="compile"),
      stri="s(us)", sig=21, depth=2, rkind=13
    )
  },
  symls={
    @Meta.SymL(
      offset=114, name=@Meta.QName(pack="ch.fhnw.thga.fregelanguageserver.compiler.CompilerHelper", base="thisTarget"),
      alias=@Meta.QName(pack="frege.compiler.types.Targets", base="thisTarget")
    )
  },
  taus={
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.compiler.types.Global", base="Message")}),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="StringJ")}),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="Char")}),
    @Meta.Tau(kind=0, suba=1, subb=2),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="[]")}),
    @Meta.Tau(kind=0, suba=4, subb=0),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="Int")}),
    @Meta.Tau(kind=0, suba=4, subb=2),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.compiler.types.Global", base="Global")}),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.control.monad.State", base="State")}),
    @Meta.Tau(kind=0, suba=9, subb=8), @Meta.Tau(kind=0, suba=10, subb=8),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.compiler.types.Global", base="Options")}),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="ST")}),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="RealWorld")}),
    @Meta.Tau(kind=0, suba=13, subb=14), @Meta.Tau(kind=0, suba=15, subb=8),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.test.QuickCheckGen", base="Gen")}),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.test.QuickCheckProperty", base="Prop")}),
    @Meta.Tau(kind=0, suba=17, subb=18),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="(,)")}),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.control.monad.State", base="StateT")}),
    @Meta.Tau(kind=0, suba=21, subb=8), @Meta.Tau(kind=0, suba=22, subb=15), @Meta.Tau(kind=0, suba=20, subb=3),
    @Meta.Tau(kind=0, suba=24, subb=6), @Meta.Tau(kind=0, suba=23, subb=25), @Meta.Tau(kind=0, suba=20, subb=26),
    @Meta.Tau(kind=0, suba=27, subb=3),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="()")}),
    @Meta.Tau(kind=0, suba=23, subb=29), @Meta.Tau(kind=0, suba=4, subb=28), @Meta.Tau(kind=0, suba=10, subb=25),
    @Meta.Tau(kind=0, suba=23, subb=8)
  },
  rhos={
    @Meta.Rho(rhofun=false, rhotau=0), @Meta.Rho(rhofun=false, rhotau=3), @Meta.Rho(sigma=0, rhotau=1),
    @Meta.Rho(rhofun=false, rhotau=5), @Meta.Rho(sigma=3, rhotau=1), @Meta.Rho(sigma=2, rhotau=4),
    @Meta.Rho(rhofun=false, rhotau=6), @Meta.Rho(sigma=0, rhotau=4), @Meta.Rho(sigma=5, rhotau=7),
    @Meta.Rho(rhofun=false, rhotau=7), @Meta.Rho(sigma=0, rhotau=9), @Meta.Rho(rhofun=false, rhotau=8),
    @Meta.Rho(rhofun=false, rhotau=11), @Meta.Rho(sigma=8, rhotau=12), @Meta.Rho(rhofun=false, rhotau=12),
    @Meta.Rho(rhofun=false, rhotau=16), @Meta.Rho(rhofun=false, rhotau=19), @Meta.Rho(rhofun=false, rhotau=28),
    @Meta.Rho(rhofun=false, rhotau=30), @Meta.Rho(sigma=13, rhotau=18), @Meta.Rho(rhofun=false, rhotau=31),
    @Meta.Rho(rhofun=false, rhotau=32), @Meta.Rho(sigma=3, rhotau=21), @Meta.Rho(sigma=3, rhotau=12),
    @Meta.Rho(sigma=10, rhotau=15), @Meta.Rho(rhofun=false, rhotau=33), @Meta.Rho(sigma=3, rhotau=25),
    @Meta.Rho(sigma=11, rhotau=15), @Meta.Rho(sigma=3, rhotau=27)
  },
  sigmas={
    @Meta.Sigma(rho=0), @Meta.Sigma(rho=2), @Meta.Sigma(rho=3), @Meta.Sigma(rho=1), @Meta.Sigma(rho=5),
    @Meta.Sigma(rho=6), @Meta.Sigma(rho=8), @Meta.Sigma(rho=10), @Meta.Sigma(rho=11), @Meta.Sigma(rho=13),
    @Meta.Sigma(rho=14), @Meta.Sigma(rho=15), @Meta.Sigma(rho=16), @Meta.Sigma(rho=17), @Meta.Sigma(rho=19),
    @Meta.Sigma(rho=20), @Meta.Sigma(rho=21), @Meta.Sigma(rho=22), @Meta.Sigma(rho=23), @Meta.Sigma(rho=24),
    @Meta.Sigma(rho=26), @Meta.Sigma(rho=28)
  },
  exprs={@Meta.Expr()}
)
final public class CompilerHelper  {
  


final public static class IShow_Message implements PreludeText.CShow<Global.TMessage> {
  public IShow_Message() {}
  final public static IShow_Message it = new IShow_Message();
  @Override final public String/*<Character>*/ ƒshowsub(final Lazy<Global.TMessage> arg$1) {
    return IShow_Message.showsub(arg$1.call());
  }
  @Override final public String/*<Character>*/ ƒshowList(
    final Lazy<PreludeBase.TList<Global.TMessage>> arg$1, final Lazy<String/*<Character>*/> arg$2
  ) {
    return IShow_Message.showList(arg$1.call(), arg$2.call());
  }
  @Override final public String/*<Character>*/ ƒshowsPrec(
    final Lazy<Integer> arg$1, final Lazy<Global.TMessage> arg$2, final Lazy<String/*<Character>*/> arg$3
  ) {
    return IShow_Message.showsPrec(arg$1, arg$2.call(), arg$3.call());
  }
  @Override final public String/*<Character>*/ ƒdisplay(final Lazy<Global.TMessage> arg$1) {
    return IShow_Message.display(arg$1.call());
  }
  @Override final public String/*<Character>*/ ƒshow(final Lazy<Global.TMessage> arg$1) {
    return IShow_Message.show(arg$1.call());
  }
  @Override final public PreludeBase.TList<Character> ƒshowChars(final Lazy<Global.TMessage> arg$1) {
    return IShow_Message.showChars(arg$1.call());
  }
  final public static String/*<Character>*/ showsub(final Global.TMessage arg$1) {
    return IShow_Message.show(arg$1);
  }
  final public static String/*<Character>*/ showList(
    final PreludeBase.TList<Global.TMessage> arg$1, final String/*<Character>*/ arg$2
  ) {
    return "[" + (PreludeText.joined(
              Thunk.<String/*<Character>*/>lazy(", "),
              PreludeList.<String/*<Character>*/, Global.TMessage>map(
                    (Func.U<Global.TMessage, String/*<Character>*/>)((final Lazy<Global.TMessage> η$19513) -> Thunk.<
                          String/*<Character>*/
                        >shared((Lazy<String/*<Character>*/>)(() -> IShow_Message.show(η$19513.call())))),
                    arg$1
                  )
            ).call() + ("]" + arg$2));
  }
  final public static String/*<Character>*/ showsPrec(
    final Lazy<Integer> arg$1, final Global.TMessage arg$2, final String/*<Character>*/ arg$3
  ) {
    return IShow_Message.show(arg$2) + arg$3;
  }
  final public static String/*<Character>*/ display(final Global.TMessage arg$1) {
    return IShow_Message.show(arg$1);
  }
  final public static String/*<Character>*/ show(final Global.TMessage arg$1) {
    return Errors.IShow_Severity.show(Global.TMessage.level(arg$1)).substring(0, 1) + (" " + (TokenID.IShow_TokenID.show(
              Tokens.TToken.tokid(Positions.TPosition.first(Global.TMessage.pos(arg$1)))
            ) + (String.valueOf(Positions.TPosition.end(Global.TMessage.pos(arg$1))) + (": " + Global.TMessage.text(
              arg$1
            )))));
  }
  final public static PreludeBase.TList<Character> showChars(final Global.TMessage arg$1) {
    return PreludeList.IListView_StringJ.<Character>toList(IShow_Message.show(arg$1));
  }
}

final public static State.TState<Global.TGlobal, Global.TGlobal> switchState(final Lazy<Global.TGlobal> arg$1) {
  return State.TState.<Global.TGlobal, Global.TGlobal>mk(
            (Func.U<Global.TGlobal, PreludeBase.TTuple2<Global.TGlobal, Global.TGlobal>>)((
              final Lazy<Global.TGlobal> arg$19514
            ) -> {
                  final Global.TGlobal v7690$18358 = arg$19514.call();
                  final State.TState<Global.TGlobal, Short> $19516 = State.TState.<Global.TGlobal>put(
                        arg$1
                      );
                  final Func.U<Global.TGlobal, PreludeBase.TTuple2<Short, Global.TGlobal>> v8822$18394 =
                  $19516.mem$fun;
                  final PreludeBase.TTuple2<Short, Global.TGlobal> $19518 = v8822$18394
                  .apply(v7690$18358).call();
                  return PreludeBase.TTuple2.<Global.TGlobal, Global.TGlobal>mk(v7690$18358, $19518.mem2);
                })
          );
}
final public static Lazy<Global.TOptions> standardLSPOptions = Thunk.<Global.TOptions>shared(
      (Lazy<Global.TOptions>)(() -> {
            return Global.TOptions.mk(
                      "-",
                      PreludeBase.TList.DCons.<String/*<Character>*/>mk(
                            Thunk.<String/*<Character>*/>lazy("."), PreludeBase.TList.DList.<String/*<Character>*/>mk()
                          ),
                      (long)Bits.TBitSet.<Short>fromList(
                            Flags.IEnum_Flag.it,
                            PreludeBase.TList.DCons.<Short>mk(
                                  Thunk.<Short>lazy(Flags.TFlag.WARNINGS),
                                  PreludeBase.TList.DCons.<Short>mk(
                                        Thunk.<Short>lazy(Flags.TFlag.HINTS),
                                        PreludeBase.TList.DCons.<Short>mk(
                                              Thunk.<Short>lazy(Flags.TFlag.VERBOSE),
                                              PreludeBase.TList.DCons.<Short>mk(
                                                    Thunk.<Short>lazy(Flags.TFlag.IDEMODE),
                                                    PreludeBase.TList.DCons.<Short>mk(
                                                          Thunk.<Short>lazy(Flags.TFlag.IDETOKENS),
                                                          PreludeBase.TList.DCons.<Short>mk(
                                                                Thunk.<Short>lazy(Flags.TFlag.MAKE),
                                                                PreludeBase.TList.DList.<
                                                                  Short
                                                                >mk()
                                                              )
                                                        )
                                                  )
                                            )
                                      )
                                )
                          ),
                      ".", PreludeBase.TList.DList.<String/*<Character>*/>mk(), "",
                      PreludeBase.TMaybe.DJust.<String/*<Character>*/>mk(Thunk.<String/*<Character>*/>lazy("UTF-8")),
                      PreludeBase.TList.DList.<PreludeBase.TTuple2<Integer, Integer>>mk(), Targets.thisTarget.call(),
                      PreludeBase.TMaybe.DNothing.<frege.compiler.types.Types.TSigmaT<QNames.TQName>>mk(),
                      PreludeBase.TList.DList.<frege.compiler.types.Types.TSigmaT<QNames.TQName>>mk(),
                      PreludeBase.TList.DList.<Tokens.TToken>mk()
                    );
          })
    );
final public static State.TStateT<Global.TGlobal, Func.U<RealWorld, ?>, Short> runpass(
  final PreludeBase.TTuple2<
    State.TStateT<Global.TGlobal, Func.U<RealWorld, ?>, PreludeBase.TTuple2<String/*<Character>*/, Integer>>,
    String/*<Character>*/
  > arg$1
) {
  return State.TStateT.<Global.TGlobal, Func.U<RealWorld, ?>, Short>mk(
            (Func.U<Global.TGlobal, Kind.U<Func.U<RealWorld, ?>, PreludeBase.TTuple2<Short, Global.TGlobal>>>)((
              final Lazy<Global.TGlobal> arg$19519
            ) -> {
                  return Thunk.<Kind.U<Func.U<RealWorld, ?>, PreludeBase.TTuple2<Short, Global.TGlobal>>>lazy(
                            (Kind.U<Func.U<RealWorld, ?>, PreludeBase.TTuple2<Short, Global.TGlobal>>)(Func.U<
                              RealWorld, PreludeBase.TTuple2<Short, Global.TGlobal>
                            >)((final Lazy<RealWorld> arg$19520) -> {
                                  final PreludeBase.TTuple2<Global.TGlobal, Global.TGlobal> v2056$18519 =
                                  PreludeMonad.IMonad_ST.<RealWorld, PreludeBase.TTuple2<Global.TGlobal, Global.TGlobal>>pure(
                                        PreludeBase.TTuple2.<Global.TGlobal, Global.TGlobal>mk(
                                              arg$19519, arg$19519
                                            )
                                      ).apply(arg$19520).call();
                                  final Global.TGlobal v7737$18487 = v2056$18519.mem1
                                  .call();
                                  final State.TStateT<
                                    Global.TGlobal, Func.U<RealWorld, ?>, PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                  > $19523 = arg$1.mem1.call();
                                  if (Global.TGlobal.errors(v7737$18487) == 0) {
                                    final Func.U<
                                      RealWorld,
                                      PreludeBase.TTuple2<PreludeBase.TTuple2<String/*<Character>*/, Integer>, Global.TGlobal>
                                    > v2053$18639 = RunTM.<
                                      Func.U<
                                        Global.TGlobal,
                                        Func.U<
                                          RealWorld,
                                          PreludeBase.TTuple2<
                                            PreludeBase.TTuple2<String/*<Character>*/, Integer>, Global.TGlobal
                                          >
                                        >
                                      >
                                    >cast($19523.mem$run).apply(v2056$18519.mem2).call();
                                    final PreludeBase.TTuple2<
                                      PreludeBase.TTuple2<String/*<Character>*/, Integer>, Global.TGlobal
                                    > v2056$18641 = v2053$18639.apply(arg$19520).call();
                                    final PreludeBase.TTuple2<String/*<Character>*/, Integer> v7737$18642 =
                                    v2056$18641.mem1.call();
                                    final Func.U<RealWorld, PreludeBase.TTuple2<Short, Global.TGlobal>> v2057$18647 =
                                    PreludeMonad.IMonad_ST.<RealWorld, PreludeBase.TTuple2<Short, Global.TGlobal>>pure(
                                          PreludeBase.TTuple2.<Short, Global.TGlobal>mk(
                                                Thunk.<Short>lazy(PreludeBase.TUnit.Unit), v2056$18641.mem2
                                              )
                                        );
                                    return Thunk.<PreludeBase.TTuple2<Short, Global.TGlobal>>nested(
                                              (Lazy<Lazy<PreludeBase.TTuple2<Short, Global.TGlobal>>>)(() -> v2057$18647
                                                  .apply(arg$19520))
                                            );
                                  }
                                  else {
                                    final Func.U<RealWorld, PreludeBase.TTuple2<Short, Global.TGlobal>> v2057$18653 =
                                    PreludeMonad.IMonad_ST.<RealWorld, PreludeBase.TTuple2<Short, Global.TGlobal>>pure(
                                          PreludeBase.TTuple2.<Short, Global.TGlobal>mk(
                                                Thunk.<Short>lazy(PreludeBase.TUnit.Unit), v2056$18519.mem2
                                              )
                                        );
                                    return Thunk.<PreludeBase.TTuple2<Short, Global.TGlobal>>nested(
                                              (Lazy<Lazy<PreludeBase.TTuple2<Short, Global.TGlobal>>>)(() -> v2057$18653
                                                  .apply(arg$19520))
                                            );
                                  }
                                })
                          );
                })
          );
}
final public static Lazy<PreludeBase.TList<
  PreludeBase.TTuple2<
    State.TStateT<Global.TGlobal, Func.U<RealWorld, ?>, PreludeBase.TTuple2<String/*<Character>*/, Integer>>,
    String/*<Character>*/
  >
>> passes = Thunk.<
  PreludeBase.TList<
    PreludeBase.TTuple2<
      State.TStateT<Global.TGlobal, Func.U<RealWorld, ?>, PreludeBase.TTuple2<String/*<Character>*/, Integer>>,
      String/*<Character>*/
    >
  >
>shared(
      (Lazy<PreludeBase.TList<
        PreludeBase.TTuple2<
          State.TStateT<Global.TGlobal, Func.U<RealWorld, ?>, PreludeBase.TTuple2<String/*<Character>*/, Integer>>,
          String/*<Character>*/
        >
      >>)(() -> {
            return PreludeBase.TList.DCons.<
                  PreludeBase.TTuple2<
                    State.TStateT<Global.TGlobal, Func.U<RealWorld, ?>, PreludeBase.TTuple2<String/*<Character>*/, Integer>>,
                    String/*<Character>*/
                  >
                >mk(
                      PreludeBase.TTuple2.<
                        State.TStateT<
                          Global.TGlobal, Func.U<RealWorld, ?>, PreludeBase.TTuple2<String/*<Character>*/, Integer>
                        >,
                        String/*<Character>*/
                      >mk(
                            Thunk.<
                              State.TStateT<
                                Global.TGlobal, Func.U<RealWorld, ?>, PreludeBase.TTuple2<String/*<Character>*/, Integer>
                              >
                            >shared(
                                  (Lazy<State.TStateT<
                                    Global.TGlobal, Func.U<RealWorld, ?>, PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                  >>)(() -> State.<
                                        Func.U<RealWorld, ?>, PreludeBase.TTuple2<String/*<Character>*/, Integer>,
                                        Global.TGlobal
                                      >promote(PreludeMonad.IMonad_ST.<RealWorld>mk(), Fix.pass))
                                ),
                            Thunk.<String/*<Character>*/>lazy("join definitions")
                          ),
                      PreludeBase.TList.DCons.<
                        PreludeBase.TTuple2<
                          State.TStateT<
                            Global.TGlobal, Func.U<RealWorld, ?>, PreludeBase.TTuple2<String/*<Character>*/, Integer>
                          >,
                          String/*<Character>*/
                        >
                      >mk(
                            PreludeBase.TTuple2.<
                              State.TStateT<
                                Global.TGlobal, Func.U<RealWorld, ?>, PreludeBase.TTuple2<String/*<Character>*/, Integer>
                              >,
                              String/*<Character>*/
                            >mk(Imp.pass, Thunk.<String/*<Character>*/>lazy("import packages")),
                            PreludeBase.TList.DCons.<
                              PreludeBase.TTuple2<
                                State.TStateT<
                                  Global.TGlobal, Func.U<RealWorld, ?>, PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                >,
                                String/*<Character>*/
                              >
                            >mk(
                                  PreludeBase.TTuple2.<
                                    State.TStateT<
                                      Global.TGlobal, Func.U<RealWorld, ?>, PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                    >,
                                    String/*<Character>*/
                                  >mk(
                                        Thunk.<
                                          State.TStateT<
                                            Global.TGlobal, Func.U<RealWorld, ?>,
                                            PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                          >
                                        >shared(
                                              (Lazy<State.TStateT<
                                                Global.TGlobal, Func.U<RealWorld, ?>,
                                                PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                              >>)(() -> State.<
                                                    Func.U<RealWorld, ?>, PreludeBase.TTuple2<String/*<Character>*/, Integer>,
                                                    Global.TGlobal
                                                  >promote(
                                                        PreludeMonad.IMonad_ST.<RealWorld>mk(),
                                                        Thunk.<
                                                          State.TState<
                                                            Global.TGlobal, PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                                          >
                                                        >shared(
                                                              (Lazy<State.TState<
                                                                Global.TGlobal,
                                                                PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                                              >>)(() -> Classes.passI(
                                                                        Thunk.<Boolean>lazy(
                                                                              true
                                                                            )
                                                                      ))
                                                            )
                                                      ))
                                            ),
                                        Thunk.<String/*<Character>*/>lazy("verify imported instances")
                                      ),
                                  PreludeBase.TList.DCons.<
                                    PreludeBase.TTuple2<
                                      State.TStateT<
                                        Global.TGlobal, Func.U<RealWorld, ?>,
                                        PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                      >,
                                      String/*<Character>*/
                                    >
                                  >mk(
                                        PreludeBase.TTuple2.<
                                          State.TStateT<
                                            Global.TGlobal, Func.U<RealWorld, ?>,
                                            PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                          >,
                                          String/*<Character>*/
                                        >mk(
                                              Thunk.<
                                                State.TStateT<
                                                  Global.TGlobal, Func.U<RealWorld, ?>,
                                                  PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                                >
                                              >shared(
                                                    (Lazy<State.TStateT<
                                                      Global.TGlobal, Func.U<RealWorld, ?>,
                                                      PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                                    >>)(() -> State.<
                                                          Func.U<RealWorld, ?>,
                                                          PreludeBase.TTuple2<String/*<Character>*/, Integer>, Global.TGlobal
                                                        >promote(PreludeMonad.IMonad_ST.<RealWorld>mk(), Enter.pass))
                                                  ),
                                              Thunk.<String/*<Character>*/>lazy("enter definitions")
                                            ),
                                        PreludeBase.TList.DCons.<
                                          PreludeBase.TTuple2<
                                            State.TStateT<
                                              Global.TGlobal, Func.U<RealWorld, ?>,
                                              PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                            >,
                                            String/*<Character>*/
                                          >
                                        >mk(
                                              PreludeBase.TTuple2.<
                                                State.TStateT<
                                                  Global.TGlobal, Func.U<RealWorld, ?>,
                                                  PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                                >,
                                                String/*<Character>*/
                                              >mk(
                                                    Thunk.<
                                                      State.TStateT<
                                                        Global.TGlobal, Func.U<RealWorld, ?>,
                                                        PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                                      >
                                                    >shared(
                                                          (Lazy<State.TStateT<
                                                            Global.TGlobal, Func.U<RealWorld, ?>,
                                                            PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                                          >>)(() -> State.<
                                                                Func.U<RealWorld, ?>,
                                                                PreludeBase.TTuple2<String/*<Character>*/, Integer>,
                                                                Global.TGlobal
                                                              >promote(PreludeMonad.IMonad_ST.<RealWorld>mk(), Fields.pass))
                                                        ),
                                                    Thunk.<String/*<Character>*/>lazy(
                                                          "field definitions"
                                                        )
                                                  ),
                                              PreludeBase.TList.DCons.<
                                                PreludeBase.TTuple2<
                                                  State.TStateT<
                                                    Global.TGlobal, Func.U<RealWorld, ?>,
                                                    PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                                  >,
                                                  String/*<Character>*/
                                                >
                                              >mk(
                                                    PreludeBase.TTuple2.<
                                                      State.TStateT<
                                                        Global.TGlobal, Func.U<RealWorld, ?>,
                                                        PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                                      >,
                                                      String/*<Character>*/
                                                    >mk(
                                                          Thunk.<
                                                            State.TStateT<
                                                              Global.TGlobal, Func.U<RealWorld, ?>,
                                                              PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                                            >
                                                          >shared(
                                                                (Lazy<State.TStateT<
                                                                  Global.TGlobal, Func.U<RealWorld, ?>,
                                                                  PreludeBase.TTuple2<
                                                                    String/*<Character>*/, Integer
                                                                  >
                                                                >>)(() -> State.<
                                                                      Func.U<RealWorld, ?>,
                                                                      PreludeBase.TTuple2<
                                                                        String/*<Character>*/, Integer
                                                                      >,
                                                                      Global.TGlobal
                                                                    >promote(
                                                                          PreludeMonad.IMonad_ST.<RealWorld>mk(), TypeAlias.pass
                                                                        ))
                                                              ),
                                                          Thunk.<String/*<Character>*/>lazy(
                                                                "process type aliases"
                                                              )
                                                        ),
                                                    PreludeBase.TList.DCons.<
                                                      PreludeBase.TTuple2<
                                                        State.TStateT<
                                                          Global.TGlobal, Func.U<RealWorld, ?>,
                                                          PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                                        >,
                                                        String/*<Character>*/
                                                      >
                                                    >mk(
                                                          PreludeBase.TTuple2.<
                                                            State.TStateT<
                                                              Global.TGlobal, Func.U<RealWorld, ?>,
                                                              PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                                            >,
                                                            String/*<Character>*/
                                                          >mk(
                                                                Thunk.<
                                                                  State.TStateT<
                                                                    Global.TGlobal, Func.U<RealWorld, ?>,
                                                                    PreludeBase.TTuple2<
                                                                      String/*<Character>*/, Integer
                                                                    >
                                                                  >
                                                                >shared(
                                                                      (Lazy<State.TStateT<
                                                                        Global.TGlobal, Func.U<RealWorld, ?>,
                                                                        PreludeBase.TTuple2<
                                                                          String/*<Character>*/, Integer
                                                                        >
                                                                      >>)(() -> State.<
                                                                            Func.U<RealWorld, ?>,
                                                                            PreludeBase.TTuple2<
                                                                              String/*<Character>*/, Integer
                                                                            >,
                                                                            Global.TGlobal
                                                                          >promote(
                                                                                PreludeMonad.IMonad_ST.<
                                                                                  RealWorld
                                                                                >mk(),
                                                                                Thunk.<
                                                                                  State.TState<
                                                                                    Global.TGlobal,
                                                                                    PreludeBase.TTuple2<
                                                                                      String/*
                                                                                        <
                                                                                          Character
                                                                                        >
                                                                                      */,
                                                                                      Integer
                                                                                    >
                                                                                  >
                                                                                >shared(
                                                                                      (Lazy<State.TState<
                                                                                        Global.TGlobal,
                                                                                        PreludeBase.TTuple2<
                                                                                          String/*
                                                                                            <
                                                                                              Character
                                                                                            >
                                                                                          */,
                                                                                          Integer
                                                                                        >
                                                                                      >>)(() -> Instances.pass(
                                                                                                PreludeBase.TUnit.Unit
                                                                                              ))
                                                                                    )
                                                                              ))
                                                                    ),
                                                                Thunk.<String/*<Character>*/>lazy(
                                                                      "derive and enter instances"
                                                                    )
                                                              ),
                                                          PreludeBase.TList.DCons.<
                                                            PreludeBase.TTuple2<
                                                              State.TStateT<
                                                                Global.TGlobal, Func.U<RealWorld, ?>,
                                                                PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                                              >,
                                                              String/*<Character>*/
                                                            >
                                                          >mk(
                                                                PreludeBase.TTuple2.<
                                                                  State.TStateT<
                                                                    Global.TGlobal, Func.U<RealWorld, ?>,
                                                                    PreludeBase.TTuple2<
                                                                      String/*<Character>*/, Integer
                                                                    >
                                                                  >,
                                                                  String/*<Character>*/
                                                                >mk(
                                                                      Transdef.pass,
                                                                      Thunk.<String/*<Character>*/>lazy(
                                                                            "resolve names"
                                                                          )
                                                                    ),
                                                                PreludeBase.TList.DCons.<
                                                                  PreludeBase.TTuple2<
                                                                    State.TStateT<
                                                                      Global.TGlobal, Func.U<RealWorld, ?>,
                                                                      PreludeBase.TTuple2<
                                                                        String/*<Character>*/, Integer
                                                                      >
                                                                    >,
                                                                    String/*<Character>*/
                                                                  >
                                                                >mk(
                                                                      PreludeBase.TTuple2.<
                                                                        State.TStateT<
                                                                          Global.TGlobal, Func.U<RealWorld, ?>,
                                                                          PreludeBase.TTuple2<
                                                                            String/*<Character>*/, Integer
                                                                          >
                                                                        >,
                                                                        String/*<Character>*/
                                                                      >mk(
                                                                            Thunk.<
                                                                              State.TStateT<
                                                                                Global.TGlobal, Func.U<RealWorld, ?>,
                                                                                PreludeBase.TTuple2<
                                                                                  String/*<Character>*/, Integer
                                                                                >
                                                                              >
                                                                            >shared(
                                                                                  (Lazy<State.TStateT<
                                                                                    Global.TGlobal, Func.U<RealWorld, ?>,
                                                                                    PreludeBase.TTuple2<
                                                                                      String/*
                                                                                        <
                                                                                          Character
                                                                                        >
                                                                                      */,
                                                                                      Integer
                                                                                    >
                                                                                  >>)(() -> State.<
                                                                                        Func.U<
                                                                                          RealWorld,
                                                                                          ?
                                                                                        >,
                                                                                        PreludeBase.TTuple2<
                                                                                          String/*
                                                                                            <
                                                                                              Character
                                                                                            >
                                                                                          */,
                                                                                          Integer
                                                                                        >,
                                                                                        Global.TGlobal
                                                                                      >promote(
                                                                                            PreludeMonad.IMonad_ST.<
                                                                                              RealWorld
                                                                                            >mk(),
                                                                                            Classes.passC
                                                                                          ))
                                                                                ),
                                                                            Thunk.<String/*<Character>*/>lazy(
                                                                                  "verify class definitions"
                                                                                )
                                                                          ),
                                                                      PreludeBase.TList.DCons.<
                                                                        PreludeBase.TTuple2<
                                                                          State.TStateT<
                                                                            Global.TGlobal, Func.U<RealWorld, ?>,
                                                                            PreludeBase.TTuple2<
                                                                              String/*<Character>*/, Integer
                                                                            >
                                                                          >,
                                                                          String/*<Character>*/
                                                                        >
                                                                      >mk(
                                                                            PreludeBase.TTuple2.<
                                                                              State.TStateT<
                                                                                Global.TGlobal, Func.U<RealWorld, ?>,
                                                                                PreludeBase.TTuple2<
                                                                                  String/*<Character>*/, Integer
                                                                                >
                                                                              >,
                                                                              String/*<Character>*/
                                                                            >mk(
                                                                                  Thunk.<
                                                                                    State.TStateT<
                                                                                      Global.TGlobal,
                                                                                      Func.U<
                                                                                        RealWorld,
                                                                                        ?
                                                                                      >,
                                                                                      PreludeBase.TTuple2<
                                                                                        String/*
                                                                                          <
                                                                                            Character
                                                                                          >
                                                                                        */,
                                                                                        Integer
                                                                                      >
                                                                                    >
                                                                                  >shared(
                                                                                        (Lazy<State.TStateT<
                                                                                          Global.TGlobal,
                                                                                          Func.U<
                                                                                            RealWorld,
                                                                                            ?
                                                                                          >,
                                                                                          PreludeBase.TTuple2<
                                                                                            String/*
                                                                                              <
                                                                                                Character
                                                                                              >
                                                                                            */,
                                                                                            Integer
                                                                                          >
                                                                                        >>)(() -> Global.<
                                                                                              PreludeBase.TTuple2<
                                                                                                String/*
                                                                                                  <
                                                                                                    Character
                                                                                                  >
                                                                                                */,
                                                                                                Integer
                                                                                              >
                                                                                            >liftStG(
                                                                                                  Thunk.<
                                                                                                    State.TState<
                                                                                                      Global.TGlobal,
                                                                                                      PreludeBase.TTuple2<
                                                                                                        String/*
                                                                                                          <
                                                                                                            Character
                                                                                                          >
                                                                                                        */,
                                                                                                        Integer
                                                                                                      >
                                                                                                    >
                                                                                                  >shared(
                                                                                                        (Lazy<State.TState<
                                                                                                          Global.TGlobal,
                                                                                                          PreludeBase.TTuple2<
                                                                                                            String/*
                                                                                                              <
                                                                                                                Character
                                                                                                              >
                                                                                                            */,
                                                                                                            Integer
                                                                                                          >
                                                                                                        >>)(() -> Classes.passI(
                                                                                                                  Thunk.<
                                                                                                                    Boolean
                                                                                                                  >lazy(
                                                                                                                        false
                                                                                                                      )
                                                                                                                ))
                                                                                                      )
                                                                                                ))
                                                                                      ),
                                                                                  Thunk.<
                                                                                    String/*
                                                                                      <
                                                                                        Character
                                                                                      >
                                                                                    */
                                                                                  >lazy(
                                                                                        "verify own instances"
                                                                                      )
                                                                                ),
                                                                            PreludeBase.TList.DCons.<
                                                                              PreludeBase.TTuple2<
                                                                                State.TStateT<
                                                                                  Global.TGlobal, Func.U<RealWorld, ?>,
                                                                                  PreludeBase.TTuple2<
                                                                                    String/*<Character>*/, Integer
                                                                                  >
                                                                                >,
                                                                                String/*
                                                                                  <Character>
                                                                                */
                                                                              >
                                                                            >mk(
                                                                                  PreludeBase.TTuple2.<
                                                                                    State.TStateT<
                                                                                      Global.TGlobal,
                                                                                      Func.U<
                                                                                        RealWorld,
                                                                                        ?
                                                                                      >,
                                                                                      PreludeBase.TTuple2<
                                                                                        String/*
                                                                                          <
                                                                                            Character
                                                                                          >
                                                                                        */,
                                                                                        Integer
                                                                                      >
                                                                                    >,
                                                                                    String/*
                                                                                      <
                                                                                        Character
                                                                                      >
                                                                                    */
                                                                                  >mk(
                                                                                        Thunk.<
                                                                                          State.TStateT<
                                                                                            Global.TGlobal,
                                                                                            Func.U<
                                                                                              RealWorld,
                                                                                              ?
                                                                                            >,
                                                                                            PreludeBase.TTuple2<
                                                                                              String/*
                                                                                                <
                                                                                                  Character
                                                                                                >
                                                                                              */,
                                                                                              Integer
                                                                                            >
                                                                                          >
                                                                                        >shared(
                                                                                              (Lazy<State.TStateT<
                                                                                                Global.TGlobal,
                                                                                                Func.U<
                                                                                                  RealWorld,
                                                                                                  ?
                                                                                                >,
                                                                                                PreludeBase.TTuple2<
                                                                                                  String/*
                                                                                                    <
                                                                                                      Character
                                                                                                    >
                                                                                                  */,
                                                                                                  Integer
                                                                                                >
                                                                                              >>)(() -> State.<
                                                                                                    Func.U<
                                                                                                      RealWorld,
                                                                                                      ?
                                                                                                    >,
                                                                                                    PreludeBase.TTuple2<
                                                                                                      String/*
                                                                                                        <
                                                                                                          Character
                                                                                                        >
                                                                                                      */,
                                                                                                      Integer
                                                                                                    >,
                                                                                                    Global.TGlobal
                                                                                                  >promote(
                                                                                                        PreludeMonad.IMonad_ST.<
                                                                                                          RealWorld
                                                                                                        >mk(),
                                                                                                        LetUnroll.pass
                                                                                                      ))
                                                                                            ),
                                                                                        Thunk.<
                                                                                          String/*
                                                                                            <
                                                                                              Character
                                                                                            >
                                                                                          */
                                                                                        >lazy(
                                                                                              "simplify lets"
                                                                                            )
                                                                                      ),
                                                                                  PreludeBase.TList.DCons.<
                                                                                    PreludeBase.TTuple2<
                                                                                      State.TStateT<
                                                                                        Global.TGlobal,
                                                                                        Func.U<
                                                                                          RealWorld,
                                                                                          ?
                                                                                        >,
                                                                                        PreludeBase.TTuple2<
                                                                                          String/*
                                                                                            <
                                                                                              Character
                                                                                            >
                                                                                          */,
                                                                                          Integer
                                                                                        >
                                                                                      >,
                                                                                      String/*
                                                                                        <
                                                                                          Character
                                                                                        >
                                                                                      */
                                                                                    >
                                                                                  >mk(
                                                                                        PreludeBase.TTuple2.<
                                                                                          State.TStateT<
                                                                                            Global.TGlobal,
                                                                                            Func.U<
                                                                                              RealWorld,
                                                                                              ?
                                                                                            >,
                                                                                            PreludeBase.TTuple2<
                                                                                              String/*
                                                                                                <
                                                                                                  Character
                                                                                                >
                                                                                              */,
                                                                                              Integer
                                                                                            >
                                                                                          >,
                                                                                          String/*
                                                                                            <
                                                                                              Character
                                                                                            >
                                                                                          */
                                                                                        >mk(
                                                                                              Typecheck.pass,
                                                                                              Thunk.<
                                                                                                String/*
                                                                                                  <
                                                                                                    Character
                                                                                                  >
                                                                                                */
                                                                                              >lazy(
                                                                                                    "type check"
                                                                                                  )
                                                                                            ),
                                                                                        PreludeBase.TList.DCons.<
                                                                                          PreludeBase.TTuple2<
                                                                                            State.TStateT<
                                                                                              Global.TGlobal,
                                                                                              Func.U<
                                                                                                RealWorld,
                                                                                                ?
                                                                                              >,
                                                                                              PreludeBase.TTuple2<
                                                                                                String/*
                                                                                                  <
                                                                                                    Character
                                                                                                  >
                                                                                                */,
                                                                                                Integer
                                                                                              >
                                                                                            >,
                                                                                            String/*
                                                                                              <
                                                                                                Character
                                                                                              >
                                                                                            */
                                                                                          >
                                                                                        >mk(
                                                                                              PreludeBase.TTuple2.<
                                                                                                State.TStateT<
                                                                                                  Global.TGlobal,
                                                                                                  Func.U<
                                                                                                    RealWorld,
                                                                                                    ?
                                                                                                  >,
                                                                                                  PreludeBase.TTuple2<
                                                                                                    String/*
                                                                                                      <
                                                                                                        Character
                                                                                                      >
                                                                                                    */,
                                                                                                    Integer
                                                                                                  >
                                                                                                >,
                                                                                                String/*
                                                                                                  <
                                                                                                    Character
                                                                                                  >
                                                                                                */
                                                                                              >mk(
                                                                                                    Thunk.<
                                                                                                      State.TStateT<
                                                                                                        Global.TGlobal,
                                                                                                        Func.U<
                                                                                                          RealWorld,
                                                                                                          ?
                                                                                                        >,
                                                                                                        PreludeBase.TTuple2<
                                                                                                          String/*
                                                                                                            <
                                                                                                              Character
                                                                                                            >
                                                                                                          */,
                                                                                                          Integer
                                                                                                        >
                                                                                                      >
                                                                                                    >shared(
                                                                                                          (Lazy<State.TStateT<
                                                                                                            Global.TGlobal,
                                                                                                            Func.U<
                                                                                                              RealWorld,
                                                                                                              ?
                                                                                                            >,
                                                                                                            PreludeBase.TTuple2<
                                                                                                              String/*
                                                                                                                <
                                                                                                                  Character
                                                                                                                >
                                                                                                              */,
                                                                                                              Integer
                                                                                                            >
                                                                                                          >>)(() -> State.<
                                                                                                                Func.U<
                                                                                                                  RealWorld,
                                                                                                                  ?
                                                                                                                >,
                                                                                                                PreludeBase.TTuple2<
                                                                                                                  String/*
                                                                                                                    <
                                                                                                                      Character
                                                                                                                    >
                                                                                                                  */,
                                                                                                                  Integer
                                                                                                                >,
                                                                                                                Global.TGlobal
                                                                                                              >promote(
                                                                                                                    PreludeMonad.IMonad_ST.<
                                                                                                                      RealWorld
                                                                                                                    >mk(),
                                                                                                                    Easy.pass
                                                                                                                  ))
                                                                                                        ),
                                                                                                    Thunk.<
                                                                                                      String/*
                                                                                                        <
                                                                                                          Character
                                                                                                        >
                                                                                                      */
                                                                                                    >lazy(
                                                                                                          "simplify expressions"
                                                                                                        )
                                                                                                  ),
                                                                                              PreludeBase.TList.DCons.<
                                                                                                PreludeBase.TTuple2<
                                                                                                  State.TStateT<
                                                                                                    Global.TGlobal,
                                                                                                    Func.U<
                                                                                                      RealWorld,
                                                                                                      ?
                                                                                                    >,
                                                                                                    PreludeBase.TTuple2<
                                                                                                      String/*
                                                                                                        <
                                                                                                          Character
                                                                                                        >
                                                                                                      */,
                                                                                                      Integer
                                                                                                    >
                                                                                                  >,
                                                                                                  String/*
                                                                                                    <
                                                                                                      Character
                                                                                                    >
                                                                                                  */
                                                                                                >
                                                                                              >mk(
                                                                                                    PreludeBase.TTuple2.<
                                                                                                      State.TStateT<
                                                                                                        Global.TGlobal,
                                                                                                        Func.U<
                                                                                                          RealWorld,
                                                                                                          ?
                                                                                                        >,
                                                                                                        PreludeBase.TTuple2<
                                                                                                          String/*
                                                                                                            <
                                                                                                              Character
                                                                                                            >
                                                                                                          */,
                                                                                                          Integer
                                                                                                        >
                                                                                                      >,
                                                                                                      String/*
                                                                                                        <
                                                                                                          Character
                                                                                                        >
                                                                                                      */
                                                                                                    >mk(
                                                                                                          Thunk.<
                                                                                                            State.TStateT<
                                                                                                              Global.TGlobal,
                                                                                                              Func.U<
                                                                                                                RealWorld,
                                                                                                                ?
                                                                                                              >,
                                                                                                              PreludeBase.TTuple2<
                                                                                                                String/*
                                                                                                                  <
                                                                                                                    Character
                                                                                                                  >
                                                                                                                */,
                                                                                                                Integer
                                                                                                              >
                                                                                                            >
                                                                                                          >shared(
                                                                                                                (Lazy<State.TStateT<
                                                                                                                  Global.TGlobal,
                                                                                                                  Func.U<
                                                                                                                    RealWorld,
                                                                                                                    ?
                                                                                                                  >,
                                                                                                                  PreludeBase.TTuple2<
                                                                                                                    String/*
                                                                                                                      <
                                                                                                                        Character
                                                                                                                      >
                                                                                                                    */,
                                                                                                                    Integer
                                                                                                                  >
                                                                                                                >>)(() -> State.<
                                                                                                                      Func.U<
                                                                                                                        RealWorld,
                                                                                                                        ?
                                                                                                                      >,
                                                                                                                      PreludeBase.TTuple2<
                                                                                                                        String/*
                                                                                                                          <
                                                                                                                            Character
                                                                                                                          >
                                                                                                                        */,
                                                                                                                        Integer
                                                                                                                      >,
                                                                                                                      Global.TGlobal
                                                                                                                    >promote(
                                                                                                                          PreludeMonad.IMonad_ST.<
                                                                                                                            RealWorld
                                                                                                                          >mk(),
                                                                                                                          GlobalLam.pass
                                                                                                                        ))
                                                                                                              ),
                                                                                                          Thunk.<
                                                                                                            String/*
                                                                                                              <
                                                                                                                Character
                                                                                                              >
                                                                                                            */
                                                                                                          >lazy(
                                                                                                                "globalize anonymous lambdas"
                                                                                                              )
                                                                                                        ),
                                                                                                    PreludeBase.TList.DCons.<
                                                                                                      PreludeBase.TTuple2<
                                                                                                        State.TStateT<
                                                                                                          Global.TGlobal,
                                                                                                          Func.U<
                                                                                                            RealWorld,
                                                                                                            ?
                                                                                                          >,
                                                                                                          PreludeBase.TTuple2<
                                                                                                            String/*
                                                                                                              <
                                                                                                                Character
                                                                                                              >
                                                                                                            */,
                                                                                                            Integer
                                                                                                          >
                                                                                                        >,
                                                                                                        String/*
                                                                                                          <
                                                                                                            Character
                                                                                                          >
                                                                                                        */
                                                                                                      >
                                                                                                    >mk(
                                                                                                          PreludeBase.TTuple2.<
                                                                                                            State.TStateT<
                                                                                                              Global.TGlobal,
                                                                                                              Func.U<
                                                                                                                RealWorld,
                                                                                                                ?
                                                                                                              >,
                                                                                                              PreludeBase.TTuple2<
                                                                                                                String/*
                                                                                                                  <
                                                                                                                    Character
                                                                                                                  >
                                                                                                                */,
                                                                                                                Integer
                                                                                                              >
                                                                                                            >,
                                                                                                            String/*
                                                                                                              <
                                                                                                                Character
                                                                                                              >
                                                                                                            */
                                                                                                          >mk(
                                                                                                                Thunk.<
                                                                                                                  State.TStateT<
                                                                                                                    Global.TGlobal,
                                                                                                                    Func.U<
                                                                                                                      RealWorld,
                                                                                                                      ?
                                                                                                                    >,
                                                                                                                    PreludeBase.TTuple2<
                                                                                                                      String/*
                                                                                                                        <
                                                                                                                          Character
                                                                                                                        >
                                                                                                                      */,
                                                                                                                      Integer
                                                                                                                    >
                                                                                                                  >
                                                                                                                >shared(
                                                                                                                      (Lazy<State.TStateT<
                                                                                                                        Global.TGlobal,
                                                                                                                        Func.U<
                                                                                                                          RealWorld,
                                                                                                                          ?
                                                                                                                        >,
                                                                                                                        PreludeBase.TTuple2<
                                                                                                                          String/*
                                                                                                                            <
                                                                                                                              Character
                                                                                                                            >
                                                                                                                          */,
                                                                                                                          Integer
                                                                                                                        >
                                                                                                                      >>)(() -> State.<
                                                                                                                            Func.U<
                                                                                                                              RealWorld,
                                                                                                                              ?
                                                                                                                            >,
                                                                                                                            PreludeBase.TTuple2<
                                                                                                                              String/*
                                                                                                                                <
                                                                                                                                  Character
                                                                                                                                >
                                                                                                                              */,
                                                                                                                              Integer
                                                                                                                            >,
                                                                                                                            Global.TGlobal
                                                                                                                          >promote(
                                                                                                                                PreludeMonad.IMonad_ST.<
                                                                                                                                  RealWorld
                                                                                                                                >mk(),
                                                                                                                                Strict.pass
                                                                                                                              ))
                                                                                                                    ),
                                                                                                                Thunk.<
                                                                                                                  String/*
                                                                                                                    <
                                                                                                                      Character
                                                                                                                    >
                                                                                                                  */
                                                                                                                >lazy(
                                                                                                                      "strictness analysis"
                                                                                                                    )
                                                                                                              ),
                                                                                                          PreludeBase.TList.DCons.<
                                                                                                            PreludeBase.TTuple2<
                                                                                                              State.TStateT<
                                                                                                                Global.TGlobal,
                                                                                                                Func.U<
                                                                                                                  RealWorld,
                                                                                                                  ?
                                                                                                                >,
                                                                                                                PreludeBase.TTuple2<
                                                                                                                  String/*
                                                                                                                    <
                                                                                                                      Character
                                                                                                                    >
                                                                                                                  */,
                                                                                                                  Integer
                                                                                                                >
                                                                                                              >,
                                                                                                              String/*
                                                                                                                <
                                                                                                                  Character
                                                                                                                >
                                                                                                              */
                                                                                                            >
                                                                                                          >mk(
                                                                                                                PreludeBase.TTuple2.<
                                                                                                                  State.TStateT<
                                                                                                                    Global.TGlobal,
                                                                                                                    Func.U<
                                                                                                                      RealWorld,
                                                                                                                      ?
                                                                                                                    >,
                                                                                                                    PreludeBase.TTuple2<
                                                                                                                      String/*
                                                                                                                        <
                                                                                                                          Character
                                                                                                                        >
                                                                                                                      */,
                                                                                                                      Integer
                                                                                                                    >
                                                                                                                  >,
                                                                                                                  String/*
                                                                                                                    <
                                                                                                                      Character
                                                                                                                    >
                                                                                                                  */
                                                                                                                >mk(
                                                                                                                      Thunk.<
                                                                                                                        State.TStateT<
                                                                                                                          Global.TGlobal,
                                                                                                                          Func.U<
                                                                                                                            RealWorld,
                                                                                                                            ?
                                                                                                                          >,
                                                                                                                          PreludeBase.TTuple2<
                                                                                                                            String/*
                                                                                                                              <
                                                                                                                                Character
                                                                                                                              >
                                                                                                                            */,
                                                                                                                            Integer
                                                                                                                          >
                                                                                                                        >
                                                                                                                      >shared(
                                                                                                                            (Lazy<State.TStateT<
                                                                                                                              Global.TGlobal,
                                                                                                                              Func.U<
                                                                                                                                RealWorld,
                                                                                                                                ?
                                                                                                                              >,
                                                                                                                              PreludeBase.TTuple2<
                                                                                                                                String/*
                                                                                                                                  <
                                                                                                                                    Character
                                                                                                                                  >
                                                                                                                                */,
                                                                                                                                Integer
                                                                                                                              >
                                                                                                                            >>)(() -> State.<
                                                                                                                                  Func.U<
                                                                                                                                    RealWorld,
                                                                                                                                    ?
                                                                                                                                  >,
                                                                                                                                  PreludeBase.TTuple2<
                                                                                                                                    String/*
                                                                                                                                      <
                                                                                                                                        Character
                                                                                                                                      >
                                                                                                                                    */,
                                                                                                                                    Integer
                                                                                                                                  >,
                                                                                                                                  Global.TGlobal
                                                                                                                                >promote(
                                                                                                                                      PreludeMonad.IMonad_ST.<
                                                                                                                                        RealWorld
                                                                                                                                      >mk(),
                                                                                                                                      Final.cleanSymtab
                                                                                                                                    ))
                                                                                                                          ),
                                                                                                                      Thunk.<
                                                                                                                        String/*
                                                                                                                          <
                                                                                                                            Character
                                                                                                                          >
                                                                                                                        */
                                                                                                                      >lazy(
                                                                                                                            "clean up"
                                                                                                                          )
                                                                                                                    ),
                                                                                                                PreludeBase.TList.DList.<
                                                                                                                  PreludeBase.TTuple2<
                                                                                                                    State.TStateT<
                                                                                                                      Global.TGlobal,
                                                                                                                      Func.U<
                                                                                                                        RealWorld,
                                                                                                                        ?
                                                                                                                      >,
                                                                                                                      PreludeBase.TTuple2<
                                                                                                                        String/*
                                                                                                                          <
                                                                                                                            Character
                                                                                                                          >
                                                                                                                        */,
                                                                                                                        Integer
                                                                                                                      >
                                                                                                                    >,
                                                                                                                    String/*
                                                                                                                      <
                                                                                                                        Character
                                                                                                                      >
                                                                                                                    */
                                                                                                                  >
                                                                                                                >mk()
                                                                                                              )
                                                                                                        )
                                                                                                  )
                                                                                            )
                                                                                      )
                                                                                )
                                                                          )
                                                                    )
                                                              )
                                                        )
                                                  )
                                            )
                                      )
                                )
                          )
                    );
          })
    );
final public static State.TState<Global.TGlobal, PreludeBase.TTuple2<String/*<Character>*/, Integer>> lexPassLSP(
  final String/*<Character>*/ arg$1
) {
  final State.TState<Global.TGlobal, PreludeBase.TList<Tokens.TToken>> $19529 = Lexer.passCS(
        (java.lang.CharSequence)(arg$1)
      );
  final Func.U<Global.TGlobal, PreludeBase.TTuple2<PreludeBase.TList<Tokens.TToken>, Global.TGlobal>> v7688$18967 =
  $19529.mem$fun;
  return State.TState.<Global.TGlobal, PreludeBase.TTuple2<String/*<Character>*/, Integer>>mk(
            (Func.U<Global.TGlobal, PreludeBase.TTuple2<PreludeBase.TTuple2<String/*<Character>*/, Integer>, Global.TGlobal>>)((
              final Lazy<Global.TGlobal> arg$19531
            ) -> {
                  final PreludeBase.TTuple2<PreludeBase.TList<Tokens.TToken>, Global.TGlobal> $19532 =
                  v7688$18967.apply(arg$19531).call();
                  final PreludeBase.TTuple2<String/*<Character>*/, Integer> v7686$18996 =
                  PreludeBase.TTuple2.<String/*<Character>*/, Integer>mk(
                        Thunk.<String/*<Character>*/>lazy("tokens"),
                        Thunk.<Integer>shared(
                              (Lazy<Integer>)(() -> PreludeList.IListView_$lbrack$rbrack.<
                                    Tokens.TToken
                                  >length($19532.mem1.call()))
                            )
                      );
                  return PreludeBase.TTuple2.<PreludeBase.TTuple2<String/*<Character>*/, Integer>, Global.TGlobal>mk(
                            v7686$18996, $19532.mem2
                          );
                })
          );
}
final public static PreludeBase.TList<Tokens.TToken> ideClean(PreludeBase.TList<Tokens.TToken> arg$1) {
  tailrecursion: while (true) {
    final PreludeBase.TList<Tokens.TToken> arg$1f = arg$1;
    final PreludeBase.TList.DCons<Tokens.TToken> $19534 = arg$1f.asCons();
    if ($19534 != null) {
      final Tokens.TToken t$17481 = $19534.mem1.call();
      if (TokenID.IEq_TokenID.$eq$eq(Tokens.TToken.tokid(t$17481), TokenID.TTokenID.COMMENT)) {
        if (Tokens.TToken.value(t$17481).equals("}")) {
          arg$1 = $19534.mem2.call();
          continue tailrecursion;
        }
      }
      if (Tokens.TToken.col(t$17481) == 0) {
        arg$1 = $19534.mem2.call();
        continue tailrecursion;
      }
      return PreludeBase.TList.DCons.<Tokens.TToken>mk(
                t$17481,
                Thunk.<PreludeBase.TList<Tokens.TToken>>shared(
                      (Lazy<PreludeBase.TList<Tokens.TToken>>)(() -> CompilerHelper.ideClean(
                                $19534.mem2.call()
                              ))
                    )
              );
    }
    final PreludeBase.TList.DList<Tokens.TToken> $19536 = arg$1f.asList();
    assert $19536 != null;
    return PreludeBase.TList.DList.<Tokens.TToken>mk();
  }
}
final public static State.TState<Global.TGlobal, PreludeBase.TTuple2<String/*<Character>*/, Integer>> parsePass =
State.TState.<Global.TGlobal, PreludeBase.TTuple2<String/*<Character>*/, Integer>>mk(
      (Func.U<Global.TGlobal, PreludeBase.TTuple2<PreludeBase.TTuple2<String/*<Character>*/, Integer>, Global.TGlobal>>)((
        final Lazy<Global.TGlobal> arg$19537
      ) -> {
            final State.TState<Global.TGlobal, PreludeBase.TMaybe<Desugar.TProgram>> $19539 =
            Frege.pass(
                  Thunk.<PreludeBase.TList<Tokens.TToken>>shared(
                        (Lazy<PreludeBase.TList<Tokens.TToken>>)(() -> PreludeList.<Tokens.TToken>filter(
                                  (Func.U<Tokens.TToken, Boolean>)((final Lazy<Tokens.TToken> η$19538) -> Thunk.<
                                        Boolean
                                      >shared((Lazy<Boolean>)(() -> Tokens.TToken.noComment(η$19538.call())))),
                                  PreludeArrays.IListSource_JArray.<Tokens.TToken>toList(
                                        Global.TSubSt.toks(Global.TGlobal.sub(arg$19537.call()))
                                      )
                                ))
                      )
                );
            final Func.U<
              Global.TGlobal, PreludeBase.TTuple2<PreludeBase.TMaybe<Desugar.TProgram>, Global.TGlobal>
            > v7688$18774 = $19539.mem$fun;
            final PreludeBase.TTuple2<PreludeBase.TMaybe<Desugar.TProgram>, Global.TGlobal> $19541 =
            v7688$18774.apply(arg$19537).call();
            final PreludeBase.TMaybe<Desugar.TProgram> v7691$18777 = $19541.mem1.call();
            final PreludeBase.TMaybe.DJust<Desugar.TProgram> $19543 = v7691$18777.asJust();
            if ($19543 != null) {
              final Desugar.TProgram $19544 = $19543.mem1.call();
              final Desugar.TProgram.DModule $19545 = $19544.asModule();
              if ($19545 != null) {
                final PreludeBase.TTuple3<
                  String/*<Character>*/, PreludeBase.TList<SourceDefinitions.TDefinitionS>,
                  PreludeBase.TMaybe<String/*<Character>*/>
                > $19546 = $19545.mem1.call();
                final PreludeBase.TTuple2<String/*<Character>*/, Integer> v16081$18931 =
                PreludeBase.TTuple2.<String/*<Character>*/, Integer>mk(
                      Thunk.<String/*<Character>*/>lazy("tokens"),
                      Thunk.<Integer>shared(
                            (Lazy<Integer>)(() -> java.lang.reflect.Array.getLength(
                                      Global.TSubSt.toks(Global.TGlobal.sub(arg$19537.call()))
                                    ))
                          )
                    );
                final Lazy<State.TState<Global.TGlobal, Short>> tmp$18956 = Thunk.<State.TState<Global.TGlobal, Short>>shared(
                      (Lazy<State.TState<Global.TGlobal, Short>>)(() -> {
                            if (
                              Flags.isOn(
                                    (long)Global.TOptions.flags(Global.TGlobal.options(arg$19537.call())), Flags.TFlag.IDETOKENS
                                  )
                            ) {
                              return State.TState.<Global.TGlobal>modify(
                                        (Func.U<Global.TGlobal, Global.TGlobal>)((final Lazy<Global.TGlobal> η$19548) -> Thunk.<
                                              Global.TGlobal
                                            >nested(
                                                  (Lazy<Lazy<Global.TGlobal>>)(() -> PreludeBase.<
                                                        Global.TGlobal, Global.TGlobal, Func.U<Global.TSubSt, Global.TSubSt>
                                                      >flip(
                                                            (Func.U<
                                                              Global.TGlobal,
                                                              Func.U<Func.U<Global.TSubSt, Global.TSubSt>, Global.TGlobal>
                                                            >)((final Lazy<Global.TGlobal> η$19549) -> (Func.U<
                                                                  Func.U<Global.TSubSt, Global.TSubSt>, Global.TGlobal
                                                                >)((
                                                                  final Lazy<Func.U<Global.TSubSt, Global.TSubSt>> η$19550
                                                                ) -> Thunk.<Global.TGlobal>shared(
                                                                          (Lazy<Global.TGlobal>)(() -> Global.TGlobal.chg$sub(
                                                                                    η$19549.call(), η$19550.call()
                                                                                  ))
                                                                        ))),
                                                            (Func.U<Global.TSubSt, Global.TSubSt>)((
                                                              final Lazy<Global.TSubSt> η$19551
                                                            ) -> Thunk.<Global.TSubSt>nested(
                                                                      (Lazy<Lazy<Global.TSubSt>>)(() -> PreludeBase.<
                                                                            Global.TSubSt, Global.TSubSt,
                                                                            Func.U<Tokens.TToken[], Tokens.TToken[]>
                                                                          >flip(
                                                                                (Func.U<
                                                                                  Global.TSubSt,
                                                                                  Func.U<
                                                                                    Func.U<
                                                                                      Tokens.TToken[],
                                                                                      Tokens.TToken[]
                                                                                    >,
                                                                                    Global.TSubSt
                                                                                  >
                                                                                >)((
                                                                                  final Lazy<Global.TSubSt> η$19552
                                                                                ) -> (Func.U<
                                                                                      Func.U<
                                                                                        Tokens.TToken[],
                                                                                        Tokens.TToken[]
                                                                                      >,
                                                                                      Global.TSubSt
                                                                                    >)((
                                                                                      final Lazy<Func.U<
                                                                                        Tokens.TToken[],
                                                                                        Tokens.TToken[]
                                                                                      >> η$19553
                                                                                    ) -> Thunk.<
                                                                                          Global.TSubSt
                                                                                        >shared(
                                                                                              (Lazy<Global.TSubSt>)(() -> Global.TSubSt.chg$toks(
                                                                                                        η$19552
                                                                                                        .call(),
                                                                                                        η$19553
                                                                                                        .call()
                                                                                                      ))
                                                                                            ))),
                                                                                (Func.U<
                                                                                  Tokens.TToken[], Tokens.TToken[]
                                                                                >)((final Lazy<Tokens.TToken[]> arg$19554) -> {
                                                                                      final Tokens.TToken[] v2338$18909 =
                                                                                      arg$19554
                                                                                      .call();
                                                                                      return Tokens.IArrayElement_Token.arrayFromList(
                                                                                                CompilerHelper.ideClean(
                                                                                                      PreludeArrays.IListSource_JArray.<
                                                                                                        Tokens.TToken
                                                                                                      >toList(
                                                                                                            v2338$18909
                                                                                                          )
                                                                                                    )
                                                                                              );
                                                                                    }),
                                                                                η$19551
                                                                              ))
                                                                    )),
                                                            η$19548
                                                          ))
                                                ))
                                      );
                            }
                            else {
                              return State.TState.<Global.TGlobal, Short>mk(
                                        (Func.U<Global.TGlobal, PreludeBase.TTuple2<Short, Global.TGlobal>>)((
                                          final Lazy<Global.TGlobal> arg$19556
                                        ) -> {
                                              return PreludeBase.TTuple2.<Short, Global.TGlobal>mk(
                                                        Thunk.<Short>lazy(PreludeBase.TUnit.Unit), arg$19556
                                                      );
                                            })
                                      );
                            }
                          })
                    );
                final State.TState<Global.TGlobal, Short> $19557 = tmp$18956.call();
                final Func.U<Global.TGlobal, PreludeBase.TTuple2<Short, Global.TGlobal>> v8822$18861 =
                $19557.mem$fun;
                final State.TState<Global.TGlobal, Short> $19569 = State.TState.<Global.TGlobal>modify(
                      (Func.U<Global.TGlobal, Global.TGlobal>)((final Lazy<Global.TGlobal> η$19559) -> Thunk.<
                            Global.TGlobal
                          >nested(
                                (Lazy<Lazy<Global.TGlobal>>)(() -> PreludeBase.<
                                      Global.TGlobal, Global.TGlobal, Func.U<Global.TSubSt, Global.TSubSt>
                                    >flip(
                                          (Func.U<
                                            Global.TGlobal, Func.U<Func.U<Global.TSubSt, Global.TSubSt>, Global.TGlobal>
                                          >)((final Lazy<Global.TGlobal> η$19560) -> (Func.U<
                                                Func.U<Global.TSubSt, Global.TSubSt>, Global.TGlobal
                                              >)((final Lazy<Func.U<Global.TSubSt, Global.TSubSt>> η$19561) -> Thunk.<
                                                    Global.TGlobal
                                                  >shared(
                                                        (Lazy<Global.TGlobal>)(() -> Global.TGlobal.chg$sub(
                                                                  η$19560.call(), η$19561.call()
                                                                ))
                                                      ))),
                                          (Func.U<Global.TSubSt, Global.TSubSt>)((final Lazy<Global.TSubSt> arg$19562) -> {
                                                return PreludeBase.<Global.TSubSt, Global.TSubSt, String/*<Character>*/>flip(
                                                          (Func.U<
                                                            Global.TSubSt, Func.U<String/*<Character>*/, Global.TSubSt>
                                                          >)((final Lazy<Global.TSubSt> η$19563) -> (Func.U<
                                                                String/*<Character>*/, Global.TSubSt
                                                              >)((final Lazy<String/*<Character>*/> η$19564) -> Thunk.<
                                                                    Global.TSubSt
                                                                  >shared(
                                                                        (Lazy<Global.TSubSt>)(() -> Global.TSubSt.upd$thisPack(
                                                                                  η$19563.call(), η$19564.call()
                                                                                ))
                                                                      ))),
                                                          Thunk.<String/*<Character>*/>shared(
                                                                (Lazy<String/*<Character>*/>)(() -> Packs.TPack.$new(
                                                                          $19546.mem1
                                                                        ))
                                                              ),
                                                          Thunk.<Global.TSubSt>nested(
                                                                (Lazy<Lazy<Global.TSubSt>>)(() -> PreludeBase.<
                                                                      Global.TSubSt, Global.TSubSt,
                                                                      PreludeBase.TList<
                                                                        SourceDefinitions.TDefinitionS
                                                                      >
                                                                    >flip(
                                                                          (Func.U<
                                                                            Global.TSubSt,
                                                                            Func.U<
                                                                              PreludeBase.TList<
                                                                                SourceDefinitions.TDefinitionS
                                                                              >,
                                                                              Global.TSubSt
                                                                            >
                                                                          >)((final Lazy<Global.TSubSt> η$19565) -> (Func.U<
                                                                                PreludeBase.TList<
                                                                                  SourceDefinitions.TDefinitionS
                                                                                >,
                                                                                Global.TSubSt
                                                                              >)((
                                                                                final Lazy<PreludeBase.TList<
                                                                                  SourceDefinitions.TDefinitionS
                                                                                >> η$19566
                                                                              ) -> Thunk.<
                                                                                    Global.TSubSt
                                                                                  >shared(
                                                                                        (Lazy<Global.TSubSt>)(() -> Global.TSubSt.upd$sourcedefs(
                                                                                                  η$19565
                                                                                                  .call(),
                                                                                                  η$19566
                                                                                                  .call()
                                                                                                ))
                                                                                      ))),
                                                                          $19546.mem2,
                                                                          Thunk.<Global.TSubSt>nested(
                                                                                (Lazy<Lazy<Global.TSubSt>>)(() -> PreludeBase.<
                                                                                      Global.TSubSt,
                                                                                      Global.TSubSt,
                                                                                      PreludeBase.TMaybe<
                                                                                        String/*
                                                                                          <
                                                                                            Character
                                                                                          >
                                                                                        */
                                                                                      >
                                                                                    >flip(
                                                                                          (Func.U<
                                                                                            Global.TSubSt,
                                                                                            Func.U<
                                                                                              PreludeBase.TMaybe<
                                                                                                String/*
                                                                                                  <
                                                                                                    Character
                                                                                                  >
                                                                                                */
                                                                                              >,
                                                                                              Global.TSubSt
                                                                                            >
                                                                                          >)((
                                                                                            final Lazy<Global.TSubSt> η$19567
                                                                                          ) -> (Func.U<
                                                                                                PreludeBase.TMaybe<
                                                                                                  String/*
                                                                                                    <
                                                                                                      Character
                                                                                                    >
                                                                                                  */
                                                                                                >,
                                                                                                Global.TSubSt
                                                                                              >)((
                                                                                                final Lazy<PreludeBase.TMaybe<
                                                                                                  String/*
                                                                                                    <
                                                                                                      Character
                                                                                                    >
                                                                                                  */
                                                                                                >> η$19568
                                                                                              ) -> Thunk.<
                                                                                                    Global.TSubSt
                                                                                                  >shared(
                                                                                                        (Lazy<Global.TSubSt>)(() -> Global.TSubSt.upd$packageDoc(
                                                                                                                  η$19567
                                                                                                                  .call(),
                                                                                                                  η$19568
                                                                                                                  .call()
                                                                                                                ))
                                                                                                      ))),
                                                                                          $19546.mem3,
                                                                                          arg$19562
                                                                                        ))
                                                                              )
                                                                        ))
                                                              )
                                                        );
                                              }),
                                          η$19559
                                        ))
                              ))
                    );
                final Func.U<Global.TGlobal, PreludeBase.TTuple2<Short, Global.TGlobal>> v8822$18803 =
                $19569.mem$fun;
                final PreludeBase.TTuple2<Short, Global.TGlobal> $19571 = v8822$18803
                .apply($19541.mem2).call();
                final PreludeBase.TTuple2<Short, Global.TGlobal> $19572 = v8822$18861
                .apply($19571.mem2).call();
                return PreludeBase.TTuple2.<PreludeBase.TTuple2<String/*<Character>*/, Integer>, Global.TGlobal>mk(
                          v16081$18931, $19572.mem2
                        );
              }
            }
            final PreludeBase.TTuple2<String/*<Character>*/, Integer> v16081$18957 = PreludeBase.TTuple2.<
              String/*<Character>*/, Integer
            >mk(
                  Thunk.<String/*<Character>*/>lazy("tokens"),
                  Thunk.<Integer>shared(
                        (Lazy<Integer>)(() -> java.lang.reflect.Array.getLength(
                                  Global.TSubSt.toks(Global.TGlobal.sub(arg$19537.call()))
                                ))
                      )
                );
            return PreludeBase.TTuple2.<PreludeBase.TTuple2<String/*<Character>*/, Integer>, Global.TGlobal>mk(
                      v16081$18957, $19541.mem2
                    );
          })
    );
final public static State.TState<Global.TGlobal, Global.TGlobal> lexParseLSP(final String/*<Character>*/ arg$1) {
  return State.TState.<Global.TGlobal, Global.TGlobal>mk(
            (Func.U<Global.TGlobal, PreludeBase.TTuple2<Global.TGlobal, Global.TGlobal>>)((
              final Lazy<Global.TGlobal> arg$19574
            ) -> {
                  final State.TState<Global.TGlobal, Global.TGlobal> $19575 = CompilerHelper.switchState(
                        arg$19574
                      );
                  final Func.U<Global.TGlobal, PreludeBase.TTuple2<Global.TGlobal, Global.TGlobal>> v7688$19102 =
                  $19575.mem$fun;
                  final Func.U<
                    Global.TGlobal, PreludeBase.TTuple2<PreludeBase.TTuple2<String/*<Character>*/, Integer>, Global.TGlobal>
                  > v8822$19077 = CompilerHelper.parsePass.mem$fun;
                  final State.TState<Global.TGlobal, PreludeBase.TTuple2<String/*<Character>*/, Integer>> $19578 =
                  CompilerHelper.lexPassLSP(arg$1);
                  final Func.U<
                    Global.TGlobal, PreludeBase.TTuple2<PreludeBase.TTuple2<String/*<Character>*/, Integer>, Global.TGlobal>
                  > v8822$19049 = $19578.mem$fun;
                  final PreludeBase.TTuple2<PreludeBase.TTuple2<String/*<Character>*/, Integer>, Global.TGlobal> $19580 =
                  v8822$19049.apply(arg$19574).call();
                  final PreludeBase.TTuple2<PreludeBase.TTuple2<String/*<Character>*/, Integer>, Global.TGlobal> $19581 =
                  v8822$19077.apply($19580.mem2).call();
                  final PreludeBase.TTuple2<Global.TGlobal, Global.TGlobal> $19582 = v7688$19102
                  .apply($19581.mem2).call();
                  final Global.TGlobal v7691$19105 = $19582.mem1.call();
                  final State.TState<Global.TGlobal, Short> $19589 = State.TState.<Global.TGlobal>modify(
                        (Func.U<Global.TGlobal, Global.TGlobal>)((final Lazy<Global.TGlobal> arg$19584) -> {
                              final Global.TGlobal in$17475 = arg$19584.call();
                              return Thunk.<Global.TGlobal>shared(
                                        (Lazy<Global.TGlobal>)(() -> Global.TGlobal.chg$sub(
                                                  in$17475,
                                                  (Func.U<Global.TSubSt, Global.TSubSt>)((
                                                    final Lazy<Global.TSubSt> arg$19586
                                                  ) -> {
                                                        final Global.TSubSt in$17476 =
                                                        arg$19586.call();
                                                        return Thunk.<Global.TSubSt>shared(
                                                                  (Lazy<Global.TSubSt>)(() -> Global.TSubSt.chg$numErrors(
                                                                            in$17476,
                                                                            (Func.U<Integer, Integer>)((
                                                                              final Lazy<Integer> η$19588
                                                                            ) -> Thunk.<
                                                                                  Integer
                                                                                >shared(
                                                                                      (Lazy<Integer>)(() -> Global.TGlobal.errors(
                                                                                                v7691$19105
                                                                                              ) + (int)η$19588
                                                                                          .call())
                                                                                    ))
                                                                          ))
                                                                );
                                                      })
                                                ))
                                      );
                            })
                      );
                  final Func.U<Global.TGlobal, PreludeBase.TTuple2<Short, Global.TGlobal>> v8822$19131 =
                  $19589.mem$fun;
                  final PreludeBase.TTuple2<Short, Global.TGlobal> $19591 = v8822$19131
                  .apply($19582.mem2).call();
                  return PreludeBase.TTuple2.<Global.TGlobal, Global.TGlobal>mk(v7691$19105, $19591.mem2);
                })
          );
}
final public static Func.U<RealWorld, Global.TGlobal> createLSPGlobal(final Global.TOptions arg$1) {
  return (Func.U<RealWorld, Global.TGlobal>)((final Lazy<RealWorld> arg$19592) -> {
            final java.net.URLClassLoader v2056$19175 = CompilerOptions.theClassLoader(
                  arg$1
                ).apply(arg$19592).call();
            final Func.U<RealWorld, Global.TGlobal> v2053$19194 = CompilerOptions.standardGlobal
            .call();
            final Global.TGlobal v2056$19197 = v2053$19194.apply(arg$19592).call();
            final Func.U<RealWorld, Global.TGlobal> v2057$19198 = PreludeMonad.IMonad_ST.<
              RealWorld, Global.TGlobal
            >pure(
                  Thunk.<Global.TGlobal>shared(
                        (Lazy<Global.TGlobal>)(() -> Global.TGlobal.chg$sub(
                                  Global.TGlobal.upd$options(v2056$19197, arg$1),
                                  (Func.U<Global.TSubSt, Global.TSubSt>)((final Lazy<Global.TSubSt> η$19596) -> Thunk.<
                                        Global.TSubSt
                                      >nested(
                                            (Lazy<Lazy<Global.TSubSt>>)(() -> PreludeBase.<
                                                  Global.TSubSt, Global.TSubSt, java.net.URLClassLoader
                                                >flip(
                                                      (Func.U<Global.TSubSt, Func.U<java.net.URLClassLoader, Global.TSubSt>>)((
                                                        final Lazy<Global.TSubSt> η$19597
                                                      ) -> (Func.U<java.net.URLClassLoader, Global.TSubSt>)((
                                                            final Lazy<java.net.URLClassLoader> η$19598
                                                          ) -> Thunk.<Global.TSubSt>shared(
                                                                    (Lazy<Global.TSubSt>)(() -> Global.TSubSt.upd$loader(
                                                                              η$19597.call(), η$19598.call()
                                                                            ))
                                                                  ))),
                                                      Thunk.<java.net.URLClassLoader>lazy(v2056$19175), η$19596
                                                    ))
                                          ))
                                ))
                      )
                );
            return Thunk.<Global.TGlobal>nested((Lazy<Lazy<Global.TGlobal>>)(() -> v2057$19198.apply(arg$19592)));
          });
}
final public static Lazy<Func.U<RealWorld, Global.TGlobal>> standardLSPGlobal = Thunk.<
  Func.U<RealWorld, Global.TGlobal>
>shared(
      (Lazy<Func.U<RealWorld, Global.TGlobal>>)(() -> {
            return CompilerHelper.createLSPGlobal(
                      Global.TOptions.upd$path(
                            Global.TOptions.upd$sourcePath(
                                  CompilerHelper.standardLSPOptions.call(),
                                  PreludeBase.TList.DCons.<String/*<Character>*/>mk(
                                        Thunk.<String/*<Character>*/>nested(
                                              (Lazy<Lazy<String/*<Character>*/>>)(() -> PreludeBase.<
                                                    String/*<Character>*/, String/*<Character>*/
                                                  >maybe(
                                                        Thunk.<String/*<Character>*/>lazy(
                                                              "."
                                                            ),
                                                        (Func.U<String/*<Character>*/, String/*<Character>*/>)((
                                                          final Lazy<String/*<Character>*/> arg$19600
                                                        ) -> {
                                                              final String/*<Character>*/ v2345$18432 =
                                                              arg$19600.call();
                                                              return Thunk.<String/*<Character>*/>lazy(
                                                                        v2345$18432
                                                                      );
                                                            }),
                                                        PreludeBase._toMaybe(System.getenv("FREGE_LSP_SOURCE_DIR"))
                                                      ))
                                            ),
                                        PreludeBase.TList.DList.<String/*<Character>*/>mk()
                                      )
                                ),
                            PreludeBase.TList.DCons.<String/*<Character>*/>mk(
                                  Thunk.<String/*<Character>*/>nested(
                                        (Lazy<Lazy<String/*<Character>*/>>)(() -> PreludeBase.<
                                              String/*<Character>*/, String/*<Character>*/
                                            >maybe(
                                                  Thunk.<String/*<Character>*/>lazy(""),
                                                  (Func.U<String/*<Character>*/, String/*<Character>*/>)((
                                                    final Lazy<String/*<Character>*/> arg$19602
                                                  ) -> {
                                                        final String/*<Character>*/ v2345$18441 =
                                                        arg$19602.call();
                                                        return Thunk.<String/*<Character>*/>lazy(
                                                                  v2345$18441
                                                                );
                                                      }),
                                                  PreludeBase._toMaybe(System.getenv("FREGE_LSP_EXTRA_CLASSPATH"))
                                                ))
                                      ),
                                  PreludeBase.TList.DList.<String/*<Character>*/>mk()
                                )
                          )
                    );
          })
    );
final public static State.TStateT<Global.TGlobal, Func.U<RealWorld, ?>, Global.TGlobal> compileFregeFile(
  final Lazy<String/*<Character>*/> arg$1
) {
  final State.TStateT<Global.TGlobal, Func.U<RealWorld, ?>, Global.TGlobal> $19604 = Global.<
    Global.TGlobal
  >liftStG(
        Thunk.<State.TState<Global.TGlobal, Global.TGlobal>>shared(
              (Lazy<State.TState<Global.TGlobal, Global.TGlobal>>)(() -> CompilerHelper.lexParseLSP(
                        arg$1.call()
                      ))
            )
      );
  final Func.U<Global.TGlobal, Kind.U<Func.U<RealWorld, ?>, PreludeBase.TTuple2<Global.TGlobal, Global.TGlobal>>> v7734$19217 =
  $19604.mem$run;
  return State.TStateT.<Global.TGlobal, Func.U<RealWorld, ?>, Global.TGlobal>mk(
            (Func.U<Global.TGlobal, Kind.U<Func.U<RealWorld, ?>, PreludeBase.TTuple2<Global.TGlobal, Global.TGlobal>>>)((
              final Lazy<Global.TGlobal> arg$19606
            ) -> {
                  return Thunk.<Kind.U<Func.U<RealWorld, ?>, PreludeBase.TTuple2<Global.TGlobal, Global.TGlobal>>>lazy(
                            (Kind.U<Func.U<RealWorld, ?>, PreludeBase.TTuple2<Global.TGlobal, Global.TGlobal>>)(Func.U<
                              RealWorld, PreludeBase.TTuple2<Global.TGlobal, Global.TGlobal>
                            >)((final Lazy<RealWorld> arg$19607) -> {
                                  final PreludeBase.TTuple2<Global.TGlobal, Global.TGlobal> v2056$19252 =
                                  RunTM.<
                                    Func.U<
                                      Global.TGlobal, Func.U<RealWorld, PreludeBase.TTuple2<Global.TGlobal, Global.TGlobal>>
                                    >
                                  >cast(v7734$19217).apply(arg$19606).call().apply(arg$19607)
                                  .call();
                                  final State.TStateT<Global.TGlobal, Func.U<RealWorld, ?>, Short> $19610 =
                                  Global.<
                                    PreludeBase.TTuple2<
                                      State.TStateT<
                                        Global.TGlobal, Func.U<RealWorld, ?>,
                                        PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                      >,
                                      String/*<Character>*/
                                    >,
                                    Short
                                  >forsome(
                                        CompilerHelper.passes.call(),
                                        (Func.U<
                                          PreludeBase.TTuple2<
                                            State.TStateT<
                                              Global.TGlobal, Func.U<RealWorld, ?>,
                                              PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                            >,
                                            String/*<Character>*/
                                          >,
                                          State.TStateT<Global.TGlobal, Func.U<RealWorld, ?>, Short>
                                        >)((
                                          final Lazy<PreludeBase.TTuple2<
                                            State.TStateT<
                                              Global.TGlobal, Func.U<RealWorld, ?>,
                                              PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                            >,
                                            String/*<Character>*/
                                          >> η$19609
                                        ) -> Thunk.<State.TStateT<Global.TGlobal, Func.U<RealWorld, ?>, Short>>shared(
                                                  (Lazy<State.TStateT<
                                                    Global.TGlobal, Func.U<RealWorld, ?>, Short
                                                  >>)(() -> CompilerHelper.runpass(η$19609.call()))
                                                ))
                                      );
                                  final Func.U<
                                    Global.TGlobal, Kind.U<Func.U<RealWorld, ?>, PreludeBase.TTuple2<Short, Global.TGlobal>>
                                  > v8728$19339 = $19610.mem$run;
                                  final State.TStateT<Global.TGlobal, Func.U<RealWorld, ?>, Short> $19612 =
                                  State.TStateT.<Global.TGlobal, Func.U<RealWorld, ?>>put(
                                        PreludeMonad.IMonad_ST.<RealWorld>mk(), v2056$19252.mem1
                                      );
                                  final Func.U<
                                    Global.TGlobal, Kind.U<Func.U<RealWorld, ?>, PreludeBase.TTuple2<Short, Global.TGlobal>>
                                  > v8728$19282 = $19612.mem$run;
                                  final Func.U<RealWorld, PreludeBase.TTuple2<Short, Global.TGlobal>> v2053$19313 =
                                  RunTM.<
                                    Func.U<Global.TGlobal, Func.U<RealWorld, PreludeBase.TTuple2<Short, Global.TGlobal>>>
                                  >cast(v8728$19282).apply(v2056$19252.mem2).call();
                                  final PreludeBase.TTuple2<Short, Global.TGlobal> v2056$19316 =
                                  v2053$19313.apply(arg$19607).call();
                                  final Func.U<RealWorld, PreludeBase.TTuple2<Short, Global.TGlobal>> v2053$19370 =
                                  RunTM.<
                                    Func.U<Global.TGlobal, Func.U<RealWorld, PreludeBase.TTuple2<Short, Global.TGlobal>>>
                                  >cast(v8728$19339).apply(v2056$19316.mem2).call();
                                  final PreludeBase.TTuple2<Short, Global.TGlobal> v2056$19373 =
                                  v2053$19370.apply(arg$19607).call();
                                  final Func.U<RealWorld, PreludeBase.TTuple2<Global.TGlobal, Global.TGlobal>> v2053$19425 =
                                  PreludeMonad.IMonad_ST.<RealWorld, PreludeBase.TTuple2<Global.TGlobal, Global.TGlobal>>pure(
                                        PreludeBase.TTuple2.<Global.TGlobal, Global.TGlobal>mk(
                                              v2056$19373.mem2, v2056$19373.mem2
                                            )
                                      );
                                  final PreludeBase.TTuple2<Global.TGlobal, Global.TGlobal> v2056$19428 =
                                  v2053$19425.apply(arg$19607).call();
                                  final Global.TGlobal v7737$19396 = v2056$19428.mem1
                                  .call();
                                  final Func.U<RealWorld, PreludeBase.TTuple2<Global.TGlobal, Global.TGlobal>> v2057$19429 =
                                  PreludeMonad.IMonad_ST.<RealWorld, PreludeBase.TTuple2<Global.TGlobal, Global.TGlobal>>pure(
                                        PreludeBase.TTuple2.<Global.TGlobal, Global.TGlobal>mk(
                                              v7737$19396, v2056$19428.mem2
                                            )
                                      );
                                  return Thunk.<PreludeBase.TTuple2<Global.TGlobal, Global.TGlobal>>nested(
                                            (Lazy<Lazy<PreludeBase.TTuple2<Global.TGlobal, Global.TGlobal>>>)(() -> v2057$19429
                                                .apply(arg$19607))
                                          );
                                })
                          );
                })
          );
}
final public static Func.U<RealWorld, Global.TGlobal> compile(
  final Lazy<String/*<Character>*/> arg$1, final Func.U<RealWorld, Global.TGlobal> arg$2
) {
  return (Func.U<RealWorld, Global.TGlobal>)((final Lazy<RealWorld> arg$19622) -> {
            final Global.TGlobal v2056$19478 = arg$2.apply(arg$19622).call();
            final Func.U<RealWorld, Global.TGlobal> v2057$19479 = Func.<RealWorld, Global.TGlobal>coerceU(
                  State.<Global.TGlobal, Func.U<RealWorld, ?>, Global.TGlobal>execStateT(
                        PreludeMonad.IMonad_ST.<RealWorld>mk(),
                        Thunk.<State.TStateT<Global.TGlobal, Func.U<RealWorld, ?>, Global.TGlobal>>shared(
                              (Lazy<State.TStateT<
                                Global.TGlobal, Func.U<RealWorld, ?>, Global.TGlobal
                              >>)(() -> CompilerHelper.compileFregeFile(arg$1))
                            ),
                        v2056$19478
                      )
                );
            return Thunk.<Global.TGlobal>nested((Lazy<Lazy<Global.TGlobal>>)(() -> v2057$19479.apply(arg$19622)));
          });
}
final public static Lazy<QuickCheckGen.TGen<
  QuickCheckProperty.TRose<QuickCheckProperty.TResult>
>> shouldCorrectlyConfigureExtraClasspath = Thunk.<
  QuickCheckGen.TGen<QuickCheckProperty.TRose<QuickCheckProperty.TResult>>
>shared(
      (Lazy<QuickCheckGen.TGen<QuickCheckProperty.TRose<QuickCheckProperty.TResult>>>)(() -> {
            return QuickCheckProperty.<QuickCheckGen.TGen<QuickCheckProperty.TRose<QuickCheckProperty.TResult>>>once(
                      new QuickCheckProperty.ITestable_Gen<QuickCheckProperty.TRose<QuickCheckProperty.TResult>>(
                        QuickCheckProperty.ITestable_Prop.it
                      ),
                      Thunk.<QuickCheckGen.TGen<QuickCheckProperty.TRose<QuickCheckProperty.TResult>>>shared(
                            (Lazy<QuickCheckGen.TGen<
                              QuickCheckProperty.TRose<QuickCheckProperty.TResult>
                            >>)(() -> QuickCheckProperty.<Boolean>morallyDubiousIOProperty(
                                      QuickCheckProperty.ITestable_Bool.it,
                                      (Func.U<RealWorld, Boolean>)((final Lazy<RealWorld> arg$19625) -> {
                                            final Global.TGlobal v2056$18457 = CompilerHelper.compile(
                                                  Thunk.<String/*<Character>*/>shared(
                                                        (Lazy<String/*
                                                          <Character>
                                                        */>)(() -> "module FregeFxDep where\n\n" + ("import fregefx.JavaFxType\n\n" + "main = println \"Hello FregeFX\""))
                                                      ),
                                                  CompilerHelper.createLSPGlobal(
                                                        Global.TOptions.upd$path(
                                                              CompilerHelper.standardLSPOptions
                                                              .call(),
                                                              PreludeBase.TList.DCons.<
                                                                String/*<Character>*/
                                                              >mk(
                                                                    Thunk.<String/*<Character>*/>lazy(
                                                                          "./src/main/resources/fregefx-0.8.2-SNAPSHOT.jar"
                                                                        ),
                                                                    PreludeBase.TList.DList.<
                                                                      String/*<Character>*/
                                                                    >mk()
                                                                  )
                                                            )
                                                      )
                                                ).apply(arg$19625).call();
                                            final Func.U<RealWorld, Boolean> v2057$18458 =
                                            PreludeMonad.IMonad_ST.<RealWorld, Boolean>pure(
                                                  Thunk.<Boolean>shared(
                                                        (Lazy<Boolean>)(() -> Global.TGlobal.errors(
                                                                  v2056$18457
                                                                ) == 0)
                                                      )
                                                );
                                            return Thunk.<Boolean>nested(
                                                      (Lazy<Lazy<Boolean>>)(() -> v2057$18458
                                                          .apply(arg$19625))
                                                    );
                                          })
                                    ))
                          )
                    );
          })
    );

}
