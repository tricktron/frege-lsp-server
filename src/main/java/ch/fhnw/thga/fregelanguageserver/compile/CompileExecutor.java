/*
  Source code is in UTF-8 encoding. The following symbols may appear, among others:
  α β γ δ ε ζ η θ ι κ λ μ ν ξ ο π ρ ς σ τ υ φ χ ψ ω « • ¦ » ∀ ∃ ∷ … → ← ﬁ ﬂ ƒ
  If you can't read this, you're out of luck. This code was generated with the frege compiler version 3.25.84
  from
  /Users/tricktron/github/master/frege-lsp-server/src/main/frege/ch/fhnw/thga/fregelanguageserver/compile/CompileExecutor.fr
  Do not edit this file! Instead, edit the source file and recompile.
*/

package ch.fhnw.thga.fregelanguageserver.compile;

import frege.run8.Func;
import frege.run8.Lazy;
import frege.run8.Thunk;
import frege.run.Kind;
import frege.run.RunTM;
import frege.runtime.Meta;
import frege.runtime.Phantom.RealWorld;
import ch.fhnw.thga.fregelanguageserver.compile.CompileGlobal;
import ch.fhnw.thga.fregelanguageserver.compile.CompileOptions;
import frege.Prelude;
import frege.Version;
import frege.compiler.Classes;
import frege.compiler.Classtools;
import frege.compiler.Javatypes;
import frege.compiler.Kinds;
import frege.compiler.Typecheck;
import frege.compiler.Utilities;
import frege.compiler.classes.Nice;
import frege.compiler.classes.QNameMatcher;
import frege.compiler.common.Annotate;
import frege.compiler.common.AnnotateG;
import frege.compiler.common.Binders;
import frege.compiler.common.CompilerOptions;
import frege.compiler.common.Desugar;
import frege.compiler.common.Errors;
import frege.compiler.common.ImpExp;
import frege.compiler.common.JavaName;
import frege.compiler.common.Mangle;
import frege.compiler.common.PatternCompiler;
import frege.compiler.common.Resolve;
import frege.compiler.common.Roman;
import frege.compiler.common.SymbolTable;
import frege.compiler.common.Trans;
import frege.compiler.common.Tuples;
import frege.compiler.common.Types;
import frege.compiler.common.UnAlias;
import frege.compiler.enums.CaseKind;
import frege.compiler.enums.Flags;
import frege.compiler.enums.Literals;
import frege.compiler.enums.RFlag;
import frege.compiler.enums.SymState;
import frege.compiler.enums.TokenID;
import frege.compiler.enums.Visibility;
import frege.compiler.gen.java.Common;
import frege.compiler.gen.java.PrettyJava;
import frege.compiler.grammar.Frege;
import frege.compiler.grammar.Lexer;
import frege.compiler.instances.NiceExprS;
import frege.compiler.instances.Nicer;
import frege.compiler.instances.PositionedSName;
import frege.compiler.passes.Easy;
import frege.compiler.passes.Enter;
import frege.compiler.passes.Fields;
import frege.compiler.passes.Final;
import frege.compiler.passes.Fix;
import frege.compiler.passes.GlobalLam;
import frege.compiler.passes.Imp;
import frege.compiler.passes.Instances;
import frege.compiler.passes.LetUnroll;
import frege.compiler.passes.Strict;
import frege.compiler.passes.Transdef;
import frege.compiler.passes.TypeAlias;
import frege.compiler.tc.Methods;
import frege.compiler.tc.Patterns;
import frege.compiler.tc.Util;
import frege.compiler.types.AbstractJava;
import frege.compiler.types.ConstructorField;
import frege.compiler.types.Expression;
import frege.compiler.types.External;
import frege.compiler.types.Global;
import frege.compiler.types.ImportDetails;
import frege.compiler.types.JNames;
import frege.compiler.types.NSNames;
import frege.compiler.types.Packs;
import frege.compiler.types.Positions;
import frege.compiler.types.QNames;
import frege.compiler.types.SNames;
import frege.compiler.types.SourceDefinitions;
import frege.compiler.types.Strictness;
import frege.compiler.types.Symbols;
import frege.compiler.types.Targets;
import frege.compiler.types.Tokens;
import frege.control.Category;
import frege.control.Semigroupoid;
import frege.control.monad.State;
import frege.control.monad.trans.MonadIO;
import frege.control.monad.trans.MonadTrans;
import frege.data.Bits;
import frege.data.Char;
import frege.data.Foldable;
import frege.data.Graph;
import frege.data.List;
import frege.data.Monoid;
import frege.data.Traversable;
import frege.data.Tree;
import frege.data.TreeMap;
import frege.data.wrapper.Const;
import frege.data.wrapper.Dual;
import frege.data.wrapper.Endo;
import frege.data.wrapper.Identity;
import frege.data.wrapper.Num;
import frege.java.IO;
import frege.java.Lang;
import frege.java.Net;
import frege.java.util.Regex;
import frege.lib.PP;
import frege.prelude.Maybe;
import frege.prelude.PreludeArrays;
import frege.prelude.PreludeBase;
import frege.prelude.PreludeDecimal;
import frege.prelude.PreludeIO;
import frege.prelude.PreludeList;
import frege.prelude.PreludeMonad;
import frege.prelude.PreludeText;
import frege.system.Random;
import frege.test.QuickCheck;
import frege.test.QuickCheckArbitrary;
import frege.test.QuickCheckException;
import frege.test.QuickCheckGen;
import frege.test.QuickCheckModifiers;
import frege.test.QuickCheckProperty;
import frege.test.QuickCheckState;
import frege.test.QuickCheckTest;
import frege.test.QuickCheckText;

@SuppressWarnings("unused")
@Meta.FregePackage(
  source="/Users/tricktron/github/master/frege-lsp-server/src/main/frege/ch/fhnw/thga/fregelanguageserver/compile/CompileExecutor.fr",
  time=1658602829473L, jmajor=11, jminor=-1,
  imps={
    "frege.compiler.Classes", "ch.fhnw.thga.fregelanguageserver.compile.CompileGlobal",
    "ch.fhnw.thga.fregelanguageserver.compile.CompileOptions", "frege.compiler.common.CompilerOptions",
    "frege.compiler.common.Desugar", "frege.compiler.passes.Easy", "frege.compiler.passes.Enter",
    "frege.compiler.grammar.Frege", "frege.compiler.passes.Final", "frege.compiler.passes.Fields",
    "frege.compiler.passes.Fix", "frege.compiler.enums.Flags", "frege.compiler.passes.GlobalLam",
    "frege.compiler.types.Global", "frege.compiler.passes.Imp", "frege.compiler.passes.Instances",
    "frege.compiler.grammar.Lexer", "frege.compiler.passes.LetUnroll", "frege.compiler.types.Packs", "frege.Prelude",
    "frege.prelude.PreludeArrays", "frege.prelude.PreludeBase", "frege.prelude.PreludeDecimal",
    "frege.prelude.PreludeIO", "frege.prelude.PreludeList", "frege.prelude.PreludeMonad", "frege.prelude.PreludeText",
    "frege.test.QuickCheck", "frege.java.util.Regex", "frege.compiler.passes.Strict", "frege.control.monad.State",
    "frege.compiler.Typecheck", "frege.compiler.enums.TokenID", "frege.compiler.types.Tokens",
    "frege.compiler.passes.Transdef", "frege.compiler.passes.TypeAlias"
  },
  nmss={
    "Classes", "CompileGlobal", "CompileOptions", "CompilerOptions", "Desugar", "EA",
    "Enter", "F", "FI", "Fields", "Fix", "Flags", "GL", "Global", "Imp", "Instances", "L",
    "LU", "Packs", "Prelude", "PreludeArrays", "PreludeBase", "PreludeDecimal", "PreludeIO",
    "PreludeList", "PreludeMonad", "PreludeText", "QuickCheck", "Regexp", "SC", "State",
    "TC", "TokenID", "Tokens", "Transdef", "TypeAlias"
  },
  symas={}, symcs={},
  symis={
    @Meta.SymI(
      offset=1240,
      name=@Meta.QName(kind=0, pack="ch.fhnw.thga.fregelanguageserver.compile.CompileExecutor", base="Show_Message"),
      clas=@Meta.QName(kind=0, pack="frege.prelude.PreludeText", base="Show"), typ=0, lnks={},
      funs={
        @Meta.SymV(
          offset=1240,
          name=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.compile.CompileExecutor", base="Show_Message",
            member="showsub"
          ),
          stri="s(s)", sig=1, depth=1, rkind=13, doc="inherited from 'Show.showsub'"
        ),
        @Meta.SymV(
          offset=1240,
          name=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.compile.CompileExecutor", base="Show_Message",
            member="showList"
          ),
          stri="s(ss)", sig=4, depth=2, rkind=13, doc="inherited from 'Show.showList'"
        ),
        @Meta.SymV(
          offset=1240,
          name=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.compile.CompileExecutor", base="Show_Message",
            member="showsPrec"
          ),
          stri="s(uss)", sig=6, depth=3, rkind=13, doc="inherited from 'Show.showsPrec'"
        ),
        @Meta.SymV(
          offset=1240,
          name=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.compile.CompileExecutor", base="Show_Message",
            member="display"
          ),
          stri="s(s)", sig=1, depth=1, rkind=13, doc="inherited from 'Show.display'"
        ),
        @Meta.SymV(
          offset=1270,
          name=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.compile.CompileExecutor", base="Show_Message",
            member="show"
          ),
          stri="s(s)", sig=1, depth=1, rkind=13
        ),
        @Meta.SymV(
          offset=1240,
          name=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.compile.CompileExecutor", base="Show_Message",
            member="showChars"
          ),
          stri="s(s)", sig=7, depth=1, rkind=13, doc="inherited from 'Show.showChars'"
        )
      }
    )
  },
  symts={},
  symvs={
    @Meta.SymV(
      offset=2580,
      name=@Meta.QName(pack="ch.fhnw.thga.fregelanguageserver.compile.CompileExecutor", base="switchState"),
      stri="s(u)", sig=9, depth=1, rkind=13
    ),
    @Meta.SymV(
      offset=4809,
      name=@Meta.QName(
        pack="ch.fhnw.thga.fregelanguageserver.compile.CompileExecutor", base="shouldCorrectlyConfigureExtraClasspath"
      ),
      stri="u", sig=10, depth=0, rkind=8
    ),
    @Meta.SymV(
      offset=4622, name=@Meta.QName(pack="ch.fhnw.thga.fregelanguageserver.compile.CompileExecutor", base="runpass"),
      stri="s(s(uu))", sig=12, depth=1, rkind=13
    ),
    @Meta.SymV(
      offset=1385, name=@Meta.QName(pack="ch.fhnw.thga.fregelanguageserver.compile.CompileExecutor", base="passes"),
      stri="u", sig=13, depth=0, rkind=8
    ),
    @Meta.SymV(
      offset=3102, name=@Meta.QName(pack="ch.fhnw.thga.fregelanguageserver.compile.CompileExecutor", base="parsePass"),
      stri="s", sig=14, depth=0, rkind=13
    ),
    @Meta.SymV(
      offset=2923,
      name=@Meta.QName(pack="ch.fhnw.thga.fregelanguageserver.compile.CompileExecutor", base="lexPassSourceCode"),
      stri="s(s)", sig=15, depth=1, rkind=13
    ),
    @Meta.SymV(
      offset=2686,
      name=@Meta.QName(pack="ch.fhnw.thga.fregelanguageserver.compile.CompileExecutor", base="lexParseSourceCode"),
      stri="s(s)", sig=16, depth=1, rkind=13
    ),
    @Meta.SymV(
      offset=4464, name=@Meta.QName(pack="ch.fhnw.thga.fregelanguageserver.compile.CompileExecutor", base="compile"),
      stri="s(us)", sig=18, depth=2, rkind=13
    )
  },
  symls={},
  taus={
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.compiler.types.Global", base="Message")}),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="StringJ")}),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="Char")}),
    @Meta.Tau(kind=0, suba=1, subb=2),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="[]")}),
    @Meta.Tau(kind=0, suba=4, subb=0),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="Int")}),
    @Meta.Tau(kind=0, suba=4, subb=2),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.compiler.types.Global", base="Global")}),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.control.monad.State", base="State")}),
    @Meta.Tau(kind=0, suba=9, subb=8), @Meta.Tau(kind=0, suba=10, subb=8),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.test.QuickCheckGen", base="Gen")}),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.test.QuickCheckProperty", base="Prop")}),
    @Meta.Tau(kind=0, suba=12, subb=13),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="(,)")}),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.control.monad.State", base="StateT")}),
    @Meta.Tau(kind=0, suba=16, subb=8),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="ST")}),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="RealWorld")}),
    @Meta.Tau(kind=0, suba=18, subb=19), @Meta.Tau(kind=0, suba=17, subb=20), @Meta.Tau(kind=0, suba=15, subb=3),
    @Meta.Tau(kind=0, suba=22, subb=6), @Meta.Tau(kind=0, suba=21, subb=23), @Meta.Tau(kind=0, suba=15, subb=24),
    @Meta.Tau(kind=0, suba=25, subb=3),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="()")}),
    @Meta.Tau(kind=0, suba=21, subb=27), @Meta.Tau(kind=0, suba=4, subb=26), @Meta.Tau(kind=0, suba=10, subb=23),
    @Meta.Tau(kind=0, suba=20, subb=8)
  },
  rhos={
    @Meta.Rho(rhofun=false, rhotau=0), @Meta.Rho(rhofun=false, rhotau=3), @Meta.Rho(sigma=0, rhotau=1),
    @Meta.Rho(rhofun=false, rhotau=5), @Meta.Rho(sigma=3, rhotau=1), @Meta.Rho(sigma=2, rhotau=4),
    @Meta.Rho(rhofun=false, rhotau=6), @Meta.Rho(sigma=0, rhotau=4), @Meta.Rho(sigma=5, rhotau=7),
    @Meta.Rho(rhofun=false, rhotau=7), @Meta.Rho(sigma=0, rhotau=9), @Meta.Rho(rhofun=false, rhotau=8),
    @Meta.Rho(rhofun=false, rhotau=11), @Meta.Rho(sigma=8, rhotau=12), @Meta.Rho(rhofun=false, rhotau=14),
    @Meta.Rho(rhofun=false, rhotau=26), @Meta.Rho(rhofun=false, rhotau=28), @Meta.Rho(sigma=11, rhotau=16),
    @Meta.Rho(rhofun=false, rhotau=29), @Meta.Rho(rhofun=false, rhotau=30), @Meta.Rho(sigma=3, rhotau=19),
    @Meta.Rho(sigma=3, rhotau=12), @Meta.Rho(rhofun=false, rhotau=31), @Meta.Rho(sigma=17, rhotau=22),
    @Meta.Rho(sigma=3, rhotau=23)
  },
  sigmas={
    @Meta.Sigma(rho=0), @Meta.Sigma(rho=2), @Meta.Sigma(rho=3), @Meta.Sigma(rho=1), @Meta.Sigma(rho=5),
    @Meta.Sigma(rho=6), @Meta.Sigma(rho=8), @Meta.Sigma(rho=10), @Meta.Sigma(rho=11), @Meta.Sigma(rho=13),
    @Meta.Sigma(rho=14), @Meta.Sigma(rho=15), @Meta.Sigma(rho=17), @Meta.Sigma(rho=18), @Meta.Sigma(rho=19),
    @Meta.Sigma(rho=20), @Meta.Sigma(rho=21), @Meta.Sigma(rho=22), @Meta.Sigma(rho=24)
  },
  exprs={@Meta.Expr()}
)
final public class CompileExecutor  {
  


final public static class IShow_Message implements PreludeText.CShow<Global.TMessage> {
  public IShow_Message() {}
  final public static IShow_Message it = new IShow_Message();
  @Override final public String/*<Character>*/ ƒshowsub(final Lazy<Global.TMessage> arg$1) {
    return IShow_Message.showsub(arg$1.call());
  }
  @Override final public String/*<Character>*/ ƒshowList(
    final Lazy<PreludeBase.TList<Global.TMessage>> arg$1, final Lazy<String/*<Character>*/> arg$2
  ) {
    return IShow_Message.showList(arg$1.call(), arg$2.call());
  }
  @Override final public String/*<Character>*/ ƒshowsPrec(
    final Lazy<Integer> arg$1, final Lazy<Global.TMessage> arg$2, final Lazy<String/*<Character>*/> arg$3
  ) {
    return IShow_Message.showsPrec(arg$1, arg$2.call(), arg$3.call());
  }
  @Override final public String/*<Character>*/ ƒdisplay(final Lazy<Global.TMessage> arg$1) {
    return IShow_Message.display(arg$1.call());
  }
  @Override final public String/*<Character>*/ ƒshow(final Lazy<Global.TMessage> arg$1) {
    return IShow_Message.show(arg$1.call());
  }
  @Override final public PreludeBase.TList<Character> ƒshowChars(final Lazy<Global.TMessage> arg$1) {
    return IShow_Message.showChars(arg$1.call());
  }
  final public static String/*<Character>*/ showsub(final Global.TMessage arg$1) {
    return IShow_Message.show(arg$1);
  }
  final public static String/*<Character>*/ showList(
    final PreludeBase.TList<Global.TMessage> arg$1, final String/*<Character>*/ arg$2
  ) {
    return "[" + (PreludeText.joined(
              Thunk.<String/*<Character>*/>lazy(", "),
              PreludeList.<String/*<Character>*/, Global.TMessage>map(
                    (Func.U<Global.TMessage, String/*<Character>*/>)((final Lazy<Global.TMessage> η$19309) -> Thunk.<
                          String/*<Character>*/
                        >shared((Lazy<String/*<Character>*/>)(() -> IShow_Message.show(η$19309.call())))),
                    arg$1
                  )
            ).call() + ("]" + arg$2));
  }
  final public static String/*<Character>*/ showsPrec(
    final Lazy<Integer> arg$1, final Global.TMessage arg$2, final String/*<Character>*/ arg$3
  ) {
    return IShow_Message.show(arg$2) + arg$3;
  }
  final public static String/*<Character>*/ display(final Global.TMessage arg$1) {
    return IShow_Message.show(arg$1);
  }
  final public static String/*<Character>*/ show(final Global.TMessage arg$1) {
    return Errors.IShow_Severity.show(Global.TMessage.level(arg$1)).substring(0, 1) + (" " + (TokenID.IShow_TokenID.show(
              Tokens.TToken.tokid(Positions.TPosition.first(Global.TMessage.pos(arg$1)))
            ) + (String.valueOf(Positions.TPosition.end(Global.TMessage.pos(arg$1))) + (": " + Global.TMessage.text(
              arg$1
            )))));
  }
  final public static PreludeBase.TList<Character> showChars(final Global.TMessage arg$1) {
    return PreludeList.IListView_StringJ.<Character>toList(IShow_Message.show(arg$1));
  }
}

final public static State.TState<Global.TGlobal, Global.TGlobal> switchState(final Lazy<Global.TGlobal> arg$1) {
  return State.TState.<Global.TGlobal, Global.TGlobal>mk(
            (Func.U<Global.TGlobal, PreludeBase.TTuple2<Global.TGlobal, Global.TGlobal>>)((
              final Lazy<Global.TGlobal> arg$19310
            ) -> {
                  final Global.TGlobal v7690$18216 = arg$19310.call();
                  final State.TState<Global.TGlobal, Short> $19312 = State.TState.<Global.TGlobal>put(
                        arg$1
                      );
                  final Func.U<Global.TGlobal, PreludeBase.TTuple2<Short, Global.TGlobal>> v8822$18252 =
                  $19312.mem$fun;
                  final PreludeBase.TTuple2<Short, Global.TGlobal> $19314 = v8822$18252
                  .apply(v7690$18216).call();
                  return PreludeBase.TTuple2.<Global.TGlobal, Global.TGlobal>mk(v7690$18216, $19314.mem2);
                })
          );
}
final public static State.TStateT<Global.TGlobal, Func.U<RealWorld, ?>, Short> runpass(
  final PreludeBase.TTuple2<
    State.TStateT<Global.TGlobal, Func.U<RealWorld, ?>, PreludeBase.TTuple2<String/*<Character>*/, Integer>>,
    String/*<Character>*/
  > arg$1
) {
  return State.TStateT.<Global.TGlobal, Func.U<RealWorld, ?>, Short>mk(
            (Func.U<Global.TGlobal, Kind.U<Func.U<RealWorld, ?>, PreludeBase.TTuple2<Short, Global.TGlobal>>>)((
              final Lazy<Global.TGlobal> arg$19315
            ) -> {
                  return Thunk.<Kind.U<Func.U<RealWorld, ?>, PreludeBase.TTuple2<Short, Global.TGlobal>>>lazy(
                            (Kind.U<Func.U<RealWorld, ?>, PreludeBase.TTuple2<Short, Global.TGlobal>>)(Func.U<
                              RealWorld, PreludeBase.TTuple2<Short, Global.TGlobal>
                            >)((final Lazy<RealWorld> arg$19316) -> {
                                  final PreludeBase.TTuple2<Global.TGlobal, Global.TGlobal> v2056$18359 =
                                  PreludeMonad.IMonad_ST.<RealWorld, PreludeBase.TTuple2<Global.TGlobal, Global.TGlobal>>pure(
                                        PreludeBase.TTuple2.<Global.TGlobal, Global.TGlobal>mk(
                                              arg$19315, arg$19315
                                            )
                                      ).apply(arg$19316).call();
                                  final Global.TGlobal v7737$18327 = v2056$18359.mem1
                                  .call();
                                  final State.TStateT<
                                    Global.TGlobal, Func.U<RealWorld, ?>, PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                  > $19319 = arg$1.mem1.call();
                                  if (Global.TGlobal.errors(v7737$18327) == 0) {
                                    final Func.U<
                                      RealWorld,
                                      PreludeBase.TTuple2<PreludeBase.TTuple2<String/*<Character>*/, Integer>, Global.TGlobal>
                                    > v2053$18479 = RunTM.<
                                      Func.U<
                                        Global.TGlobal,
                                        Func.U<
                                          RealWorld,
                                          PreludeBase.TTuple2<
                                            PreludeBase.TTuple2<String/*<Character>*/, Integer>, Global.TGlobal
                                          >
                                        >
                                      >
                                    >cast($19319.mem$run).apply(v2056$18359.mem2).call();
                                    final PreludeBase.TTuple2<
                                      PreludeBase.TTuple2<String/*<Character>*/, Integer>, Global.TGlobal
                                    > v2056$18481 = v2053$18479.apply(arg$19316).call();
                                    final PreludeBase.TTuple2<String/*<Character>*/, Integer> v7737$18482 =
                                    v2056$18481.mem1.call();
                                    final Func.U<RealWorld, PreludeBase.TTuple2<Short, Global.TGlobal>> v2057$18487 =
                                    PreludeMonad.IMonad_ST.<RealWorld, PreludeBase.TTuple2<Short, Global.TGlobal>>pure(
                                          PreludeBase.TTuple2.<Short, Global.TGlobal>mk(
                                                Thunk.<Short>lazy(PreludeBase.TUnit.Unit), v2056$18481.mem2
                                              )
                                        );
                                    return Thunk.<PreludeBase.TTuple2<Short, Global.TGlobal>>nested(
                                              (Lazy<Lazy<PreludeBase.TTuple2<Short, Global.TGlobal>>>)(() -> v2057$18487
                                                  .apply(arg$19316))
                                            );
                                  }
                                  else {
                                    final Func.U<RealWorld, PreludeBase.TTuple2<Short, Global.TGlobal>> v2057$18493 =
                                    PreludeMonad.IMonad_ST.<RealWorld, PreludeBase.TTuple2<Short, Global.TGlobal>>pure(
                                          PreludeBase.TTuple2.<Short, Global.TGlobal>mk(
                                                Thunk.<Short>lazy(PreludeBase.TUnit.Unit), v2056$18359.mem2
                                              )
                                        );
                                    return Thunk.<PreludeBase.TTuple2<Short, Global.TGlobal>>nested(
                                              (Lazy<Lazy<PreludeBase.TTuple2<Short, Global.TGlobal>>>)(() -> v2057$18493
                                                  .apply(arg$19316))
                                            );
                                  }
                                })
                          );
                })
          );
}
final public static Lazy<PreludeBase.TList<
  PreludeBase.TTuple2<
    State.TStateT<Global.TGlobal, Func.U<RealWorld, ?>, PreludeBase.TTuple2<String/*<Character>*/, Integer>>,
    String/*<Character>*/
  >
>> passes = Thunk.<
  PreludeBase.TList<
    PreludeBase.TTuple2<
      State.TStateT<Global.TGlobal, Func.U<RealWorld, ?>, PreludeBase.TTuple2<String/*<Character>*/, Integer>>,
      String/*<Character>*/
    >
  >
>shared(
      (Lazy<PreludeBase.TList<
        PreludeBase.TTuple2<
          State.TStateT<Global.TGlobal, Func.U<RealWorld, ?>, PreludeBase.TTuple2<String/*<Character>*/, Integer>>,
          String/*<Character>*/
        >
      >>)(() -> {
            return PreludeBase.TList.DCons.<
                  PreludeBase.TTuple2<
                    State.TStateT<Global.TGlobal, Func.U<RealWorld, ?>, PreludeBase.TTuple2<String/*<Character>*/, Integer>>,
                    String/*<Character>*/
                  >
                >mk(
                      PreludeBase.TTuple2.<
                        State.TStateT<
                          Global.TGlobal, Func.U<RealWorld, ?>, PreludeBase.TTuple2<String/*<Character>*/, Integer>
                        >,
                        String/*<Character>*/
                      >mk(
                            Thunk.<
                              State.TStateT<
                                Global.TGlobal, Func.U<RealWorld, ?>, PreludeBase.TTuple2<String/*<Character>*/, Integer>
                              >
                            >shared(
                                  (Lazy<State.TStateT<
                                    Global.TGlobal, Func.U<RealWorld, ?>, PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                  >>)(() -> State.<
                                        Func.U<RealWorld, ?>, PreludeBase.TTuple2<String/*<Character>*/, Integer>,
                                        Global.TGlobal
                                      >promote(PreludeMonad.IMonad_ST.<RealWorld>mk(), Fix.pass))
                                ),
                            Thunk.<String/*<Character>*/>lazy("join definitions")
                          ),
                      PreludeBase.TList.DCons.<
                        PreludeBase.TTuple2<
                          State.TStateT<
                            Global.TGlobal, Func.U<RealWorld, ?>, PreludeBase.TTuple2<String/*<Character>*/, Integer>
                          >,
                          String/*<Character>*/
                        >
                      >mk(
                            PreludeBase.TTuple2.<
                              State.TStateT<
                                Global.TGlobal, Func.U<RealWorld, ?>, PreludeBase.TTuple2<String/*<Character>*/, Integer>
                              >,
                              String/*<Character>*/
                            >mk(Imp.pass, Thunk.<String/*<Character>*/>lazy("import packages")),
                            PreludeBase.TList.DCons.<
                              PreludeBase.TTuple2<
                                State.TStateT<
                                  Global.TGlobal, Func.U<RealWorld, ?>, PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                >,
                                String/*<Character>*/
                              >
                            >mk(
                                  PreludeBase.TTuple2.<
                                    State.TStateT<
                                      Global.TGlobal, Func.U<RealWorld, ?>, PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                    >,
                                    String/*<Character>*/
                                  >mk(
                                        Thunk.<
                                          State.TStateT<
                                            Global.TGlobal, Func.U<RealWorld, ?>,
                                            PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                          >
                                        >shared(
                                              (Lazy<State.TStateT<
                                                Global.TGlobal, Func.U<RealWorld, ?>,
                                                PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                              >>)(() -> State.<
                                                    Func.U<RealWorld, ?>, PreludeBase.TTuple2<String/*<Character>*/, Integer>,
                                                    Global.TGlobal
                                                  >promote(
                                                        PreludeMonad.IMonad_ST.<RealWorld>mk(),
                                                        Thunk.<
                                                          State.TState<
                                                            Global.TGlobal, PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                                          >
                                                        >shared(
                                                              (Lazy<State.TState<
                                                                Global.TGlobal,
                                                                PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                                              >>)(() -> Classes.passI(
                                                                        Thunk.<Boolean>lazy(
                                                                              true
                                                                            )
                                                                      ))
                                                            )
                                                      ))
                                            ),
                                        Thunk.<String/*<Character>*/>lazy("verify imported instances")
                                      ),
                                  PreludeBase.TList.DCons.<
                                    PreludeBase.TTuple2<
                                      State.TStateT<
                                        Global.TGlobal, Func.U<RealWorld, ?>,
                                        PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                      >,
                                      String/*<Character>*/
                                    >
                                  >mk(
                                        PreludeBase.TTuple2.<
                                          State.TStateT<
                                            Global.TGlobal, Func.U<RealWorld, ?>,
                                            PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                          >,
                                          String/*<Character>*/
                                        >mk(
                                              Thunk.<
                                                State.TStateT<
                                                  Global.TGlobal, Func.U<RealWorld, ?>,
                                                  PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                                >
                                              >shared(
                                                    (Lazy<State.TStateT<
                                                      Global.TGlobal, Func.U<RealWorld, ?>,
                                                      PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                                    >>)(() -> State.<
                                                          Func.U<RealWorld, ?>,
                                                          PreludeBase.TTuple2<String/*<Character>*/, Integer>, Global.TGlobal
                                                        >promote(PreludeMonad.IMonad_ST.<RealWorld>mk(), Enter.pass))
                                                  ),
                                              Thunk.<String/*<Character>*/>lazy("enter definitions")
                                            ),
                                        PreludeBase.TList.DCons.<
                                          PreludeBase.TTuple2<
                                            State.TStateT<
                                              Global.TGlobal, Func.U<RealWorld, ?>,
                                              PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                            >,
                                            String/*<Character>*/
                                          >
                                        >mk(
                                              PreludeBase.TTuple2.<
                                                State.TStateT<
                                                  Global.TGlobal, Func.U<RealWorld, ?>,
                                                  PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                                >,
                                                String/*<Character>*/
                                              >mk(
                                                    Thunk.<
                                                      State.TStateT<
                                                        Global.TGlobal, Func.U<RealWorld, ?>,
                                                        PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                                      >
                                                    >shared(
                                                          (Lazy<State.TStateT<
                                                            Global.TGlobal, Func.U<RealWorld, ?>,
                                                            PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                                          >>)(() -> State.<
                                                                Func.U<RealWorld, ?>,
                                                                PreludeBase.TTuple2<String/*<Character>*/, Integer>,
                                                                Global.TGlobal
                                                              >promote(PreludeMonad.IMonad_ST.<RealWorld>mk(), Fields.pass))
                                                        ),
                                                    Thunk.<String/*<Character>*/>lazy(
                                                          "field definitions"
                                                        )
                                                  ),
                                              PreludeBase.TList.DCons.<
                                                PreludeBase.TTuple2<
                                                  State.TStateT<
                                                    Global.TGlobal, Func.U<RealWorld, ?>,
                                                    PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                                  >,
                                                  String/*<Character>*/
                                                >
                                              >mk(
                                                    PreludeBase.TTuple2.<
                                                      State.TStateT<
                                                        Global.TGlobal, Func.U<RealWorld, ?>,
                                                        PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                                      >,
                                                      String/*<Character>*/
                                                    >mk(
                                                          Thunk.<
                                                            State.TStateT<
                                                              Global.TGlobal, Func.U<RealWorld, ?>,
                                                              PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                                            >
                                                          >shared(
                                                                (Lazy<State.TStateT<
                                                                  Global.TGlobal, Func.U<RealWorld, ?>,
                                                                  PreludeBase.TTuple2<
                                                                    String/*<Character>*/, Integer
                                                                  >
                                                                >>)(() -> State.<
                                                                      Func.U<RealWorld, ?>,
                                                                      PreludeBase.TTuple2<
                                                                        String/*<Character>*/, Integer
                                                                      >,
                                                                      Global.TGlobal
                                                                    >promote(
                                                                          PreludeMonad.IMonad_ST.<RealWorld>mk(), TypeAlias.pass
                                                                        ))
                                                              ),
                                                          Thunk.<String/*<Character>*/>lazy(
                                                                "process type aliases"
                                                              )
                                                        ),
                                                    PreludeBase.TList.DCons.<
                                                      PreludeBase.TTuple2<
                                                        State.TStateT<
                                                          Global.TGlobal, Func.U<RealWorld, ?>,
                                                          PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                                        >,
                                                        String/*<Character>*/
                                                      >
                                                    >mk(
                                                          PreludeBase.TTuple2.<
                                                            State.TStateT<
                                                              Global.TGlobal, Func.U<RealWorld, ?>,
                                                              PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                                            >,
                                                            String/*<Character>*/
                                                          >mk(
                                                                Thunk.<
                                                                  State.TStateT<
                                                                    Global.TGlobal, Func.U<RealWorld, ?>,
                                                                    PreludeBase.TTuple2<
                                                                      String/*<Character>*/, Integer
                                                                    >
                                                                  >
                                                                >shared(
                                                                      (Lazy<State.TStateT<
                                                                        Global.TGlobal, Func.U<RealWorld, ?>,
                                                                        PreludeBase.TTuple2<
                                                                          String/*<Character>*/, Integer
                                                                        >
                                                                      >>)(() -> State.<
                                                                            Func.U<RealWorld, ?>,
                                                                            PreludeBase.TTuple2<
                                                                              String/*<Character>*/, Integer
                                                                            >,
                                                                            Global.TGlobal
                                                                          >promote(
                                                                                PreludeMonad.IMonad_ST.<
                                                                                  RealWorld
                                                                                >mk(),
                                                                                Thunk.<
                                                                                  State.TState<
                                                                                    Global.TGlobal,
                                                                                    PreludeBase.TTuple2<
                                                                                      String/*
                                                                                        <
                                                                                          Character
                                                                                        >
                                                                                      */,
                                                                                      Integer
                                                                                    >
                                                                                  >
                                                                                >shared(
                                                                                      (Lazy<State.TState<
                                                                                        Global.TGlobal,
                                                                                        PreludeBase.TTuple2<
                                                                                          String/*
                                                                                            <
                                                                                              Character
                                                                                            >
                                                                                          */,
                                                                                          Integer
                                                                                        >
                                                                                      >>)(() -> Instances.pass(
                                                                                                PreludeBase.TUnit.Unit
                                                                                              ))
                                                                                    )
                                                                              ))
                                                                    ),
                                                                Thunk.<String/*<Character>*/>lazy(
                                                                      "derive and enter instances"
                                                                    )
                                                              ),
                                                          PreludeBase.TList.DCons.<
                                                            PreludeBase.TTuple2<
                                                              State.TStateT<
                                                                Global.TGlobal, Func.U<RealWorld, ?>,
                                                                PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                                              >,
                                                              String/*<Character>*/
                                                            >
                                                          >mk(
                                                                PreludeBase.TTuple2.<
                                                                  State.TStateT<
                                                                    Global.TGlobal, Func.U<RealWorld, ?>,
                                                                    PreludeBase.TTuple2<
                                                                      String/*<Character>*/, Integer
                                                                    >
                                                                  >,
                                                                  String/*<Character>*/
                                                                >mk(
                                                                      Transdef.pass,
                                                                      Thunk.<String/*<Character>*/>lazy(
                                                                            "resolve names"
                                                                          )
                                                                    ),
                                                                PreludeBase.TList.DCons.<
                                                                  PreludeBase.TTuple2<
                                                                    State.TStateT<
                                                                      Global.TGlobal, Func.U<RealWorld, ?>,
                                                                      PreludeBase.TTuple2<
                                                                        String/*<Character>*/, Integer
                                                                      >
                                                                    >,
                                                                    String/*<Character>*/
                                                                  >
                                                                >mk(
                                                                      PreludeBase.TTuple2.<
                                                                        State.TStateT<
                                                                          Global.TGlobal, Func.U<RealWorld, ?>,
                                                                          PreludeBase.TTuple2<
                                                                            String/*<Character>*/, Integer
                                                                          >
                                                                        >,
                                                                        String/*<Character>*/
                                                                      >mk(
                                                                            Thunk.<
                                                                              State.TStateT<
                                                                                Global.TGlobal, Func.U<RealWorld, ?>,
                                                                                PreludeBase.TTuple2<
                                                                                  String/*<Character>*/, Integer
                                                                                >
                                                                              >
                                                                            >shared(
                                                                                  (Lazy<State.TStateT<
                                                                                    Global.TGlobal, Func.U<RealWorld, ?>,
                                                                                    PreludeBase.TTuple2<
                                                                                      String/*
                                                                                        <
                                                                                          Character
                                                                                        >
                                                                                      */,
                                                                                      Integer
                                                                                    >
                                                                                  >>)(() -> State.<
                                                                                        Func.U<
                                                                                          RealWorld,
                                                                                          ?
                                                                                        >,
                                                                                        PreludeBase.TTuple2<
                                                                                          String/*
                                                                                            <
                                                                                              Character
                                                                                            >
                                                                                          */,
                                                                                          Integer
                                                                                        >,
                                                                                        Global.TGlobal
                                                                                      >promote(
                                                                                            PreludeMonad.IMonad_ST.<
                                                                                              RealWorld
                                                                                            >mk(),
                                                                                            Classes.passC
                                                                                          ))
                                                                                ),
                                                                            Thunk.<String/*<Character>*/>lazy(
                                                                                  "verify class definitions"
                                                                                )
                                                                          ),
                                                                      PreludeBase.TList.DCons.<
                                                                        PreludeBase.TTuple2<
                                                                          State.TStateT<
                                                                            Global.TGlobal, Func.U<RealWorld, ?>,
                                                                            PreludeBase.TTuple2<
                                                                              String/*<Character>*/, Integer
                                                                            >
                                                                          >,
                                                                          String/*<Character>*/
                                                                        >
                                                                      >mk(
                                                                            PreludeBase.TTuple2.<
                                                                              State.TStateT<
                                                                                Global.TGlobal, Func.U<RealWorld, ?>,
                                                                                PreludeBase.TTuple2<
                                                                                  String/*<Character>*/, Integer
                                                                                >
                                                                              >,
                                                                              String/*<Character>*/
                                                                            >mk(
                                                                                  Thunk.<
                                                                                    State.TStateT<
                                                                                      Global.TGlobal,
                                                                                      Func.U<
                                                                                        RealWorld,
                                                                                        ?
                                                                                      >,
                                                                                      PreludeBase.TTuple2<
                                                                                        String/*
                                                                                          <
                                                                                            Character
                                                                                          >
                                                                                        */,
                                                                                        Integer
                                                                                      >
                                                                                    >
                                                                                  >shared(
                                                                                        (Lazy<State.TStateT<
                                                                                          Global.TGlobal,
                                                                                          Func.U<
                                                                                            RealWorld,
                                                                                            ?
                                                                                          >,
                                                                                          PreludeBase.TTuple2<
                                                                                            String/*
                                                                                              <
                                                                                                Character
                                                                                              >
                                                                                            */,
                                                                                            Integer
                                                                                          >
                                                                                        >>)(() -> Global.<
                                                                                              PreludeBase.TTuple2<
                                                                                                String/*
                                                                                                  <
                                                                                                    Character
                                                                                                  >
                                                                                                */,
                                                                                                Integer
                                                                                              >
                                                                                            >liftStG(
                                                                                                  Thunk.<
                                                                                                    State.TState<
                                                                                                      Global.TGlobal,
                                                                                                      PreludeBase.TTuple2<
                                                                                                        String/*
                                                                                                          <
                                                                                                            Character
                                                                                                          >
                                                                                                        */,
                                                                                                        Integer
                                                                                                      >
                                                                                                    >
                                                                                                  >shared(
                                                                                                        (Lazy<State.TState<
                                                                                                          Global.TGlobal,
                                                                                                          PreludeBase.TTuple2<
                                                                                                            String/*
                                                                                                              <
                                                                                                                Character
                                                                                                              >
                                                                                                            */,
                                                                                                            Integer
                                                                                                          >
                                                                                                        >>)(() -> Classes.passI(
                                                                                                                  Thunk.<
                                                                                                                    Boolean
                                                                                                                  >lazy(
                                                                                                                        false
                                                                                                                      )
                                                                                                                ))
                                                                                                      )
                                                                                                ))
                                                                                      ),
                                                                                  Thunk.<
                                                                                    String/*
                                                                                      <
                                                                                        Character
                                                                                      >
                                                                                    */
                                                                                  >lazy(
                                                                                        "verify own instances"
                                                                                      )
                                                                                ),
                                                                            PreludeBase.TList.DCons.<
                                                                              PreludeBase.TTuple2<
                                                                                State.TStateT<
                                                                                  Global.TGlobal, Func.U<RealWorld, ?>,
                                                                                  PreludeBase.TTuple2<
                                                                                    String/*<Character>*/, Integer
                                                                                  >
                                                                                >,
                                                                                String/*
                                                                                  <Character>
                                                                                */
                                                                              >
                                                                            >mk(
                                                                                  PreludeBase.TTuple2.<
                                                                                    State.TStateT<
                                                                                      Global.TGlobal,
                                                                                      Func.U<
                                                                                        RealWorld,
                                                                                        ?
                                                                                      >,
                                                                                      PreludeBase.TTuple2<
                                                                                        String/*
                                                                                          <
                                                                                            Character
                                                                                          >
                                                                                        */,
                                                                                        Integer
                                                                                      >
                                                                                    >,
                                                                                    String/*
                                                                                      <
                                                                                        Character
                                                                                      >
                                                                                    */
                                                                                  >mk(
                                                                                        Thunk.<
                                                                                          State.TStateT<
                                                                                            Global.TGlobal,
                                                                                            Func.U<
                                                                                              RealWorld,
                                                                                              ?
                                                                                            >,
                                                                                            PreludeBase.TTuple2<
                                                                                              String/*
                                                                                                <
                                                                                                  Character
                                                                                                >
                                                                                              */,
                                                                                              Integer
                                                                                            >
                                                                                          >
                                                                                        >shared(
                                                                                              (Lazy<State.TStateT<
                                                                                                Global.TGlobal,
                                                                                                Func.U<
                                                                                                  RealWorld,
                                                                                                  ?
                                                                                                >,
                                                                                                PreludeBase.TTuple2<
                                                                                                  String/*
                                                                                                    <
                                                                                                      Character
                                                                                                    >
                                                                                                  */,
                                                                                                  Integer
                                                                                                >
                                                                                              >>)(() -> State.<
                                                                                                    Func.U<
                                                                                                      RealWorld,
                                                                                                      ?
                                                                                                    >,
                                                                                                    PreludeBase.TTuple2<
                                                                                                      String/*
                                                                                                        <
                                                                                                          Character
                                                                                                        >
                                                                                                      */,
                                                                                                      Integer
                                                                                                    >,
                                                                                                    Global.TGlobal
                                                                                                  >promote(
                                                                                                        PreludeMonad.IMonad_ST.<
                                                                                                          RealWorld
                                                                                                        >mk(),
                                                                                                        LetUnroll.pass
                                                                                                      ))
                                                                                            ),
                                                                                        Thunk.<
                                                                                          String/*
                                                                                            <
                                                                                              Character
                                                                                            >
                                                                                          */
                                                                                        >lazy(
                                                                                              "simplify lets"
                                                                                            )
                                                                                      ),
                                                                                  PreludeBase.TList.DCons.<
                                                                                    PreludeBase.TTuple2<
                                                                                      State.TStateT<
                                                                                        Global.TGlobal,
                                                                                        Func.U<
                                                                                          RealWorld,
                                                                                          ?
                                                                                        >,
                                                                                        PreludeBase.TTuple2<
                                                                                          String/*
                                                                                            <
                                                                                              Character
                                                                                            >
                                                                                          */,
                                                                                          Integer
                                                                                        >
                                                                                      >,
                                                                                      String/*
                                                                                        <
                                                                                          Character
                                                                                        >
                                                                                      */
                                                                                    >
                                                                                  >mk(
                                                                                        PreludeBase.TTuple2.<
                                                                                          State.TStateT<
                                                                                            Global.TGlobal,
                                                                                            Func.U<
                                                                                              RealWorld,
                                                                                              ?
                                                                                            >,
                                                                                            PreludeBase.TTuple2<
                                                                                              String/*
                                                                                                <
                                                                                                  Character
                                                                                                >
                                                                                              */,
                                                                                              Integer
                                                                                            >
                                                                                          >,
                                                                                          String/*
                                                                                            <
                                                                                              Character
                                                                                            >
                                                                                          */
                                                                                        >mk(
                                                                                              Typecheck.pass,
                                                                                              Thunk.<
                                                                                                String/*
                                                                                                  <
                                                                                                    Character
                                                                                                  >
                                                                                                */
                                                                                              >lazy(
                                                                                                    "type check"
                                                                                                  )
                                                                                            ),
                                                                                        PreludeBase.TList.DCons.<
                                                                                          PreludeBase.TTuple2<
                                                                                            State.TStateT<
                                                                                              Global.TGlobal,
                                                                                              Func.U<
                                                                                                RealWorld,
                                                                                                ?
                                                                                              >,
                                                                                              PreludeBase.TTuple2<
                                                                                                String/*
                                                                                                  <
                                                                                                    Character
                                                                                                  >
                                                                                                */,
                                                                                                Integer
                                                                                              >
                                                                                            >,
                                                                                            String/*
                                                                                              <
                                                                                                Character
                                                                                              >
                                                                                            */
                                                                                          >
                                                                                        >mk(
                                                                                              PreludeBase.TTuple2.<
                                                                                                State.TStateT<
                                                                                                  Global.TGlobal,
                                                                                                  Func.U<
                                                                                                    RealWorld,
                                                                                                    ?
                                                                                                  >,
                                                                                                  PreludeBase.TTuple2<
                                                                                                    String/*
                                                                                                      <
                                                                                                        Character
                                                                                                      >
                                                                                                    */,
                                                                                                    Integer
                                                                                                  >
                                                                                                >,
                                                                                                String/*
                                                                                                  <
                                                                                                    Character
                                                                                                  >
                                                                                                */
                                                                                              >mk(
                                                                                                    Thunk.<
                                                                                                      State.TStateT<
                                                                                                        Global.TGlobal,
                                                                                                        Func.U<
                                                                                                          RealWorld,
                                                                                                          ?
                                                                                                        >,
                                                                                                        PreludeBase.TTuple2<
                                                                                                          String/*
                                                                                                            <
                                                                                                              Character
                                                                                                            >
                                                                                                          */,
                                                                                                          Integer
                                                                                                        >
                                                                                                      >
                                                                                                    >shared(
                                                                                                          (Lazy<State.TStateT<
                                                                                                            Global.TGlobal,
                                                                                                            Func.U<
                                                                                                              RealWorld,
                                                                                                              ?
                                                                                                            >,
                                                                                                            PreludeBase.TTuple2<
                                                                                                              String/*
                                                                                                                <
                                                                                                                  Character
                                                                                                                >
                                                                                                              */,
                                                                                                              Integer
                                                                                                            >
                                                                                                          >>)(() -> State.<
                                                                                                                Func.U<
                                                                                                                  RealWorld,
                                                                                                                  ?
                                                                                                                >,
                                                                                                                PreludeBase.TTuple2<
                                                                                                                  String/*
                                                                                                                    <
                                                                                                                      Character
                                                                                                                    >
                                                                                                                  */,
                                                                                                                  Integer
                                                                                                                >,
                                                                                                                Global.TGlobal
                                                                                                              >promote(
                                                                                                                    PreludeMonad.IMonad_ST.<
                                                                                                                      RealWorld
                                                                                                                    >mk(),
                                                                                                                    Easy.pass
                                                                                                                  ))
                                                                                                        ),
                                                                                                    Thunk.<
                                                                                                      String/*
                                                                                                        <
                                                                                                          Character
                                                                                                        >
                                                                                                      */
                                                                                                    >lazy(
                                                                                                          "simplify expressions"
                                                                                                        )
                                                                                                  ),
                                                                                              PreludeBase.TList.DCons.<
                                                                                                PreludeBase.TTuple2<
                                                                                                  State.TStateT<
                                                                                                    Global.TGlobal,
                                                                                                    Func.U<
                                                                                                      RealWorld,
                                                                                                      ?
                                                                                                    >,
                                                                                                    PreludeBase.TTuple2<
                                                                                                      String/*
                                                                                                        <
                                                                                                          Character
                                                                                                        >
                                                                                                      */,
                                                                                                      Integer
                                                                                                    >
                                                                                                  >,
                                                                                                  String/*
                                                                                                    <
                                                                                                      Character
                                                                                                    >
                                                                                                  */
                                                                                                >
                                                                                              >mk(
                                                                                                    PreludeBase.TTuple2.<
                                                                                                      State.TStateT<
                                                                                                        Global.TGlobal,
                                                                                                        Func.U<
                                                                                                          RealWorld,
                                                                                                          ?
                                                                                                        >,
                                                                                                        PreludeBase.TTuple2<
                                                                                                          String/*
                                                                                                            <
                                                                                                              Character
                                                                                                            >
                                                                                                          */,
                                                                                                          Integer
                                                                                                        >
                                                                                                      >,
                                                                                                      String/*
                                                                                                        <
                                                                                                          Character
                                                                                                        >
                                                                                                      */
                                                                                                    >mk(
                                                                                                          Thunk.<
                                                                                                            State.TStateT<
                                                                                                              Global.TGlobal,
                                                                                                              Func.U<
                                                                                                                RealWorld,
                                                                                                                ?
                                                                                                              >,
                                                                                                              PreludeBase.TTuple2<
                                                                                                                String/*
                                                                                                                  <
                                                                                                                    Character
                                                                                                                  >
                                                                                                                */,
                                                                                                                Integer
                                                                                                              >
                                                                                                            >
                                                                                                          >shared(
                                                                                                                (Lazy<State.TStateT<
                                                                                                                  Global.TGlobal,
                                                                                                                  Func.U<
                                                                                                                    RealWorld,
                                                                                                                    ?
                                                                                                                  >,
                                                                                                                  PreludeBase.TTuple2<
                                                                                                                    String/*
                                                                                                                      <
                                                                                                                        Character
                                                                                                                      >
                                                                                                                    */,
                                                                                                                    Integer
                                                                                                                  >
                                                                                                                >>)(() -> State.<
                                                                                                                      Func.U<
                                                                                                                        RealWorld,
                                                                                                                        ?
                                                                                                                      >,
                                                                                                                      PreludeBase.TTuple2<
                                                                                                                        String/*
                                                                                                                          <
                                                                                                                            Character
                                                                                                                          >
                                                                                                                        */,
                                                                                                                        Integer
                                                                                                                      >,
                                                                                                                      Global.TGlobal
                                                                                                                    >promote(
                                                                                                                          PreludeMonad.IMonad_ST.<
                                                                                                                            RealWorld
                                                                                                                          >mk(),
                                                                                                                          GlobalLam.pass
                                                                                                                        ))
                                                                                                              ),
                                                                                                          Thunk.<
                                                                                                            String/*
                                                                                                              <
                                                                                                                Character
                                                                                                              >
                                                                                                            */
                                                                                                          >lazy(
                                                                                                                "globalize anonymous lambdas"
                                                                                                              )
                                                                                                        ),
                                                                                                    PreludeBase.TList.DCons.<
                                                                                                      PreludeBase.TTuple2<
                                                                                                        State.TStateT<
                                                                                                          Global.TGlobal,
                                                                                                          Func.U<
                                                                                                            RealWorld,
                                                                                                            ?
                                                                                                          >,
                                                                                                          PreludeBase.TTuple2<
                                                                                                            String/*
                                                                                                              <
                                                                                                                Character
                                                                                                              >
                                                                                                            */,
                                                                                                            Integer
                                                                                                          >
                                                                                                        >,
                                                                                                        String/*
                                                                                                          <
                                                                                                            Character
                                                                                                          >
                                                                                                        */
                                                                                                      >
                                                                                                    >mk(
                                                                                                          PreludeBase.TTuple2.<
                                                                                                            State.TStateT<
                                                                                                              Global.TGlobal,
                                                                                                              Func.U<
                                                                                                                RealWorld,
                                                                                                                ?
                                                                                                              >,
                                                                                                              PreludeBase.TTuple2<
                                                                                                                String/*
                                                                                                                  <
                                                                                                                    Character
                                                                                                                  >
                                                                                                                */,
                                                                                                                Integer
                                                                                                              >
                                                                                                            >,
                                                                                                            String/*
                                                                                                              <
                                                                                                                Character
                                                                                                              >
                                                                                                            */
                                                                                                          >mk(
                                                                                                                Thunk.<
                                                                                                                  State.TStateT<
                                                                                                                    Global.TGlobal,
                                                                                                                    Func.U<
                                                                                                                      RealWorld,
                                                                                                                      ?
                                                                                                                    >,
                                                                                                                    PreludeBase.TTuple2<
                                                                                                                      String/*
                                                                                                                        <
                                                                                                                          Character
                                                                                                                        >
                                                                                                                      */,
                                                                                                                      Integer
                                                                                                                    >
                                                                                                                  >
                                                                                                                >shared(
                                                                                                                      (Lazy<State.TStateT<
                                                                                                                        Global.TGlobal,
                                                                                                                        Func.U<
                                                                                                                          RealWorld,
                                                                                                                          ?
                                                                                                                        >,
                                                                                                                        PreludeBase.TTuple2<
                                                                                                                          String/*
                                                                                                                            <
                                                                                                                              Character
                                                                                                                            >
                                                                                                                          */,
                                                                                                                          Integer
                                                                                                                        >
                                                                                                                      >>)(() -> State.<
                                                                                                                            Func.U<
                                                                                                                              RealWorld,
                                                                                                                              ?
                                                                                                                            >,
                                                                                                                            PreludeBase.TTuple2<
                                                                                                                              String/*
                                                                                                                                <
                                                                                                                                  Character
                                                                                                                                >
                                                                                                                              */,
                                                                                                                              Integer
                                                                                                                            >,
                                                                                                                            Global.TGlobal
                                                                                                                          >promote(
                                                                                                                                PreludeMonad.IMonad_ST.<
                                                                                                                                  RealWorld
                                                                                                                                >mk(),
                                                                                                                                Strict.pass
                                                                                                                              ))
                                                                                                                    ),
                                                                                                                Thunk.<
                                                                                                                  String/*
                                                                                                                    <
                                                                                                                      Character
                                                                                                                    >
                                                                                                                  */
                                                                                                                >lazy(
                                                                                                                      "strictness analysis"
                                                                                                                    )
                                                                                                              ),
                                                                                                          PreludeBase.TList.DCons.<
                                                                                                            PreludeBase.TTuple2<
                                                                                                              State.TStateT<
                                                                                                                Global.TGlobal,
                                                                                                                Func.U<
                                                                                                                  RealWorld,
                                                                                                                  ?
                                                                                                                >,
                                                                                                                PreludeBase.TTuple2<
                                                                                                                  String/*
                                                                                                                    <
                                                                                                                      Character
                                                                                                                    >
                                                                                                                  */,
                                                                                                                  Integer
                                                                                                                >
                                                                                                              >,
                                                                                                              String/*
                                                                                                                <
                                                                                                                  Character
                                                                                                                >
                                                                                                              */
                                                                                                            >
                                                                                                          >mk(
                                                                                                                PreludeBase.TTuple2.<
                                                                                                                  State.TStateT<
                                                                                                                    Global.TGlobal,
                                                                                                                    Func.U<
                                                                                                                      RealWorld,
                                                                                                                      ?
                                                                                                                    >,
                                                                                                                    PreludeBase.TTuple2<
                                                                                                                      String/*
                                                                                                                        <
                                                                                                                          Character
                                                                                                                        >
                                                                                                                      */,
                                                                                                                      Integer
                                                                                                                    >
                                                                                                                  >,
                                                                                                                  String/*
                                                                                                                    <
                                                                                                                      Character
                                                                                                                    >
                                                                                                                  */
                                                                                                                >mk(
                                                                                                                      Thunk.<
                                                                                                                        State.TStateT<
                                                                                                                          Global.TGlobal,
                                                                                                                          Func.U<
                                                                                                                            RealWorld,
                                                                                                                            ?
                                                                                                                          >,
                                                                                                                          PreludeBase.TTuple2<
                                                                                                                            String/*
                                                                                                                              <
                                                                                                                                Character
                                                                                                                              >
                                                                                                                            */,
                                                                                                                            Integer
                                                                                                                          >
                                                                                                                        >
                                                                                                                      >shared(
                                                                                                                            (Lazy<State.TStateT<
                                                                                                                              Global.TGlobal,
                                                                                                                              Func.U<
                                                                                                                                RealWorld,
                                                                                                                                ?
                                                                                                                              >,
                                                                                                                              PreludeBase.TTuple2<
                                                                                                                                String/*
                                                                                                                                  <
                                                                                                                                    Character
                                                                                                                                  >
                                                                                                                                */,
                                                                                                                                Integer
                                                                                                                              >
                                                                                                                            >>)(() -> State.<
                                                                                                                                  Func.U<
                                                                                                                                    RealWorld,
                                                                                                                                    ?
                                                                                                                                  >,
                                                                                                                                  PreludeBase.TTuple2<
                                                                                                                                    String/*
                                                                                                                                      <
                                                                                                                                        Character
                                                                                                                                      >
                                                                                                                                    */,
                                                                                                                                    Integer
                                                                                                                                  >,
                                                                                                                                  Global.TGlobal
                                                                                                                                >promote(
                                                                                                                                      PreludeMonad.IMonad_ST.<
                                                                                                                                        RealWorld
                                                                                                                                      >mk(),
                                                                                                                                      Final.cleanSymtab
                                                                                                                                    ))
                                                                                                                          ),
                                                                                                                      Thunk.<
                                                                                                                        String/*
                                                                                                                          <
                                                                                                                            Character
                                                                                                                          >
                                                                                                                        */
                                                                                                                      >lazy(
                                                                                                                            "clean up"
                                                                                                                          )
                                                                                                                    ),
                                                                                                                PreludeBase.TList.DList.<
                                                                                                                  PreludeBase.TTuple2<
                                                                                                                    State.TStateT<
                                                                                                                      Global.TGlobal,
                                                                                                                      Func.U<
                                                                                                                        RealWorld,
                                                                                                                        ?
                                                                                                                      >,
                                                                                                                      PreludeBase.TTuple2<
                                                                                                                        String/*
                                                                                                                          <
                                                                                                                            Character
                                                                                                                          >
                                                                                                                        */,
                                                                                                                        Integer
                                                                                                                      >
                                                                                                                    >,
                                                                                                                    String/*
                                                                                                                      <
                                                                                                                        Character
                                                                                                                      >
                                                                                                                    */
                                                                                                                  >
                                                                                                                >mk()
                                                                                                              )
                                                                                                        )
                                                                                                  )
                                                                                            )
                                                                                      )
                                                                                )
                                                                          )
                                                                    )
                                                              )
                                                        )
                                                  )
                                            )
                                      )
                                )
                          )
                    );
          })
    );
final public static State.TState<Global.TGlobal, PreludeBase.TTuple2<String/*<Character>*/, Integer>> lexPassSourceCode(
  final String/*<Character>*/ arg$1
) {
  final State.TState<Global.TGlobal, PreludeBase.TList<Tokens.TToken>> $19325 = Lexer.passCS(
        (java.lang.CharSequence)(arg$1)
      );
  final Func.U<Global.TGlobal, PreludeBase.TTuple2<PreludeBase.TList<Tokens.TToken>, Global.TGlobal>> v7688$18807 =
  $19325.mem$fun;
  return State.TState.<Global.TGlobal, PreludeBase.TTuple2<String/*<Character>*/, Integer>>mk(
            (Func.U<Global.TGlobal, PreludeBase.TTuple2<PreludeBase.TTuple2<String/*<Character>*/, Integer>, Global.TGlobal>>)((
              final Lazy<Global.TGlobal> arg$19327
            ) -> {
                  final PreludeBase.TTuple2<PreludeBase.TList<Tokens.TToken>, Global.TGlobal> $19328 =
                  v7688$18807.apply(arg$19327).call();
                  final PreludeBase.TTuple2<String/*<Character>*/, Integer> v7686$18836 =
                  PreludeBase.TTuple2.<String/*<Character>*/, Integer>mk(
                        Thunk.<String/*<Character>*/>lazy("tokens"),
                        Thunk.<Integer>shared(
                              (Lazy<Integer>)(() -> PreludeList.IListView_$lbrack$rbrack.<
                                    Tokens.TToken
                                  >length($19328.mem1.call()))
                            )
                      );
                  return PreludeBase.TTuple2.<PreludeBase.TTuple2<String/*<Character>*/, Integer>, Global.TGlobal>mk(
                            v7686$18836, $19328.mem2
                          );
                })
          );
}
final public static PreludeBase.TList<Tokens.TToken> ideClean(PreludeBase.TList<Tokens.TToken> arg$1) {
  tailrecursion: while (true) {
    final PreludeBase.TList<Tokens.TToken> arg$1f = arg$1;
    final PreludeBase.TList.DCons<Tokens.TToken> $19330 = arg$1f.asCons();
    if ($19330 != null) {
      final Tokens.TToken t$17478 = $19330.mem1.call();
      if (TokenID.IEq_TokenID.$eq$eq(Tokens.TToken.tokid(t$17478), TokenID.TTokenID.COMMENT)) {
        if (Tokens.TToken.value(t$17478).equals("}")) {
          arg$1 = $19330.mem2.call();
          continue tailrecursion;
        }
      }
      if (Tokens.TToken.col(t$17478) == 0) {
        arg$1 = $19330.mem2.call();
        continue tailrecursion;
      }
      return PreludeBase.TList.DCons.<Tokens.TToken>mk(
                t$17478,
                Thunk.<PreludeBase.TList<Tokens.TToken>>shared(
                      (Lazy<PreludeBase.TList<Tokens.TToken>>)(() -> CompileExecutor.ideClean(
                                $19330.mem2.call()
                              ))
                    )
              );
    }
    final PreludeBase.TList.DList<Tokens.TToken> $19332 = arg$1f.asList();
    assert $19332 != null;
    return PreludeBase.TList.DList.<Tokens.TToken>mk();
  }
}
final public static State.TState<Global.TGlobal, PreludeBase.TTuple2<String/*<Character>*/, Integer>> parsePass =
State.TState.<Global.TGlobal, PreludeBase.TTuple2<String/*<Character>*/, Integer>>mk(
      (Func.U<Global.TGlobal, PreludeBase.TTuple2<PreludeBase.TTuple2<String/*<Character>*/, Integer>, Global.TGlobal>>)((
        final Lazy<Global.TGlobal> arg$19333
      ) -> {
            final State.TState<Global.TGlobal, PreludeBase.TMaybe<Desugar.TProgram>> $19335 =
            Frege.pass(
                  Thunk.<PreludeBase.TList<Tokens.TToken>>shared(
                        (Lazy<PreludeBase.TList<Tokens.TToken>>)(() -> PreludeList.<Tokens.TToken>filter(
                                  (Func.U<Tokens.TToken, Boolean>)((final Lazy<Tokens.TToken> η$19334) -> Thunk.<
                                        Boolean
                                      >shared((Lazy<Boolean>)(() -> Tokens.TToken.noComment(η$19334.call())))),
                                  PreludeArrays.IListSource_JArray.<Tokens.TToken>toList(
                                        Global.TSubSt.toks(Global.TGlobal.sub(arg$19333.call()))
                                      )
                                ))
                      )
                );
            final Func.U<
              Global.TGlobal, PreludeBase.TTuple2<PreludeBase.TMaybe<Desugar.TProgram>, Global.TGlobal>
            > v7688$18614 = $19335.mem$fun;
            final PreludeBase.TTuple2<PreludeBase.TMaybe<Desugar.TProgram>, Global.TGlobal> $19337 =
            v7688$18614.apply(arg$19333).call();
            final PreludeBase.TMaybe<Desugar.TProgram> v7691$18617 = $19337.mem1.call();
            final PreludeBase.TMaybe.DJust<Desugar.TProgram> $19339 = v7691$18617.asJust();
            if ($19339 != null) {
              final Desugar.TProgram $19340 = $19339.mem1.call();
              final Desugar.TProgram.DModule $19341 = $19340.asModule();
              if ($19341 != null) {
                final PreludeBase.TTuple3<
                  String/*<Character>*/, PreludeBase.TList<SourceDefinitions.TDefinitionS>,
                  PreludeBase.TMaybe<String/*<Character>*/>
                > $19342 = $19341.mem1.call();
                final PreludeBase.TTuple2<String/*<Character>*/, Integer> v16081$18771 =
                PreludeBase.TTuple2.<String/*<Character>*/, Integer>mk(
                      Thunk.<String/*<Character>*/>lazy("tokens"),
                      Thunk.<Integer>shared(
                            (Lazy<Integer>)(() -> java.lang.reflect.Array.getLength(
                                      Global.TSubSt.toks(Global.TGlobal.sub(arg$19333.call()))
                                    ))
                          )
                    );
                final Lazy<State.TState<Global.TGlobal, Short>> tmp$18796 = Thunk.<State.TState<Global.TGlobal, Short>>shared(
                      (Lazy<State.TState<Global.TGlobal, Short>>)(() -> {
                            if (
                              Flags.isOn(
                                    (long)Global.TOptions.flags(Global.TGlobal.options(arg$19333.call())), Flags.TFlag.IDETOKENS
                                  )
                            ) {
                              return State.TState.<Global.TGlobal>modify(
                                        (Func.U<Global.TGlobal, Global.TGlobal>)((final Lazy<Global.TGlobal> η$19344) -> Thunk.<
                                              Global.TGlobal
                                            >nested(
                                                  (Lazy<Lazy<Global.TGlobal>>)(() -> PreludeBase.<
                                                        Global.TGlobal, Global.TGlobal, Func.U<Global.TSubSt, Global.TSubSt>
                                                      >flip(
                                                            (Func.U<
                                                              Global.TGlobal,
                                                              Func.U<Func.U<Global.TSubSt, Global.TSubSt>, Global.TGlobal>
                                                            >)((final Lazy<Global.TGlobal> η$19345) -> (Func.U<
                                                                  Func.U<Global.TSubSt, Global.TSubSt>, Global.TGlobal
                                                                >)((
                                                                  final Lazy<Func.U<Global.TSubSt, Global.TSubSt>> η$19346
                                                                ) -> Thunk.<Global.TGlobal>shared(
                                                                          (Lazy<Global.TGlobal>)(() -> Global.TGlobal.chg$sub(
                                                                                    η$19345.call(), η$19346.call()
                                                                                  ))
                                                                        ))),
                                                            (Func.U<Global.TSubSt, Global.TSubSt>)((
                                                              final Lazy<Global.TSubSt> η$19347
                                                            ) -> Thunk.<Global.TSubSt>nested(
                                                                      (Lazy<Lazy<Global.TSubSt>>)(() -> PreludeBase.<
                                                                            Global.TSubSt, Global.TSubSt,
                                                                            Func.U<Tokens.TToken[], Tokens.TToken[]>
                                                                          >flip(
                                                                                (Func.U<
                                                                                  Global.TSubSt,
                                                                                  Func.U<
                                                                                    Func.U<
                                                                                      Tokens.TToken[],
                                                                                      Tokens.TToken[]
                                                                                    >,
                                                                                    Global.TSubSt
                                                                                  >
                                                                                >)((
                                                                                  final Lazy<Global.TSubSt> η$19348
                                                                                ) -> (Func.U<
                                                                                      Func.U<
                                                                                        Tokens.TToken[],
                                                                                        Tokens.TToken[]
                                                                                      >,
                                                                                      Global.TSubSt
                                                                                    >)((
                                                                                      final Lazy<Func.U<
                                                                                        Tokens.TToken[],
                                                                                        Tokens.TToken[]
                                                                                      >> η$19349
                                                                                    ) -> Thunk.<
                                                                                          Global.TSubSt
                                                                                        >shared(
                                                                                              (Lazy<Global.TSubSt>)(() -> Global.TSubSt.chg$toks(
                                                                                                        η$19348
                                                                                                        .call(),
                                                                                                        η$19349
                                                                                                        .call()
                                                                                                      ))
                                                                                            ))),
                                                                                (Func.U<
                                                                                  Tokens.TToken[], Tokens.TToken[]
                                                                                >)((final Lazy<Tokens.TToken[]> arg$19350) -> {
                                                                                      final Tokens.TToken[] v2338$18749 =
                                                                                      arg$19350
                                                                                      .call();
                                                                                      return Tokens.IArrayElement_Token.arrayFromList(
                                                                                                CompileExecutor.ideClean(
                                                                                                      PreludeArrays.IListSource_JArray.<
                                                                                                        Tokens.TToken
                                                                                                      >toList(
                                                                                                            v2338$18749
                                                                                                          )
                                                                                                    )
                                                                                              );
                                                                                    }),
                                                                                η$19347
                                                                              ))
                                                                    )),
                                                            η$19344
                                                          ))
                                                ))
                                      );
                            }
                            else {
                              return State.TState.<Global.TGlobal, Short>mk(
                                        (Func.U<Global.TGlobal, PreludeBase.TTuple2<Short, Global.TGlobal>>)((
                                          final Lazy<Global.TGlobal> arg$19352
                                        ) -> {
                                              return PreludeBase.TTuple2.<Short, Global.TGlobal>mk(
                                                        Thunk.<Short>lazy(PreludeBase.TUnit.Unit), arg$19352
                                                      );
                                            })
                                      );
                            }
                          })
                    );
                final State.TState<Global.TGlobal, Short> $19353 = tmp$18796.call();
                final Func.U<Global.TGlobal, PreludeBase.TTuple2<Short, Global.TGlobal>> v8822$18701 =
                $19353.mem$fun;
                final State.TState<Global.TGlobal, Short> $19365 = State.TState.<Global.TGlobal>modify(
                      (Func.U<Global.TGlobal, Global.TGlobal>)((final Lazy<Global.TGlobal> η$19355) -> Thunk.<
                            Global.TGlobal
                          >nested(
                                (Lazy<Lazy<Global.TGlobal>>)(() -> PreludeBase.<
                                      Global.TGlobal, Global.TGlobal, Func.U<Global.TSubSt, Global.TSubSt>
                                    >flip(
                                          (Func.U<
                                            Global.TGlobal, Func.U<Func.U<Global.TSubSt, Global.TSubSt>, Global.TGlobal>
                                          >)((final Lazy<Global.TGlobal> η$19356) -> (Func.U<
                                                Func.U<Global.TSubSt, Global.TSubSt>, Global.TGlobal
                                              >)((final Lazy<Func.U<Global.TSubSt, Global.TSubSt>> η$19357) -> Thunk.<
                                                    Global.TGlobal
                                                  >shared(
                                                        (Lazy<Global.TGlobal>)(() -> Global.TGlobal.chg$sub(
                                                                  η$19356.call(), η$19357.call()
                                                                ))
                                                      ))),
                                          (Func.U<Global.TSubSt, Global.TSubSt>)((final Lazy<Global.TSubSt> arg$19358) -> {
                                                return PreludeBase.<Global.TSubSt, Global.TSubSt, String/*<Character>*/>flip(
                                                          (Func.U<
                                                            Global.TSubSt, Func.U<String/*<Character>*/, Global.TSubSt>
                                                          >)((final Lazy<Global.TSubSt> η$19359) -> (Func.U<
                                                                String/*<Character>*/, Global.TSubSt
                                                              >)((final Lazy<String/*<Character>*/> η$19360) -> Thunk.<
                                                                    Global.TSubSt
                                                                  >shared(
                                                                        (Lazy<Global.TSubSt>)(() -> Global.TSubSt.upd$thisPack(
                                                                                  η$19359.call(), η$19360.call()
                                                                                ))
                                                                      ))),
                                                          Thunk.<String/*<Character>*/>shared(
                                                                (Lazy<String/*<Character>*/>)(() -> Packs.TPack.$new(
                                                                          $19342.mem1
                                                                        ))
                                                              ),
                                                          Thunk.<Global.TSubSt>nested(
                                                                (Lazy<Lazy<Global.TSubSt>>)(() -> PreludeBase.<
                                                                      Global.TSubSt, Global.TSubSt,
                                                                      PreludeBase.TList<
                                                                        SourceDefinitions.TDefinitionS
                                                                      >
                                                                    >flip(
                                                                          (Func.U<
                                                                            Global.TSubSt,
                                                                            Func.U<
                                                                              PreludeBase.TList<
                                                                                SourceDefinitions.TDefinitionS
                                                                              >,
                                                                              Global.TSubSt
                                                                            >
                                                                          >)((final Lazy<Global.TSubSt> η$19361) -> (Func.U<
                                                                                PreludeBase.TList<
                                                                                  SourceDefinitions.TDefinitionS
                                                                                >,
                                                                                Global.TSubSt
                                                                              >)((
                                                                                final Lazy<PreludeBase.TList<
                                                                                  SourceDefinitions.TDefinitionS
                                                                                >> η$19362
                                                                              ) -> Thunk.<
                                                                                    Global.TSubSt
                                                                                  >shared(
                                                                                        (Lazy<Global.TSubSt>)(() -> Global.TSubSt.upd$sourcedefs(
                                                                                                  η$19361
                                                                                                  .call(),
                                                                                                  η$19362
                                                                                                  .call()
                                                                                                ))
                                                                                      ))),
                                                                          $19342.mem2,
                                                                          Thunk.<Global.TSubSt>nested(
                                                                                (Lazy<Lazy<Global.TSubSt>>)(() -> PreludeBase.<
                                                                                      Global.TSubSt,
                                                                                      Global.TSubSt,
                                                                                      PreludeBase.TMaybe<
                                                                                        String/*
                                                                                          <
                                                                                            Character
                                                                                          >
                                                                                        */
                                                                                      >
                                                                                    >flip(
                                                                                          (Func.U<
                                                                                            Global.TSubSt,
                                                                                            Func.U<
                                                                                              PreludeBase.TMaybe<
                                                                                                String/*
                                                                                                  <
                                                                                                    Character
                                                                                                  >
                                                                                                */
                                                                                              >,
                                                                                              Global.TSubSt
                                                                                            >
                                                                                          >)((
                                                                                            final Lazy<Global.TSubSt> η$19363
                                                                                          ) -> (Func.U<
                                                                                                PreludeBase.TMaybe<
                                                                                                  String/*
                                                                                                    <
                                                                                                      Character
                                                                                                    >
                                                                                                  */
                                                                                                >,
                                                                                                Global.TSubSt
                                                                                              >)((
                                                                                                final Lazy<PreludeBase.TMaybe<
                                                                                                  String/*
                                                                                                    <
                                                                                                      Character
                                                                                                    >
                                                                                                  */
                                                                                                >> η$19364
                                                                                              ) -> Thunk.<
                                                                                                    Global.TSubSt
                                                                                                  >shared(
                                                                                                        (Lazy<Global.TSubSt>)(() -> Global.TSubSt.upd$packageDoc(
                                                                                                                  η$19363
                                                                                                                  .call(),
                                                                                                                  η$19364
                                                                                                                  .call()
                                                                                                                ))
                                                                                                      ))),
                                                                                          $19342.mem3,
                                                                                          arg$19358
                                                                                        ))
                                                                              )
                                                                        ))
                                                              )
                                                        );
                                              }),
                                          η$19355
                                        ))
                              ))
                    );
                final Func.U<Global.TGlobal, PreludeBase.TTuple2<Short, Global.TGlobal>> v8822$18643 =
                $19365.mem$fun;
                final PreludeBase.TTuple2<Short, Global.TGlobal> $19367 = v8822$18643
                .apply($19337.mem2).call();
                final PreludeBase.TTuple2<Short, Global.TGlobal> $19368 = v8822$18701
                .apply($19367.mem2).call();
                return PreludeBase.TTuple2.<PreludeBase.TTuple2<String/*<Character>*/, Integer>, Global.TGlobal>mk(
                          v16081$18771, $19368.mem2
                        );
              }
            }
            final PreludeBase.TTuple2<String/*<Character>*/, Integer> v16081$18797 = PreludeBase.TTuple2.<
              String/*<Character>*/, Integer
            >mk(
                  Thunk.<String/*<Character>*/>lazy("tokens"),
                  Thunk.<Integer>shared(
                        (Lazy<Integer>)(() -> java.lang.reflect.Array.getLength(
                                  Global.TSubSt.toks(Global.TGlobal.sub(arg$19333.call()))
                                ))
                      )
                );
            return PreludeBase.TTuple2.<PreludeBase.TTuple2<String/*<Character>*/, Integer>, Global.TGlobal>mk(
                      v16081$18797, $19337.mem2
                    );
          })
    );
final public static State.TState<Global.TGlobal, Global.TGlobal> lexParseSourceCode(final String/*<Character>*/ arg$1) {
  return State.TState.<Global.TGlobal, Global.TGlobal>mk(
            (Func.U<Global.TGlobal, PreludeBase.TTuple2<Global.TGlobal, Global.TGlobal>>)((
              final Lazy<Global.TGlobal> arg$19370
            ) -> {
                  final State.TState<Global.TGlobal, Global.TGlobal> $19371 = CompileExecutor.switchState(
                        arg$19370
                      );
                  final Func.U<Global.TGlobal, PreludeBase.TTuple2<Global.TGlobal, Global.TGlobal>> v7688$18942 =
                  $19371.mem$fun;
                  final Func.U<
                    Global.TGlobal, PreludeBase.TTuple2<PreludeBase.TTuple2<String/*<Character>*/, Integer>, Global.TGlobal>
                  > v8822$18917 = CompileExecutor.parsePass.mem$fun;
                  final State.TState<Global.TGlobal, PreludeBase.TTuple2<String/*<Character>*/, Integer>> $19374 =
                  CompileExecutor.lexPassSourceCode(arg$1);
                  final Func.U<
                    Global.TGlobal, PreludeBase.TTuple2<PreludeBase.TTuple2<String/*<Character>*/, Integer>, Global.TGlobal>
                  > v8822$18889 = $19374.mem$fun;
                  final PreludeBase.TTuple2<PreludeBase.TTuple2<String/*<Character>*/, Integer>, Global.TGlobal> $19376 =
                  v8822$18889.apply(arg$19370).call();
                  final PreludeBase.TTuple2<PreludeBase.TTuple2<String/*<Character>*/, Integer>, Global.TGlobal> $19377 =
                  v8822$18917.apply($19376.mem2).call();
                  final PreludeBase.TTuple2<Global.TGlobal, Global.TGlobal> $19378 = v7688$18942
                  .apply($19377.mem2).call();
                  final Global.TGlobal v7691$18945 = $19378.mem1.call();
                  final State.TState<Global.TGlobal, Short> $19385 = State.TState.<Global.TGlobal>modify(
                        (Func.U<Global.TGlobal, Global.TGlobal>)((final Lazy<Global.TGlobal> arg$19380) -> {
                              final Global.TGlobal in$17472 = arg$19380.call();
                              return Thunk.<Global.TGlobal>shared(
                                        (Lazy<Global.TGlobal>)(() -> Global.TGlobal.chg$sub(
                                                  in$17472,
                                                  (Func.U<Global.TSubSt, Global.TSubSt>)((
                                                    final Lazy<Global.TSubSt> arg$19382
                                                  ) -> {
                                                        final Global.TSubSt in$17473 =
                                                        arg$19382.call();
                                                        return Thunk.<Global.TSubSt>shared(
                                                                  (Lazy<Global.TSubSt>)(() -> Global.TSubSt.chg$numErrors(
                                                                            in$17473,
                                                                            (Func.U<Integer, Integer>)((
                                                                              final Lazy<Integer> η$19384
                                                                            ) -> Thunk.<
                                                                                  Integer
                                                                                >shared(
                                                                                      (Lazy<Integer>)(() -> Global.TGlobal.errors(
                                                                                                v7691$18945
                                                                                              ) + (int)η$19384
                                                                                          .call())
                                                                                    ))
                                                                          ))
                                                                );
                                                      })
                                                ))
                                      );
                            })
                      );
                  final Func.U<Global.TGlobal, PreludeBase.TTuple2<Short, Global.TGlobal>> v8822$18971 =
                  $19385.mem$fun;
                  final PreludeBase.TTuple2<Short, Global.TGlobal> $19387 = v8822$18971
                  .apply($19378.mem2).call();
                  return PreludeBase.TTuple2.<Global.TGlobal, Global.TGlobal>mk(v7691$18945, $19387.mem2);
                })
          );
}
final public static State.TStateT<Global.TGlobal, Func.U<RealWorld, ?>, Global.TGlobal> compileSourceCode(
  final Lazy<String/*<Character>*/> arg$1
) {
  final State.TStateT<Global.TGlobal, Func.U<RealWorld, ?>, Global.TGlobal> $19388 = Global.<
    Global.TGlobal
  >liftStG(
        Thunk.<State.TState<Global.TGlobal, Global.TGlobal>>shared(
              (Lazy<State.TState<Global.TGlobal, Global.TGlobal>>)(() -> CompileExecutor.lexParseSourceCode(
                        arg$1.call()
                      ))
            )
      );
  final Func.U<Global.TGlobal, Kind.U<Func.U<RealWorld, ?>, PreludeBase.TTuple2<Global.TGlobal, Global.TGlobal>>> v7734$19035 =
  $19388.mem$run;
  return State.TStateT.<Global.TGlobal, Func.U<RealWorld, ?>, Global.TGlobal>mk(
            (Func.U<Global.TGlobal, Kind.U<Func.U<RealWorld, ?>, PreludeBase.TTuple2<Global.TGlobal, Global.TGlobal>>>)((
              final Lazy<Global.TGlobal> arg$19390
            ) -> {
                  return Thunk.<Kind.U<Func.U<RealWorld, ?>, PreludeBase.TTuple2<Global.TGlobal, Global.TGlobal>>>lazy(
                            (Kind.U<Func.U<RealWorld, ?>, PreludeBase.TTuple2<Global.TGlobal, Global.TGlobal>>)(Func.U<
                              RealWorld, PreludeBase.TTuple2<Global.TGlobal, Global.TGlobal>
                            >)((final Lazy<RealWorld> arg$19391) -> {
                                  final PreludeBase.TTuple2<Global.TGlobal, Global.TGlobal> v2056$19070 =
                                  RunTM.<
                                    Func.U<
                                      Global.TGlobal, Func.U<RealWorld, PreludeBase.TTuple2<Global.TGlobal, Global.TGlobal>>
                                    >
                                  >cast(v7734$19035).apply(arg$19390).call().apply(arg$19391)
                                  .call();
                                  final State.TStateT<Global.TGlobal, Func.U<RealWorld, ?>, Short> $19394 =
                                  Global.<
                                    PreludeBase.TTuple2<
                                      State.TStateT<
                                        Global.TGlobal, Func.U<RealWorld, ?>,
                                        PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                      >,
                                      String/*<Character>*/
                                    >,
                                    Short
                                  >forsome(
                                        CompileExecutor.passes.call(),
                                        (Func.U<
                                          PreludeBase.TTuple2<
                                            State.TStateT<
                                              Global.TGlobal, Func.U<RealWorld, ?>,
                                              PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                            >,
                                            String/*<Character>*/
                                          >,
                                          State.TStateT<Global.TGlobal, Func.U<RealWorld, ?>, Short>
                                        >)((
                                          final Lazy<PreludeBase.TTuple2<
                                            State.TStateT<
                                              Global.TGlobal, Func.U<RealWorld, ?>,
                                              PreludeBase.TTuple2<String/*<Character>*/, Integer>
                                            >,
                                            String/*<Character>*/
                                          >> η$19393
                                        ) -> Thunk.<State.TStateT<Global.TGlobal, Func.U<RealWorld, ?>, Short>>shared(
                                                  (Lazy<State.TStateT<
                                                    Global.TGlobal, Func.U<RealWorld, ?>, Short
                                                  >>)(() -> CompileExecutor.runpass(η$19393.call()))
                                                ))
                                      );
                                  final Func.U<
                                    Global.TGlobal, Kind.U<Func.U<RealWorld, ?>, PreludeBase.TTuple2<Short, Global.TGlobal>>
                                  > v8728$19157 = $19394.mem$run;
                                  final State.TStateT<Global.TGlobal, Func.U<RealWorld, ?>, Short> $19396 =
                                  State.TStateT.<Global.TGlobal, Func.U<RealWorld, ?>>put(
                                        PreludeMonad.IMonad_ST.<RealWorld>mk(), v2056$19070.mem1
                                      );
                                  final Func.U<
                                    Global.TGlobal, Kind.U<Func.U<RealWorld, ?>, PreludeBase.TTuple2<Short, Global.TGlobal>>
                                  > v8728$19100 = $19396.mem$run;
                                  final Func.U<RealWorld, PreludeBase.TTuple2<Short, Global.TGlobal>> v2053$19131 =
                                  RunTM.<
                                    Func.U<Global.TGlobal, Func.U<RealWorld, PreludeBase.TTuple2<Short, Global.TGlobal>>>
                                  >cast(v8728$19100).apply(v2056$19070.mem2).call();
                                  final PreludeBase.TTuple2<Short, Global.TGlobal> v2056$19134 =
                                  v2053$19131.apply(arg$19391).call();
                                  final Func.U<RealWorld, PreludeBase.TTuple2<Short, Global.TGlobal>> v2053$19188 =
                                  RunTM.<
                                    Func.U<Global.TGlobal, Func.U<RealWorld, PreludeBase.TTuple2<Short, Global.TGlobal>>>
                                  >cast(v8728$19157).apply(v2056$19134.mem2).call();
                                  final PreludeBase.TTuple2<Short, Global.TGlobal> v2056$19191 =
                                  v2053$19188.apply(arg$19391).call();
                                  final Func.U<RealWorld, PreludeBase.TTuple2<Global.TGlobal, Global.TGlobal>> v2053$19243 =
                                  PreludeMonad.IMonad_ST.<RealWorld, PreludeBase.TTuple2<Global.TGlobal, Global.TGlobal>>pure(
                                        PreludeBase.TTuple2.<Global.TGlobal, Global.TGlobal>mk(
                                              v2056$19191.mem2, v2056$19191.mem2
                                            )
                                      );
                                  final PreludeBase.TTuple2<Global.TGlobal, Global.TGlobal> v2056$19246 =
                                  v2053$19243.apply(arg$19391).call();
                                  final Global.TGlobal v7737$19214 = v2056$19246.mem1
                                  .call();
                                  final Func.U<RealWorld, PreludeBase.TTuple2<Global.TGlobal, Global.TGlobal>> v2057$19247 =
                                  PreludeMonad.IMonad_ST.<RealWorld, PreludeBase.TTuple2<Global.TGlobal, Global.TGlobal>>pure(
                                        PreludeBase.TTuple2.<Global.TGlobal, Global.TGlobal>mk(
                                              v7737$19214, v2056$19246.mem2
                                            )
                                      );
                                  return Thunk.<PreludeBase.TTuple2<Global.TGlobal, Global.TGlobal>>nested(
                                            (Lazy<Lazy<PreludeBase.TTuple2<Global.TGlobal, Global.TGlobal>>>)(() -> v2057$19247
                                                .apply(arg$19391))
                                          );
                                })
                          );
                })
          );
}
final public static Func.U<RealWorld, Global.TGlobal> compile(
  final Lazy<String/*<Character>*/> arg$1, final Func.U<RealWorld, Global.TGlobal> arg$2
) {
  return (Func.U<RealWorld, Global.TGlobal>)((final Lazy<RealWorld> arg$19406) -> {
            final Global.TGlobal v2056$19015 = arg$2.apply(arg$19406).call();
            final Func.U<RealWorld, Global.TGlobal> v2057$19016 = Func.<RealWorld, Global.TGlobal>coerceU(
                  State.<Global.TGlobal, Func.U<RealWorld, ?>, Global.TGlobal>execStateT(
                        PreludeMonad.IMonad_ST.<RealWorld>mk(),
                        Thunk.<State.TStateT<Global.TGlobal, Func.U<RealWorld, ?>, Global.TGlobal>>shared(
                              (Lazy<State.TStateT<
                                Global.TGlobal, Func.U<RealWorld, ?>, Global.TGlobal
                              >>)(() -> CompileExecutor.compileSourceCode(arg$1))
                            ),
                        v2056$19015
                      )
                );
            return Thunk.<Global.TGlobal>nested((Lazy<Lazy<Global.TGlobal>>)(() -> v2057$19016.apply(arg$19406)));
          });
}
final public static Lazy<QuickCheckGen.TGen<
  QuickCheckProperty.TRose<QuickCheckProperty.TResult>
>> shouldCorrectlyConfigureExtraClasspath = Thunk.<
  QuickCheckGen.TGen<QuickCheckProperty.TRose<QuickCheckProperty.TResult>>
>shared(
      (Lazy<QuickCheckGen.TGen<QuickCheckProperty.TRose<QuickCheckProperty.TResult>>>)(() -> {
            return QuickCheckProperty.<QuickCheckGen.TGen<QuickCheckProperty.TRose<QuickCheckProperty.TResult>>>once(
                      new QuickCheckProperty.ITestable_Gen<QuickCheckProperty.TRose<QuickCheckProperty.TResult>>(
                        QuickCheckProperty.ITestable_Prop.it
                      ),
                      Thunk.<QuickCheckGen.TGen<QuickCheckProperty.TRose<QuickCheckProperty.TResult>>>shared(
                            (Lazy<QuickCheckGen.TGen<
                              QuickCheckProperty.TRose<QuickCheckProperty.TResult>
                            >>)(() -> QuickCheckProperty.<Boolean>morallyDubiousIOProperty(
                                      QuickCheckProperty.ITestable_Bool.it,
                                      (Func.U<RealWorld, Boolean>)((final Lazy<RealWorld> arg$19409) -> {
                                            final Global.TGlobal v2056$18297 = CompileExecutor.compile(
                                                  Thunk.<String/*<Character>*/>shared(
                                                        (Lazy<String/*
                                                          <Character>
                                                        */>)(() -> "module FregeFxDep where\n\n" + ("import fregefx.JavaFxType\n\n" + "main = println \"Hello FregeFX\""))
                                                      ),
                                                  CompileGlobal.fromOptions(
                                                        Global.TOptions.upd$path(
                                                              CompileOptions.standardCompileOptions
                                                              .call(),
                                                              PreludeBase.TList.DCons.<
                                                                String/*<Character>*/
                                                              >mk(
                                                                    Thunk.<String/*<Character>*/>lazy(
                                                                          "./src/main/resources/fregefx-0.8.2-SNAPSHOT.jar"
                                                                        ),
                                                                    PreludeBase.TList.DList.<
                                                                      String/*<Character>*/
                                                                    >mk()
                                                                  )
                                                            )
                                                      )
                                                ).apply(arg$19409).call();
                                            final Func.U<RealWorld, Boolean> v2057$18298 =
                                            PreludeMonad.IMonad_ST.<RealWorld, Boolean>pure(
                                                  Thunk.<Boolean>shared(
                                                        (Lazy<Boolean>)(() -> Global.TGlobal.errors(
                                                                  v2056$18297
                                                                ) == 0)
                                                      )
                                                );
                                            return Thunk.<Boolean>nested(
                                                      (Lazy<Lazy<Boolean>>)(() -> v2057$18298
                                                          .apply(arg$19409))
                                                    );
                                          })
                                    ))
                          )
                    );
          })
    );

}
