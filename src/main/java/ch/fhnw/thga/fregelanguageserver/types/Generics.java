/*
  Source code is in UTF-8 encoding. The following symbols may appear, among others:
  Œ± Œ≤ Œ≥ Œ¥ Œµ Œ∂ Œ∑ Œ∏ Œπ Œ∫ Œª Œº ŒΩ Œæ Œø œÄ œÅ œÇ œÉ œÑ œÖ œÜ œá œà œâ ¬´ ‚Ä¢ ¬¶ ¬ª ‚àÄ ‚àÉ ‚à∑ ‚Ä¶ ‚Üí ‚Üê Ô¨Å Ô¨Ç ∆í
  If you can't read this, you're out of luck. This code was generated with the frege compiler version 3.25.84
  from /Users/tricktron/github/master/frege-lsp-server/src/main/frege/ch/fhnw/thga/fregelanguageserver/types/Generics.fr
  Do not edit this file! Instead, edit the source file and recompile.
*/

package ch.fhnw.thga.fregelanguageserver.types;

import frege.run8.Func;
import frege.run8.Lazy;
import frege.run8.Thunk;
import frege.run.Kind;
import frege.run.RunTM;
import frege.runtime.Meta;
import frege.runtime.Phantom.RealWorld;
import frege.Prelude;
import frege.control.Category;
import frege.control.Semigroupoid;
import frege.java.IO;
import frege.java.Lang;
import frege.java.Util;
import frege.java.util.Regex;
import frege.prelude.Maybe;
import frege.prelude.PreludeArrays;
import frege.prelude.PreludeBase;
import frege.prelude.PreludeDecimal;
import frege.prelude.PreludeIO;
import frege.prelude.PreludeList;
import frege.prelude.PreludeMonad;
import frege.prelude.PreludeText;

@SuppressWarnings("unused")
@Meta.FregePackage(
  source="/Users/tricktron/github/master/frege-lsp-server/src/main/frege/ch/fhnw/thga/fregelanguageserver/types/Generics.fr",
  time=1659795935765L, jmajor=11, jminor=-1,
  imps={
    "frege.Prelude", "frege.prelude.PreludeArrays", "frege.prelude.PreludeBase", "frege.prelude.PreludeDecimal",
    "frege.prelude.PreludeIO", "frege.prelude.PreludeList", "frege.prelude.PreludeMonad", "frege.prelude.PreludeText",
    "frege.java.util.Regex"
  },
  nmss={
    "Prelude", "PreludeArrays", "PreludeBase", "PreludeDecimal", "PreludeIO", "PreludeList", "PreludeMonad",
    "PreludeText", "Regexp"
  },
  symas={}, symcs={}, symis={},
  symts={
    @Meta.SymT(
      offset=67, name=@Meta.QName(kind=0, pack="ch.fhnw.thga.fregelanguageserver.types.Generics", base="ArrayList"),
      typ=0, kind=16, cons={}, lnks={},
      funs={
        @Meta.SymV(
          offset=181,
          name=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.types.Generics", base="ArrayList", member="new"
          ),
          stri="s(s)", sig=2, nativ="new", depth=1, rkind=9
        ),
        @Meta.SymV(
          offset=123,
          name=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.types.Generics", base="ArrayList", member="add"
          ),
          stri="s(ss)", sig=5, nativ="add", depth=2, rkind=9
        ),
        @Meta.SymV(
          offset=223,
          name=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.types.Generics", base="ArrayList", member="fromFregeList"
          ),
          stri="s(u)", sig=7, depth=1, rkind=13
        )
      },
      nativ="java.util.ArrayList", gargs={2}
    )
  },
  symvs={}, symls={},
  taus={
    @Meta.Tau(
      kind=2, suba=0,
      tcon={@Meta.QName(kind=0, pack="ch.fhnw.thga.fregelanguageserver.types.Generics", base="ArrayList")}
    ),
    @Meta.Tau(kind=9), @Meta.Tau(suba=1, tvar="a"), @Meta.Tau(kind=0, suba=0, subb=2),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="()")}),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="ST")}),
    @Meta.Tau(suba=1, tvar="s"), @Meta.Tau(kind=0, suba=5, subb=6),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeIO", base="Mutable")}),
    @Meta.Tau(kind=0, suba=8, subb=6), @Meta.Tau(kind=0, suba=9, subb=3), @Meta.Tau(kind=0, suba=7, subb=10),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="Bool")}),
    @Meta.Tau(kind=0, suba=7, subb=12),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="[]")}),
    @Meta.Tau(kind=0, suba=14, subb=2), @Meta.Tau(kind=8, suba=1, subb=1)
  },
  rhos={
    @Meta.Rho(rhofun=false, rhotau=3), @Meta.Rho(rhofun=false, rhotau=4), @Meta.Rho(rhofun=false, rhotau=11),
    @Meta.Rho(sigma=1, rhotau=2), @Meta.Rho(rhofun=false, rhotau=10), @Meta.Rho(rhofun=false, rhotau=2),
    @Meta.Rho(rhofun=false, rhotau=13), @Meta.Rho(sigma=4, rhotau=6), @Meta.Rho(sigma=3, rhotau=7),
    @Meta.Rho(rhofun=false, rhotau=15), @Meta.Rho(sigma=6, rhotau=2)
  },
  sigmas={
    @Meta.Sigma(bound={"a"}, kinds={1}, rho=0), @Meta.Sigma(rho=1), @Meta.Sigma(bound={"a", "s"}, kinds={1, 1}, rho=3),
    @Meta.Sigma(rho=4), @Meta.Sigma(rho=5), @Meta.Sigma(bound={"a", "s"}, kinds={1, 1}, rho=8), @Meta.Sigma(rho=9),
    @Meta.Sigma(bound={"a", "s"}, kinds={1, 1}, rho=10)
  },
  exprs={@Meta.Expr()}
)
final public class Generics  {
  



final public static class TArrayList  {
  @SuppressWarnings("unchecked") final public static <ùìê, ùì¢> Func.U<ùì¢, java.util.ArrayList<ùìê>> $new(
    final short arg$1
  ) {
    return (Func.U<ùì¢, java.util.ArrayList<ùìê>>)((final Lazy<ùì¢> _state) -> {
              return Thunk.<java.util.ArrayList<ùìê>>lazy((java.util.ArrayList<ùìê>)new java.util.ArrayList<ùìê>());
            });
  }
  final public static <ùìê, ùì¢> Func.U<ùì¢, Boolean> add(final java.util.ArrayList<ùìê> arg$1, final ùìê arg$2) {
    return (Func.U<ùì¢, Boolean>)((final Lazy<ùì¢> _state) -> {
              return Thunk.<Boolean>lazy(arg$1.add(arg$2));
            });
  }
  final public static <ùìê, ùì¢> Func.U<ùì¢, java.util.ArrayList<ùìê>> fromFregeList(final Lazy<PreludeBase.TList<ùìê>> arg$1) {
    return (Func.U<ùì¢, java.util.ArrayList<ùìê>>)((final Lazy<ùì¢> arg$7711) -> {
              final java.util.ArrayList<ùìê> v2056$7695 = TArrayList.<ùìê, ùì¢>$new(PreludeBase.TUnit.Unit)
              .apply(arg$7711).call();
              final Func.U<ùì¢, java.util.ArrayList<ùìê>> v2057$7696 = Generics.<ùìê, ùì¢>go(
                    arg$1.call(), Thunk.<java.util.ArrayList<ùìê>>lazy(v2056$7695)
                  );
              return Thunk.<java.util.ArrayList<ùìê>>nested(
                        (Lazy<Lazy<java.util.ArrayList<ùìê>>>)(() -> v2057$7696.apply(arg$7711))
                      );
            });
  }
}
final public static <ùìê, ùì¢> Func.U<ùì¢, java.util.ArrayList<ùìê>> go(
  final PreludeBase.TList<ùìê> arg$1, final Lazy<java.util.ArrayList<ùìê>> arg$2
) {
  final PreludeBase.TList.DCons<ùìê> $7714 = arg$1.asCons();
  if ($7714 != null) {
    final ùìê ¬µ$$7621 = $7714.mem1.call();
    return (Func.U<ùì¢, java.util.ArrayList<ùìê>>)((final Lazy<ùì¢> arg$7716) -> {
              final boolean v4796$7671 = (boolean)TArrayList.<ùìê, ùì¢>add(arg$2.call(), ¬µ$$7621)
              .apply(arg$7716).call();
              final Func.U<ùì¢, java.util.ArrayList<ùìê>> v4797$7672 = Thunk.<Func.U<ùì¢, java.util.ArrayList<ùìê>>>shared(
                    (Lazy<Func.U<ùì¢, java.util.ArrayList<ùìê>>>)(() -> Generics.<ùìê, ùì¢>go(
                              $7714.mem2.call(), arg$2
                            ))
                  ).call();
              return Thunk.<java.util.ArrayList<ùìê>>nested(
                        (Lazy<Lazy<java.util.ArrayList<ùìê>>>)(() -> v4797$7672.apply(arg$7716))
                      );
            });
  }
  final PreludeBase.TList.DList<ùìê> $7719 = arg$1.asList();
  assert $7719 != null;
  return PreludeMonad.IMonad_ST.<ùì¢, java.util.ArrayList<ùìê>>pure(arg$2);
}

}
