/*
  Source code is in UTF-8 encoding. The following symbols may appear, among others:
  α β γ δ ε ζ η θ ι κ λ μ ν ξ ο π ρ ς σ τ υ φ χ ψ ω « • ¦ » ∀ ∃ ∷ … → ← ﬁ ﬂ ƒ
  If you can't read this, you're out of luck. This code was generated with the frege compiler version 3.25.84
  from /Users/tricktron/github/master/frege-lsp-server/src/main/frege/ch/fhnw/thga/fregelanguageserver/types/Position.fr
  Do not edit this file! Instead, edit the source file and recompile.
*/

package ch.fhnw.thga.fregelanguageserver.types;

import frege.run8.Func;
import frege.run8.Lazy;
import frege.run8.Thunk;
import frege.run.Kind;
import frege.run.RunTM;
import frege.runtime.Meta;
import frege.runtime.Phantom.RealWorld;
import frege.Prelude;
import frege.control.Category;
import frege.control.Semigroupoid;
import frege.java.IO;
import frege.java.Lang;
import frege.java.Util;
import frege.java.util.Regex;
import frege.prelude.Maybe;
import frege.prelude.PreludeArrays;
import frege.prelude.PreludeBase;
import frege.prelude.PreludeDecimal;
import frege.prelude.PreludeIO;
import frege.prelude.PreludeList;
import frege.prelude.PreludeMonad;
import frege.prelude.PreludeText;

@SuppressWarnings("unused")
@Meta.FregePackage(
  source="/Users/tricktron/github/master/frege-lsp-server/src/main/frege/ch/fhnw/thga/fregelanguageserver/types/Position.fr",
  time=1657089667768L, jmajor=11, jminor=-1,
  imps={
    "frege.Prelude", "frege.prelude.PreludeArrays", "frege.prelude.PreludeBase", "frege.prelude.PreludeDecimal",
    "frege.prelude.PreludeIO", "frege.prelude.PreludeList", "frege.prelude.PreludeMonad", "frege.prelude.PreludeText",
    "frege.java.util.Regex"
  },
  nmss={
    "Prelude", "PreludeArrays", "PreludeBase", "PreludeDecimal", "PreludeIO", "PreludeList", "PreludeMonad",
    "PreludeText", "Regexp"
  },
  symas={}, symcs={},
  symis={
    @Meta.SymI(
      offset=204,
      name=@Meta.QName(kind=0, pack="ch.fhnw.thga.fregelanguageserver.types.Position", base="Show_Position"),
      clas=@Meta.QName(kind=0, pack="frege.prelude.PreludeText", base="Show"), typ=0, lnks={},
      funs={
        @Meta.SymV(
          offset=204,
          name=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.types.Position", base="Show_Position", member="showsub"
          ),
          stri="s(s)", sig=1, depth=1, rkind=13, doc="Function generated for derived instance."
        ),
        @Meta.SymV(
          offset=204,
          name=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.types.Position", base="Show_Position", member="showList"
          ),
          stri="s(ss)", sig=4, depth=2, rkind=13, doc="inherited from 'Show.showList'"
        ),
        @Meta.SymV(
          offset=204,
          name=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.types.Position", base="Show_Position", member="showsPrec"
          ),
          stri="s(uss)", sig=6, depth=3, rkind=13, doc="inherited from 'Show.showsPrec'"
        ),
        @Meta.SymV(
          offset=204,
          name=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.types.Position", base="Show_Position", member="display"
          ),
          stri="s(s)", sig=1, depth=1, rkind=13, doc="inherited from 'Show.display'"
        ),
        @Meta.SymV(
          offset=204,
          name=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.types.Position", base="Show_Position", member="show"
          ),
          stri="s(s)", sig=1, depth=1, rkind=13, doc="Function generated for derived instance."
        ),
        @Meta.SymV(
          offset=204,
          name=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.types.Position", base="Show_Position", member="showChars"
          ),
          stri="s(s)", sig=7, depth=1, rkind=13, doc="inherited from 'Show.showChars'"
        )
      }
    ),
    @Meta.SymI(
      offset=185, name=@Meta.QName(kind=0, pack="ch.fhnw.thga.fregelanguageserver.types.Position", base="Eq_Position"),
      clas=@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="Eq"), typ=0, lnks={},
      funs={
        @Meta.SymV(
          offset=185,
          name=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.types.Position", base="Eq_Position", member="hashCode"
          ),
          stri="s(s)", sig=8, depth=1, rkind=13, doc="Function generated for derived instance."
        ),
        @Meta.SymV(
          offset=185,
          name=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.types.Position", base="Eq_Position", member="!="
          ),
          stri="s(ss)", sig=9, depth=2, rkind=13, doc="inherited from 'Eq.!='", op=96
        ),
        @Meta.SymV(
          offset=185,
          name=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.types.Position", base="Eq_Position", member="=="
          ),
          stri="s(ss)", sig=9, depth=2, rkind=13, doc="Function generated for derived instance.", op=96
        )
      }
    )
  },
  symts={
    @Meta.SymT(
      offset=67, name=@Meta.QName(kind=0, pack="ch.fhnw.thga.fregelanguageserver.types.Position", base="Position"),
      typ=0, kind=9,
      cons={
        @Meta.SymD(
          offset=78,
          name=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.types.Position", base="Position", member="Position"
          ),
          cid=0, typ=10,
          fields={
            @Meta.Field(name="line", offset=93, sigma=5, strict=false),
            @Meta.Field(name="character", offset=126, sigma=5, strict=false)
          }
        )
      },
      lnks={
        @Meta.SymL(
          offset=204,
          name=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.types.Position", base="Position", member="showsub"
          ),
          alias=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.types.Position", base="Show_Position", member="showsub"
          )
        ),
        @Meta.SymL(
          offset=204,
          name=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.types.Position", base="Position", member="showList"
          ),
          alias=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.types.Position", base="Show_Position", member="showList"
          )
        ),
        @Meta.SymL(
          offset=204,
          name=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.types.Position", base="Position", member="show"
          ),
          alias=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.types.Position", base="Show_Position", member="show"
          )
        ),
        @Meta.SymL(
          offset=204,
          name=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.types.Position", base="Position", member="showChars"
          ),
          alias=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.types.Position", base="Show_Position", member="showChars"
          )
        ),
        @Meta.SymL(
          offset=204,
          name=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.types.Position", base="Position", member="showsPrec"
          ),
          alias=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.types.Position", base="Show_Position", member="showsPrec"
          )
        ),
        @Meta.SymL(
          offset=185,
          name=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.types.Position", base="Position", member="hashCode"
          ),
          alias=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.types.Position", base="Eq_Position", member="hashCode"
          )
        ),
        @Meta.SymL(
          offset=204,
          name=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.types.Position", base="Position", member="display"
          ),
          alias=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.types.Position", base="Show_Position", member="display"
          )
        ),
        @Meta.SymL(
          offset=185,
          name=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.types.Position", base="Position", member="!="
          ),
          alias=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.types.Position", base="Eq_Position", member="!="
          )
        ),
        @Meta.SymL(
          offset=185,
          name=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.types.Position", base="Position", member="=="
          ),
          alias=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.types.Position", base="Eq_Position", member="=="
          )
        )
      },
      funs={
        @Meta.SymV(
          offset=94,
          name=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.types.Position", base="Position", member="upd$line"
          ),
          stri="s(su)", sig=11, depth=2, rkind=13, doc="update field @line@"
        ),
        @Meta.SymV(
          offset=127,
          name=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.types.Position", base="Position", member="upd$character"
          ),
          stri="s(su)", sig=11, depth=2, rkind=13, doc="update field @character@"
        ),
        @Meta.SymV(
          offset=94,
          name=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.types.Position", base="Position", member="has$line"
          ),
          stri="s(u)", sig=13, depth=1, rkind=13, doc="check if constructor has field @line@"
        ),
        @Meta.SymV(
          offset=94,
          name=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.types.Position", base="Position", member="line"
          ),
          stri="s(s)", sig=8, depth=1, rkind=13, doc="access field @line@"
        ),
        @Meta.SymV(
          offset=127,
          name=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.types.Position", base="Position", member="chg$character"
          ),
          stri="s(su)", sig=15, depth=2, rkind=13, doc="change field @character@"
        ),
        @Meta.SymV(
          offset=94,
          name=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.types.Position", base="Position", member="chg$line"
          ),
          stri="s(su)", sig=15, depth=2, rkind=13, doc="change field @line@"
        ),
        @Meta.SymV(
          offset=127,
          name=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.types.Position", base="Position", member="character"
          ),
          stri="s(s)", sig=8, depth=1, rkind=13, doc="access field @character@"
        ),
        @Meta.SymV(
          offset=127,
          name=@Meta.QName(
            kind=2, pack="ch.fhnw.thga.fregelanguageserver.types.Position", base="Position", member="has$character"
          ),
          stri="s(u)", sig=13, depth=1, rkind=13, doc="check if constructor has field @character@"
        )
      },
      prod=true
    )
  },
  symvs={},
  symls={
    @Meta.SymL(
      offset=78, name=@Meta.QName(pack="ch.fhnw.thga.fregelanguageserver.types.Position", base="Position"),
      alias=@Meta.QName(
        kind=2, pack="ch.fhnw.thga.fregelanguageserver.types.Position", base="Position", member="Position"
      )
    )
  },
  taus={
    @Meta.Tau(
      kind=2, suba=0,
      tcon={@Meta.QName(kind=0, pack="ch.fhnw.thga.fregelanguageserver.types.Position", base="Position")}
    ),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="StringJ")}),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="Char")}),
    @Meta.Tau(kind=0, suba=1, subb=2),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="[]")}),
    @Meta.Tau(kind=0, suba=4, subb=0),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="Int")}),
    @Meta.Tau(kind=0, suba=4, subb=2),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="Bool")}),
    @Meta.Tau(kind=9), @Meta.Tau(suba=9, tvar="α"),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="->")}),
    @Meta.Tau(kind=0, suba=11, subb=6), @Meta.Tau(kind=0, suba=12, subb=6)
  },
  rhos={
    @Meta.Rho(rhofun=false, rhotau=0), @Meta.Rho(rhofun=false, rhotau=3), @Meta.Rho(sigma=0, rhotau=1),
    @Meta.Rho(rhofun=false, rhotau=5), @Meta.Rho(sigma=3, rhotau=1), @Meta.Rho(sigma=2, rhotau=4),
    @Meta.Rho(rhofun=false, rhotau=6), @Meta.Rho(sigma=0, rhotau=4), @Meta.Rho(sigma=5, rhotau=7),
    @Meta.Rho(rhofun=false, rhotau=7), @Meta.Rho(sigma=0, rhotau=9), @Meta.Rho(sigma=0, rhotau=6),
    @Meta.Rho(rhofun=false, rhotau=8), @Meta.Rho(sigma=0, rhotau=12), @Meta.Rho(sigma=0, rhotau=13),
    @Meta.Rho(sigma=5, rhotau=0), @Meta.Rho(sigma=5, rhotau=15), @Meta.Rho(sigma=0, rhotau=15),
    @Meta.Rho(rhofun=false, rhotau=10), @Meta.Rho(sigma=12, rhotau=12), @Meta.Rho(rhofun=false, rhotau=13),
    @Meta.Rho(sigma=14, rhotau=0), @Meta.Rho(sigma=0, rhotau=21)
  },
  sigmas={
    @Meta.Sigma(rho=0), @Meta.Sigma(rho=2), @Meta.Sigma(rho=3), @Meta.Sigma(rho=1), @Meta.Sigma(rho=5),
    @Meta.Sigma(rho=6), @Meta.Sigma(rho=8), @Meta.Sigma(rho=10), @Meta.Sigma(rho=11), @Meta.Sigma(rho=14),
    @Meta.Sigma(rho=16), @Meta.Sigma(rho=17), @Meta.Sigma(rho=18), @Meta.Sigma(bound={"α"}, kinds={9}, rho=19),
    @Meta.Sigma(rho=20), @Meta.Sigma(rho=22)
  },
  exprs={@Meta.Expr()}
)
final public class Position  {
  


final public static class IShow_Position implements PreludeText.CShow<TPosition> {
  public IShow_Position() {}
  final public static IShow_Position it = new IShow_Position();
  @Override final public String/*<Character>*/ ƒshowsub(final Lazy<TPosition> arg$1) {
    return IShow_Position.showsub(arg$1.call());
  }
  @Override final public String/*<Character>*/ ƒshowList(
    final Lazy<PreludeBase.TList<TPosition>> arg$1, final Lazy<String/*<Character>*/> arg$2
  ) {
    return IShow_Position.showList(arg$1.call(), arg$2.call());
  }
  @Override final public String/*<Character>*/ ƒshowsPrec(
    final Lazy<Integer> arg$1, final Lazy<TPosition> arg$2, final Lazy<String/*<Character>*/> arg$3
  ) {
    return IShow_Position.showsPrec(arg$1, arg$2.call(), arg$3.call());
  }
  @Override final public String/*<Character>*/ ƒdisplay(final Lazy<TPosition> arg$1) {
    return IShow_Position.display(arg$1.call());
  }
  @Override final public String/*<Character>*/ ƒshow(final Lazy<TPosition> arg$1) {
    return IShow_Position.show(arg$1.call());
  }
  @Override final public PreludeBase.TList<Character> ƒshowChars(final Lazy<TPosition> arg$1) {
    return IShow_Position.showChars(arg$1.call());
  }
  final public static String/*<Character>*/ showsub(final TPosition arg$1) {
    final int a2$7667 = (int)arg$1.mem$character.call();
    final int a1$7666 = (int)arg$1.mem$line.call();
    return ("(" + (((("Position" + " ") + PreludeText.IShow_Int.showsub(a1$7666)) + " ") + PreludeText.IShow_Int.showsub(
              a2$7667
            ))) + ")";
  }
  final public static String/*<Character>*/ showList(
    final PreludeBase.TList<TPosition> arg$1, final String/*<Character>*/ arg$2
  ) {
    return "[" + (PreludeText.joined(
              Thunk.<String/*<Character>*/>lazy(", "),
              PreludeList.<String/*<Character>*/, TPosition>map(
                    (Func.U<TPosition, String/*<Character>*/>)((final Lazy<TPosition> η$7877) -> Thunk.<
                          String/*<Character>*/
                        >shared((Lazy<String/*<Character>*/>)(() -> IShow_Position.show(η$7877.call())))),
                    arg$1
                  )
            ).call() + ("]" + arg$2));
  }
  final public static String/*<Character>*/ showsPrec(
    final Lazy<Integer> arg$1, final TPosition arg$2, final String/*<Character>*/ arg$3
  ) {
    return IShow_Position.show(arg$2) + arg$3;
  }
  final public static String/*<Character>*/ display(final TPosition arg$1) {
    return IShow_Position.show(arg$1);
  }
  final public static String/*<Character>*/ show(final TPosition arg$1) {
    final int a2$7664 = (int)arg$1.mem$character.call();
    final int a1$7663 = (int)arg$1.mem$line.call();
    return ((("Position" + " ") + PreludeText.IShow_Int.showsub(a1$7663)) + " ") + PreludeText.IShow_Int.showsub(
              a2$7664
            );
  }
  final public static PreludeBase.TList<Character> showChars(final TPosition arg$1) {
    return PreludeList.IListView_StringJ.<Character>toList(IShow_Position.show(arg$1));
  }
}
final public static class IEq_Position implements PreludeBase.CEq<TPosition> {
  public IEq_Position() {}
  final public static IEq_Position it = new IEq_Position();
  @Override final public int ƒhashCode(final Lazy<TPosition> arg$1) {
    return IEq_Position.hashCode(arg$1.call());
  }
  @Override final public boolean ƒ$excl$eq(final Lazy<TPosition> arg$1, final Lazy<TPosition> arg$2) {
    return IEq_Position.$excl$eq(arg$1.call(), arg$2.call());
  }
  @Override final public boolean ƒ$eq$eq(final Lazy<TPosition> arg$1, final Lazy<TPosition> arg$2) {
    return IEq_Position.$eq$eq(arg$1.call(), arg$2.call());
  }
  final public static int hashCode(final TPosition arg$1) {
    final int a2$7661 = (int)arg$1.mem$character.call();
    final int a1$7660 = (int)arg$1.mem$line.call();
    return (31 * ((31 * ((31 * 1) + RunTM.constructor(arg$1))) + PreludeBase.IEq_Int.hashCode(
              a1$7660
            ))) + PreludeBase.IEq_Int.hashCode(a2$7661);
  }
  final public static boolean $excl$eq(final TPosition arg$1, final TPosition arg$2) {
    if (IEq_Position.$eq$eq(arg$1, arg$2)) {
      return false;
    }
    else {
      return true;
    }
  }
  final public static boolean $eq$eq(final TPosition arg$1, final TPosition arg$2) {
    final int µ$$7697 = (int)arg$1.mem$character.call();
    final int µ$$7696 = (int)arg$1.mem$line.call();
    final int µ$$7699 = (int)arg$2.mem$character.call();
    final int µ$$7698 = (int)arg$2.mem$line.call();
    return (µ$$7696 == µ$$7698) && (µ$$7697 == µ$$7699);
  }
}
final public static class TPosition implements frege.runtime.Value, Lazy<TPosition> {
  private TPosition(final Lazy<Integer> arg$1, final Lazy<Integer> arg$2) {
    mem$line = Thunk.<Integer>shared(arg$1);
    mem$character = Thunk.<Integer>shared(arg$2);
  }
  final public int constructor() {
    return 0;
  }
  final public static TPosition mk(final Lazy<Integer> arg$1, final Lazy<Integer> arg$2) {
    return new TPosition(arg$1, arg$2);
  }
  final public Lazy<Integer> mem$line  ;
  final public Lazy<Integer> mem$character  ;
  final public TPosition call() {
    return this;
  }
  final public boolean isShared() {
    return true;
  }
  final public Thunk<TPosition> asThunk() {
    return null;
  }
  @SuppressWarnings("unchecked") final public TPosition simsalabim() {
    return (TPosition)this;
  }
  final public static TPosition upd$line(final TPosition arg$1, final Lazy<Integer> arg$2) {
    return TPosition.mk(arg$2, arg$1.mem$character);
  }
  final public static TPosition upd$character(final TPosition arg$1, final Lazy<Integer> arg$2) {
    return TPosition.mk(arg$1.mem$line, arg$2);
  }
  final public static <α> boolean has$line(final Lazy<α> arg$1) {
    return true;
  }
  final public static int line(final TPosition arg$1) {
    final int a1$7642 = (int)arg$1.mem$line.call();
    return a1$7642;
  }
  final public static TPosition chg$character(final TPosition arg$1, final Lazy<Func.U<Integer, Integer>> arg$2) {
    return TPosition.mk(
              arg$1.mem$line, Thunk.<Integer>nested((Lazy<Lazy<Integer>>)(() -> arg$2.call().apply(arg$1.mem$character)))
            );
  }
  final public static TPosition chg$line(final TPosition arg$1, final Lazy<Func.U<Integer, Integer>> arg$2) {
    return TPosition.mk(
              Thunk.<Integer>nested((Lazy<Lazy<Integer>>)(() -> arg$2.call().apply(arg$1.mem$line))), arg$1.mem$character
            );
  }
  final public static int character(final TPosition arg$1) {
    final int a2$7631 = (int)arg$1.mem$character.call();
    return a2$7631;
  }
  final public static <α> boolean has$character(final Lazy<α> arg$1) {
    return true;
  }
}


}
