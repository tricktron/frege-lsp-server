/*
  Source code is in UTF-8 encoding. The following symbols may appear, among others:
  α β γ δ ε ζ η θ ι κ λ μ ν ξ ο π ρ ς σ τ υ φ χ ψ ω « • ¦ » ∀ ∃ ∷ … → ← ﬁ ﬂ ƒ
  If you can't read this, you're out of luck. This code was generated with the frege compiler version 3.25.84
  from /Users/tricktron/github/master/frege-lsp-server/src/main/frege/ch/fhnw/thga/fregelanguageserver/hover/Hover.fr
  Do not edit this file! Instead, edit the source file and recompile.
*/

package ch.fhnw.thga.fregelanguageserver.hover;

import frege.run8.Func;
import frege.run8.Lazy;
import frege.run8.Thunk;
import frege.run.Kind;
import frege.run.RunTM;
import frege.runtime.Meta;
import frege.runtime.Phantom.RealWorld;
import ch.fhnw.thga.fregelanguageserver.compiler.CompilerHelper;
import ch.fhnw.thga.fregelanguageserver.diagnostic.Diagnostic;
import frege.Prelude;
import frege.Version;
import frege.compiler.Classes;
import frege.compiler.Classtools;
import frege.compiler.GenMeta;
import frege.compiler.Javatypes;
import frege.compiler.Kinds;
import frege.compiler.Main;
import frege.compiler.Typecheck;
import frege.compiler.Utilities;
import frege.compiler.classes.Nice;
import frege.compiler.classes.QNameMatcher;
import frege.compiler.common.Annotate;
import frege.compiler.common.AnnotateG;
import frege.compiler.common.Binders;
import frege.compiler.common.CompilerOptions;
import frege.compiler.common.Desugar;
import frege.compiler.common.Errors;
import frege.compiler.common.ImpExp;
import frege.compiler.common.JavaName;
import frege.compiler.common.Mangle;
import frege.compiler.common.PatternCompiler;
import frege.compiler.common.Resolve;
import frege.compiler.common.Roman;
import frege.compiler.common.SymbolTable;
import frege.compiler.common.Trans;
import frege.compiler.common.Tuples;
import frege.compiler.common.Types;
import frege.compiler.common.UnAlias;
import frege.compiler.enums.CaseKind;
import frege.compiler.enums.Flags;
import frege.compiler.enums.Literals;
import frege.compiler.enums.RFlag;
import frege.compiler.enums.SymState;
import frege.compiler.enums.TokenID;
import frege.compiler.enums.Visibility;
import frege.compiler.gen.java.Bindings;
import frege.compiler.gen.java.Common;
import frege.compiler.gen.java.Constants;
import frege.compiler.gen.java.DataCode;
import frege.compiler.gen.java.InstanceCode;
import frege.compiler.gen.java.Instantiation;
import frege.compiler.gen.java.Match;
import frege.compiler.gen.java.MethodCall;
import frege.compiler.gen.java.PrettyJava;
import frege.compiler.gen.java.VarCode;
import frege.compiler.grammar.Frege;
import frege.compiler.grammar.Lexer;
import frege.compiler.instances.NiceExprS;
import frege.compiler.instances.Nicer;
import frege.compiler.instances.PositionedSName;
import frege.compiler.passes.Easy;
import frege.compiler.passes.Enter;
import frege.compiler.passes.Fields;
import frege.compiler.passes.Final;
import frege.compiler.passes.Fix;
import frege.compiler.passes.GenCode;
import frege.compiler.passes.GlobalLam;
import frege.compiler.passes.Imp;
import frege.compiler.passes.Instances;
import frege.compiler.passes.LetUnroll;
import frege.compiler.passes.Strict;
import frege.compiler.passes.Transdef;
import frege.compiler.passes.TypeAlias;
import frege.compiler.tc.Methods;
import frege.compiler.tc.Patterns;
import frege.compiler.tc.Util;
import frege.compiler.types.AbstractJava;
import frege.compiler.types.ConstructorField;
import frege.compiler.types.Expression;
import frege.compiler.types.External;
import frege.compiler.types.Global;
import frege.compiler.types.ImportDetails;
import frege.compiler.types.JNames;
import frege.compiler.types.NSNames;
import frege.compiler.types.Packs;
import frege.compiler.types.Positions;
import frege.compiler.types.QNames;
import frege.compiler.types.SNames;
import frege.compiler.types.SourceDefinitions;
import frege.compiler.types.Strictness;
import frege.compiler.types.Symbols;
import frege.compiler.types.Targets;
import frege.compiler.types.Tokens;
import frege.control.Category;
import frege.control.Concurrent;
import frege.control.Semigroupoid;
import frege.control.monad.State;
import frege.control.monad.trans.MonadIO;
import frege.control.monad.trans.MonadTrans;
import frege.data.Bits;
import frege.data.Char;
import frege.data.Foldable;
import frege.data.Graph;
import frege.data.List;
import frege.data.Monoid;
import frege.data.Traversable;
import frege.data.Tree;
import frege.data.TreeMap;
import frege.data.wrapper.Const;
import frege.data.wrapper.Dual;
import frege.data.wrapper.Endo;
import frege.data.wrapper.Identity;
import frege.data.wrapper.Num;
import frege.java.IO;
import frege.java.Lang;
import frege.java.Net;
import frege.java.util.Regex;
import frege.java.util.Zip;
import frege.lib.Modules;
import frege.lib.PP;
import frege.prelude.Maybe;
import frege.prelude.PreludeArrays;
import frege.prelude.PreludeBase;
import frege.prelude.PreludeDecimal;
import frege.prelude.PreludeIO;
import frege.prelude.PreludeList;
import frege.prelude.PreludeMonad;
import frege.prelude.PreludeText;
import frege.system.Random;
import frege.test.QuickCheck;
import frege.test.QuickCheckArbitrary;
import frege.test.QuickCheckException;
import frege.test.QuickCheckGen;
import frege.test.QuickCheckModifiers;
import frege.test.QuickCheckProperty;
import frege.test.QuickCheckState;
import frege.test.QuickCheckTest;
import frege.test.QuickCheckText;

@SuppressWarnings("unused")
@Meta.FregePackage(
  source="/Users/tricktron/github/master/frege-lsp-server/src/main/frege/ch/fhnw/thga/fregelanguageserver/hover/Hover.fr",
  time=1656694939939L, jmajor=11, jminor=-1,
  imps={
    "ch.fhnw.thga.fregelanguageserver.compiler.CompilerHelper", "frege.tools.doc.Utilities",
    "ch.fhnw.thga.fregelanguageserver.diagnostic.Diagnostic", "frege.compiler.enums.Flags",
    "frege.compiler.types.Global", "frege.data.List", "frege.lib.Modules", "frege.control.monad.trans.MonadTrans",
    "frege.compiler.classes.Nice", "frege.compiler.types.Positions", "frege.Prelude", "frege.prelude.PreludeArrays",
    "frege.prelude.PreludeBase", "frege.prelude.PreludeDecimal", "frege.prelude.PreludeIO", "frege.prelude.PreludeList",
    "frege.prelude.PreludeMonad", "frege.prelude.PreludeText", "frege.compiler.types.QNames", "frege.test.QuickCheck",
    "frege.compiler.common.Resolve", "frege.java.util.Regex", "frege.compiler.types.SNames",
    "frege.control.monad.State", "frege.compiler.types.Symbols", "frege.compiler.common.Types", "frege.data.TreeMap",
    "frege.compiler.enums.TokenID", "frege.compiler.types.Tokens", "frege.compiler.types.Types",
    "frege.compiler.Utilities", "frege.ide.Utilities"
  },
  nmss={
    "CompilerHelper", "DU", "Diagnostic", "Flags", "Global", "List", "Modules", "MonadTrans",
    "Nice", "Positions", "Prelude", "PreludeArrays", "PreludeBase", "PreludeDecimal", "PreludeIO",
    "PreludeList", "PreludeMonad", "PreludeText", "QNames", "QuickCheck", "R", "Regexp", "SNames",
    "State", "Symbols", "TH", "TM", "TokenID", "Tokens", "Types", "U", "Utilities"
  },
  symas={}, symcs={}, symis={}, symts={},
  symvs={
    @Meta.SymV(
      offset=2905, name=@Meta.QName(pack="ch.fhnw.thga.fregelanguageserver.hover.Hover", base="verbose"), stri="s(us)",
      sig=2, depth=2, rkind=13
    ),
    @Meta.SymV(
      offset=6315, name=@Meta.QName(pack="ch.fhnw.thga.fregelanguageserver.hover.Hover", base="tokenToQName"),
      stri="s(u)", sig=4, depth=1, rkind=13
    ),
    @Meta.SymV(
      offset=6103, name=@Meta.QName(pack="ch.fhnw.thga.fregelanguageserver.hover.Hover", base="tokenToSName"),
      stri="s(s)", sig=5, depth=1, rkind=13
    ),
    @Meta.SymV(
      offset=3818, name=@Meta.QName(pack="ch.fhnw.thga.fregelanguageserver.hover.Hover", base="signature"),
      stri="s(us)", sig=6, depth=2, rkind=12
    ),
    @Meta.SymV(
      offset=1773,
      name=@Meta.QName(pack="ch.fhnw.thga.fregelanguageserver.hover.Hover", base="shouldShowVaridTypeSignature"),
      stri="u", sig=7, depth=0, rkind=8
    ),
    @Meta.SymV(
      offset=6158, name=@Meta.QName(pack="ch.fhnw.thga.fregelanguageserver.hover.Hover", base="sNameToQName"),
      stri="s(s)", sig=9, depth=1, rkind=13
    ),
    @Meta.SymV(
      offset=6703, name=@Meta.QName(pack="ch.fhnw.thga.fregelanguageserver.hover.Hover", base="resolveSymbol"),
      stri="s(s)", sig=11, depth=1, rkind=13
    ),
    @Meta.SymV(
      offset=6520, name=@Meta.QName(pack="ch.fhnw.thga.fregelanguageserver.hover.Hover", base="resolveSymbol2"),
      stri="s(s)", sig=12, depth=1, rkind=13
    ),
    @Meta.SymV(
      offset=2099, name=@Meta.QName(pack="ch.fhnw.thga.fregelanguageserver.hover.Hover", base="posToTokens"),
      stri="s(su)", sig=14, depth=2, rkind=45
    ),
    @Meta.SymV(
      offset=7990, name=@Meta.QName(pack="ch.fhnw.thga.fregelanguageserver.hover.Hover", base="match"), stri="s(ss)",
      sig=16, depth=2, rkind=13
    ),
    @Meta.SymV(
      offset=2646, name=@Meta.QName(pack="ch.fhnw.thga.fregelanguageserver.hover.Hover", base="magicPNs"), stri="s(s)",
      sig=18, depth=1, rkind=45
    ),
    @Meta.SymV(
      offset=8178, name=@Meta.QName(pack="ch.fhnw.thga.fregelanguageserver.hover.Hover", base="main"), stri="u",
      sig=19, depth=0, rkind=8
    ),
    @Meta.SymV(
      offset=2976, name=@Meta.QName(pack="ch.fhnw.thga.fregelanguageserver.hover.Hover", base="label"), stri="s(us)",
      sig=21, depth=2, rkind=13
    ),
    @Meta.SymV(
      offset=2572, name=@Meta.QName(pack="ch.fhnw.thga.fregelanguageserver.hover.Hover", base="initRoot"), stri="s(u)",
      sig=22, depth=1, rkind=13
    ),
    @Meta.SymV(
      offset=8094, name=@Meta.QName(pack="ch.fhnw.thga.fregelanguageserver.hover.Hover", base="groupCount"),
      stri="s(s)", sig=24, nativ="groupCount", pur=true, depth=1, rkind=9
    ),
    @Meta.SymV(
      offset=4925, name=@Meta.QName(pack="ch.fhnw.thga.fregelanguageserver.hover.Hover", base="getSymbols"),
      stri="s(uu)", sig=26, depth=2, rkind=13
    ),
    @Meta.SymV(
      offset=4415, name=@Meta.QName(pack="ch.fhnw.thga.fregelanguageserver.hover.Hover", base="getSymbolType"),
      stri="s(us)", sig=28, depth=2, rkind=44
    ),
    @Meta.SymV(
      offset=4282, name=@Meta.QName(pack="ch.fhnw.thga.fregelanguageserver.hover.Hover", base="getSymbolType2"),
      stri="s(u)", sig=29, depth=1, rkind=13
    ),
    @Meta.SymV(
      offset=1548, name=@Meta.QName(pack="ch.fhnw.thga.fregelanguageserver.hover.Hover", base="getTypeOnHover"),
      stri="s(u)", sig=31, depth=1, rkind=13
    ),
    @Meta.SymV(
      offset=8128, name=@Meta.QName(pack="ch.fhnw.thga.fregelanguageserver.hover.Hover", base="findVariableName"),
      stri="s(uuuuus)", sig=37, depth=6, rkind=13
    ),
    @Meta.SymV(
      offset=5977, name=@Meta.QName(pack="ch.fhnw.thga.fregelanguageserver.hover.Hover", base="findSymbol"),
      stri="s(u)", sig=39, depth=1, rkind=13
    ),
    @Meta.SymV(
      offset=5594, name=@Meta.QName(pack="ch.fhnw.thga.fregelanguageserver.hover.Hover", base="findToken"), stri="s(u)",
      sig=40, depth=1, rkind=13
    ),
    @Meta.SymV(
      offset=6948, name=@Meta.QName(pack="ch.fhnw.thga.fregelanguageserver.hover.Hover", base="createSName"),
      stri="s(s)", sig=41, depth=1, rkind=13
    ),
    @Meta.SymV(
      offset=1280,
      name=@Meta.QName(pack="ch.fhnw.thga.fregelanguageserver.hover.Hover", base="compileAndGetTypeSignatureOnHover"),
      stri="s(uu)", sig=42, depth=2, rkind=13
    ),
    @Meta.SymV(
      offset=2235, name=@Meta.QName(pack="ch.fhnw.thga.fregelanguageserver.hover.Hover", base="backwards"),
      stri="s(us)", sig=45, depth=2, rkind=45
    )
  },
  symls={
    @Meta.SymL(
      offset=2882, name=@Meta.QName(pack="ch.fhnw.thga.fregelanguageserver.hover.Hover", base="dcolon"),
      alias=@Meta.QName(pack="frege.tools.doc.Utilities", base="symDcolon")
    )
  },
  taus={
    @Meta.Tau(kind=9), @Meta.Tau(suba=0, tvar="α"),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.compiler.types.Global", base="Global")}),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.compiler.types.Types", base="SigmaT")}),
    @Meta.Tau(kind=0, suba=3, subb=1),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="StringJ")}),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="Char")}),
    @Meta.Tau(kind=0, suba=5, subb=6),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.compiler.types.Tokens", base="Token")}),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.control.monad.State", base="StateT")}),
    @Meta.Tau(kind=0, suba=9, subb=2),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="Maybe")}),
    @Meta.Tau(kind=0, suba=10, subb=11),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.compiler.types.QNames", base="QName")}),
    @Meta.Tau(kind=0, suba=12, subb=13),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.compiler.types.SNames", base="SName")}),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.test.QuickCheckGen", base="Gen")}),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.test.QuickCheckProperty", base="Prop")}),
    @Meta.Tau(kind=0, suba=16, subb=17),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.control.monad.State", base="State")}),
    @Meta.Tau(kind=0, suba=19, subb=2),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="[]")}),
    @Meta.Tau(kind=0, suba=21, subb=13), @Meta.Tau(kind=0, suba=20, subb=22),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.compiler.types.Symbols", base="SymbolT")}),
    @Meta.Tau(kind=0, suba=24, subb=2), @Meta.Tau(kind=0, suba=21, subb=25), @Meta.Tau(kind=0, suba=20, subb=26),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.compiler.types.Positions", base="Position")}),
    @Meta.Tau(kind=0, suba=21, subb=28), @Meta.Tau(kind=0, suba=21, subb=8),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.java.util.Regex", base="Regex")}),
    @Meta.Tau(kind=0, suba=11, subb=7), @Meta.Tau(kind=0, suba=21, subb=32), @Meta.Tau(kind=0, suba=11, subb=33),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="(,)")}),
    @Meta.Tau(kind=0, suba=21, subb=7), @Meta.Tau(kind=0, suba=35, subb=36), @Meta.Tau(kind=0, suba=37, subb=1),
    @Meta.Tau(kind=0, suba=21, subb=38),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="ST")}),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="RealWorld")}),
    @Meta.Tau(kind=0, suba=40, subb=41),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="()")}),
    @Meta.Tau(kind=0, suba=42, subb=43), @Meta.Tau(suba=0, tvar="a"), @Meta.Tau(kind=0, suba=24, subb=45),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.lib.Modules", base="Y")}),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.lib.Modules", base="RTree")}),
    @Meta.Tau(kind=0, suba=47, subb=48), @Meta.Tau(kind=0, suba=42, subb=49),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.java.util.Regex", base="MatchResult")}),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="Int")}),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.data.TreeMap", base="TreeMap")}),
    @Meta.Tau(kind=0, suba=53, subb=7), @Meta.Tau(kind=0, suba=54, subb=25), @Meta.Tau(kind=0, suba=12, subb=7),
    @Meta.Tau(
      kind=2, suba=0,
      tcon={@Meta.QName(kind=0, pack="ch.fhnw.thga.fregelanguageserver.diagnostic.Diagnostic", base="Position")}
    ),
    @Meta.Tau(suba=0, tvar="β"), @Meta.Tau(suba=0, tvar="γ"),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeBase", base="->")}),
    @Meta.Tau(kind=0, suba=60, subb=7), @Meta.Tau(kind=0, suba=61, subb=13), @Meta.Tau(kind=0, suba=20, subb=13),
    @Meta.Tau(kind=0, suba=12, subb=25), @Meta.Tau(kind=0, suba=12, subb=8), @Meta.Tau(kind=0, suba=42, subb=32),
    @Meta.Tau(kind=2, suba=0, tcon={@Meta.QName(kind=0, pack="frege.prelude.PreludeArrays", base="JArray")}),
    @Meta.Tau(kind=0, suba=67, subb=8)
  },
  rhos={
    @Meta.Rho(rhofun=false, rhotau=2), @Meta.Rho(rhofun=false, rhotau=4), @Meta.Rho(rhofun=false, rhotau=7),
    @Meta.Rho(sigma=1, rhotau=2),
    @Meta.Rho(
      cont={
        @Meta.Context(clas=@Meta.QName(kind=0, pack="frege.compiler.classes.Nice", base="Nice"), tau=1),
        @Meta.Context(clas=@Meta.QName(kind=0, pack="frege.compiler.classes.QNameMatcher", base="QNameMatcher"), tau=1)
      },
      sigma=0, rhotau=3
    ),
    @Meta.Rho(rhofun=false, rhotau=8), @Meta.Rho(rhofun=false, rhotau=14), @Meta.Rho(sigma=3, rhotau=6),
    @Meta.Rho(rhofun=false, rhotau=15), @Meta.Rho(sigma=3, rhotau=8), @Meta.Rho(sigma=3, rhotau=2),
    @Meta.Rho(sigma=0, rhotau=10), @Meta.Rho(rhofun=false, rhotau=18), @Meta.Rho(rhofun=false, rhotau=23),
    @Meta.Rho(sigma=8, rhotau=13), @Meta.Rho(rhofun=false, rhotau=27), @Meta.Rho(sigma=10, rhotau=15),
    @Meta.Rho(sigma=3, rhotau=15), @Meta.Rho(rhofun=false, rhotau=29), @Meta.Rho(rhofun=false, rhotau=30),
    @Meta.Rho(sigma=0, rhotau=19), @Meta.Rho(sigma=13, rhotau=20), @Meta.Rho(rhofun=false, rhotau=31),
    @Meta.Rho(rhofun=false, rhotau=34), @Meta.Rho(sigma=15, rhotau=23), @Meta.Rho(sigma=10, rhotau=24),
    @Meta.Rho(rhofun=false, rhotau=39), @Meta.Rho(sigma=17, rhotau=26), @Meta.Rho(rhofun=false, rhotau=44),
    @Meta.Rho(rhofun=false, rhotau=46), @Meta.Rho(sigma=20, rhotau=2), @Meta.Rho(sigma=0, rhotau=30),
    @Meta.Rho(rhofun=false, rhotau=50), @Meta.Rho(sigma=10, rhotau=32), @Meta.Rho(rhofun=false, rhotau=51),
    @Meta.Rho(rhofun=false, rhotau=52), @Meta.Rho(sigma=23, rhotau=35), @Meta.Rho(rhofun=false, rhotau=55),
    @Meta.Rho(rhofun=false, rhotau=26), @Meta.Rho(sigma=25, rhotau=38), @Meta.Rho(sigma=0, rhotau=39),
    @Meta.Rho(rhofun=false, rhotau=25), @Meta.Rho(sigma=27, rhotau=2), @Meta.Rho(sigma=0, rhotau=42),
    @Meta.Rho(rhofun=false, rhotau=56), @Meta.Rho(sigma=27, rhotau=44), @Meta.Rho(rhofun=false, rhotau=57),
    @Meta.Rho(sigma=30, rhotau=44), @Meta.Rho(rhofun=false, rhotau=1), @Meta.Rho(rhofun=false, rhotau=58),
    @Meta.Rho(rhofun=false, rhotau=59), @Meta.Rho(rhofun=false, rhotau=62), @Meta.Rho(rhofun=false, rhotau=28),
    @Meta.Rho(rhofun=false, rhotau=63), @Meta.Rho(sigma=8, rhotau=53), @Meta.Rho(sigma=36, rhotau=54),
    @Meta.Rho(sigma=35, rhotau=55), @Meta.Rho(sigma=34, rhotau=56), @Meta.Rho(sigma=33, rhotau=57),
    @Meta.Rho(sigma=32, rhotau=58), @Meta.Rho(rhofun=false, rhotau=13), @Meta.Rho(rhofun=false, rhotau=64),
    @Meta.Rho(sigma=38, rhotau=61), @Meta.Rho(rhofun=false, rhotau=65), @Meta.Rho(sigma=30, rhotau=63),
    @Meta.Rho(sigma=10, rhotau=8), @Meta.Rho(rhofun=false, rhotau=66), @Meta.Rho(sigma=30, rhotau=66),
    @Meta.Rho(sigma=10, rhotau=67), @Meta.Rho(rhofun=false, rhotau=68), @Meta.Rho(sigma=44, rhotau=19),
    @Meta.Rho(sigma=43, rhotau=70)
  },
  sigmas={
    @Meta.Sigma(rho=0), @Meta.Sigma(rho=1), @Meta.Sigma(bound={"α"}, kinds={0}, rho=4), @Meta.Sigma(rho=5),
    @Meta.Sigma(rho=7), @Meta.Sigma(rho=9), @Meta.Sigma(rho=11), @Meta.Sigma(rho=12), @Meta.Sigma(rho=8),
    @Meta.Sigma(rho=14), @Meta.Sigma(rho=2), @Meta.Sigma(rho=16), @Meta.Sigma(rho=17), @Meta.Sigma(rho=18),
    @Meta.Sigma(rho=21), @Meta.Sigma(rho=22), @Meta.Sigma(rho=25), @Meta.Sigma(rho=26),
    @Meta.Sigma(bound={"α"}, kinds={0}, rho=27), @Meta.Sigma(rho=28), @Meta.Sigma(rho=29),
    @Meta.Sigma(bound={"a"}, kinds={0}, rho=31), @Meta.Sigma(rho=33), @Meta.Sigma(rho=34), @Meta.Sigma(rho=36),
    @Meta.Sigma(rho=37), @Meta.Sigma(rho=40), @Meta.Sigma(rho=41), @Meta.Sigma(rho=43), @Meta.Sigma(rho=45),
    @Meta.Sigma(rho=46), @Meta.Sigma(rho=47), @Meta.Sigma(rho=48), @Meta.Sigma(rho=49), @Meta.Sigma(rho=50),
    @Meta.Sigma(rho=51), @Meta.Sigma(rho=52), @Meta.Sigma(bound={"α", "β", "γ"}, kinds={0, 0, 0}, rho=59),
    @Meta.Sigma(rho=60), @Meta.Sigma(rho=62), @Meta.Sigma(rho=64), @Meta.Sigma(rho=65), @Meta.Sigma(rho=68),
    @Meta.Sigma(rho=69), @Meta.Sigma(rho=35), @Meta.Sigma(rho=71)
  },
  exprs={@Meta.Expr()}
)
final public class Hover  {
  




final public static boolean wanted(final Symbols.TSymbolT<Global.TGlobal> arg$1) {
  if (Symbols.TSymbolT.<Global.TGlobal>has$alias(arg$1)) {
    return false;
  }
  final QNames.TQName $21176 = Symbols.TSymbolT.<Global.TGlobal>name(arg$1);
  final QNames.TQName.DLocal $21177 = $21176.asLocal();
  if ($21177 != null) {
    return false;
  }
  if (frege.runtime.Regex9.find(QNames.TQName.base(Symbols.TSymbolT.<Global.TGlobal>name(arg$1)), Hover.K.rgx21178)) {
    return false;
  }
  return true;
}
final public static <α> String/*<Character>*/ verbose(
  final Nice.CNice<α> ctx$1, final QNameMatcher.CQNameMatcher<α> ctx$2, final Lazy<Global.TGlobal> arg$1,
  final frege.compiler.types.Types.TSigmaT<α> arg$2
) {
  if (frege.compiler.types.Types.<α>isPSigma(arg$2)) {
    return "?";
  }
  return Nicer.INice_RhoT.<α>nicer(ctx$1, ctx$2, frege.compiler.types.Types.TSigmaT.<α>rho(arg$2), arg$1.call());
}
final public static Tokens.TToken trans(final Tokens.TToken arg$1) {
  final String/*<Character>*/ $21179 = arg$1.mem$value;
  if ("_".equals($21179)) {
    if (arg$1.mem$tokid == TokenID.TTokenID.CHAR) {
      return Tokens.TToken.upd$value(Tokens.TToken.upd$tokid(arg$1, TokenID.TTokenID.VARID), "it");
    }
  }
  return arg$1;
}
final public static SNames.TSName tokenToSName(final Tokens.TToken arg$1) {
  return SNames.TSName.DSimple.mk(arg$1);
}
final public static State.TStateT<Global.TGlobal, PreludeBase.TMaybe<?>, QNames.TQName> tokenToQName(
  final Lazy<Tokens.TToken> arg$1
) {
  return State.TStateT.<Global.TGlobal, PreludeBase.TMaybe<?>, QNames.TQName>mk(
            (Func.U<Global.TGlobal, Kind.U<PreludeBase.TMaybe<?>, PreludeBase.TTuple2<QNames.TQName, Global.TGlobal>>>)((
              final Lazy<Global.TGlobal> arg$21180
            ) -> {
                  final PreludeBase.TTuple2<Global.TGlobal, Global.TGlobal> v2895$20137 =
                  PreludeBase.TTuple2.<Global.TGlobal, Global.TGlobal>mk(arg$21180, arg$21180)
                  .call();
                  final State.TStateT<Global.TGlobal, PreludeBase.TMaybe<?>, PreludeBase.TEither<Short, QNames.TQName>> $21182 =
                  State.IMonadTrans_StateT.<
                    Global.TGlobal, PreludeBase.TEither<Short, QNames.TQName>, PreludeBase.TMaybe<?>
                  >lift(
                        Maybe.IMonad_Maybe.it,
                        Thunk.<Kind.U<PreludeBase.TMaybe<?>, PreludeBase.TEither<Short, QNames.TQName>>>shared(
                              (Lazy<Kind.U<PreludeBase.TMaybe<?>, PreludeBase.TEither<Short, QNames.TQName>>>)(() -> (Kind.U<
                                    PreludeBase.TMaybe<?>, PreludeBase.TEither<Short, QNames.TQName>
                                  >)Thunk.<PreludeBase.TMaybe<PreludeBase.TEither<Short, QNames.TQName>>>shared(
                                        (Lazy<PreludeBase.TMaybe<
                                          PreludeBase.TEither<Short, QNames.TQName>
                                        >>)(() -> Global.TGlobal.resolved(v2895$20137.mem1.call(), arg$1))
                                      ).call())
                            )
                      );
                  final Func.U<
                    Global.TGlobal,
                    Kind.U<
                      PreludeBase.TMaybe<?>, PreludeBase.TTuple2<PreludeBase.TEither<Short, QNames.TQName>, Global.TGlobal>
                    >
                  > v7734$20166 = $21182.mem$run;
                  final PreludeBase.TMaybe<
                    PreludeBase.TTuple2<PreludeBase.TEither<Short, QNames.TQName>, Global.TGlobal>
                  > $21184 = RunTM.<
                    Func.U<
                      Global.TGlobal,
                      PreludeBase.TMaybe<PreludeBase.TTuple2<PreludeBase.TEither<Short, QNames.TQName>, Global.TGlobal>>
                    >
                  >cast(v7734$20166).apply(v2895$20137.mem2).call();
                  final PreludeBase.TMaybe.DJust<
                    PreludeBase.TTuple2<PreludeBase.TEither<Short, QNames.TQName>, Global.TGlobal>
                  > $21185 = $21184.asJust();
                  if ($21185 != null) {
                    final PreludeBase.TTuple2<PreludeBase.TEither<Short, QNames.TQName>, Global.TGlobal> v2895$20198 =
                    $21185.mem1.call();
                    final State.TStateT<Global.TGlobal, PreludeBase.TMaybe<?>, QNames.TQName> $21189 =
                    State.IMonadTrans_StateT.<Global.TGlobal, QNames.TQName, PreludeBase.TMaybe<?>>lift(
                          Maybe.IMonad_Maybe.it,
                          Thunk.<Kind.U<PreludeBase.TMaybe<?>, QNames.TQName>>shared(
                                (Lazy<Kind.U<PreludeBase.TMaybe<?>, QNames.TQName>>)(() -> (Kind.U<
                                      PreludeBase.TMaybe<?>, QNames.TQName
                                    >)Thunk.<PreludeBase.TMaybe<QNames.TQName>>nested(
                                          (Lazy<Lazy<PreludeBase.TMaybe<QNames.TQName>>>)(() -> PreludeBase.<
                                                PreludeBase.TMaybe<QNames.TQName>, Short, QNames.TQName
                                              >either(
                                                    (Func.U<Short, PreludeBase.TMaybe<QNames.TQName>>)((
                                                      final Lazy<Short> η$21187
                                                    ) -> Thunk.<PreludeBase.TMaybe<QNames.TQName>>shared(
                                                              (Lazy<PreludeBase.TMaybe<
                                                                QNames.TQName
                                                              >>)(() -> PreludeBase.<
                                                                    Short, PreludeBase.TMaybe<QNames.TQName>
                                                                  >$const(
                                                                        PreludeBase.TMaybe.DNothing.<QNames.TQName>mk(), η$21187
                                                                      ))
                                                            )),
                                                    (Func.U<QNames.TQName, PreludeBase.TMaybe<QNames.TQName>>)((
                                                      final Lazy<QNames.TQName> η$21188
                                                    ) -> PreludeBase.TMaybe.DJust.<QNames.TQName>mk(
                                                              η$21188
                                                            )),
                                                    v2895$20198.mem1.call()
                                                  ))
                                        ).call())
                              )
                        );
                    final Func.U<
                      Global.TGlobal, Kind.U<PreludeBase.TMaybe<?>, PreludeBase.TTuple2<QNames.TQName, Global.TGlobal>>
                    > v7739$20171 = $21189.mem$run;
                    return Thunk.<Kind.U<PreludeBase.TMaybe<?>, PreludeBase.TTuple2<QNames.TQName, Global.TGlobal>>>shared(
                              (Lazy<Kind.U<
                                PreludeBase.TMaybe<?>, PreludeBase.TTuple2<QNames.TQName, Global.TGlobal>
                              >>)(() -> (Kind.U<
                                    PreludeBase.TMaybe<?>, PreludeBase.TTuple2<QNames.TQName, Global.TGlobal>
                                  >)Thunk.<PreludeBase.TMaybe<PreludeBase.TTuple2<QNames.TQName, Global.TGlobal>>>nested(
                                        (Lazy<Lazy<PreludeBase.TMaybe<
                                          PreludeBase.TTuple2<QNames.TQName, Global.TGlobal>
                                        >>>)(() -> RunTM.<
                                              Func.U<
                                                Global.TGlobal,
                                                PreludeBase.TMaybe<PreludeBase.TTuple2<QNames.TQName, Global.TGlobal>>
                                              >
                                            >cast(v7739$20171).apply(v2895$20198.mem2))
                                      ).call())
                            );
                  }
                  final PreludeBase.TMaybe.DNothing<
                    PreludeBase.TTuple2<PreludeBase.TEither<Short, QNames.TQName>, Global.TGlobal>
                  > $21191 = $21184.asNothing();
                  assert $21191 != null;
                  return Thunk.<Kind.U<PreludeBase.TMaybe<?>, PreludeBase.TTuple2<QNames.TQName, Global.TGlobal>>>lazy(
                            (Kind.U<
                              PreludeBase.TMaybe<?>, PreludeBase.TTuple2<QNames.TQName, Global.TGlobal>
                            >)PreludeBase.TMaybe.DNothing.<PreludeBase.TTuple2<QNames.TQName, Global.TGlobal>>mk()
                          );
                })
          );
}
final public static State.TState<Global.TGlobal, PreludeBase.TList<QNames.TQName>> sNameToQName(
  final SNames.TSName arg$1
) {
  return State.TState.<Global.TGlobal, PreludeBase.TList<QNames.TQName>>mk(
            (Func.U<Global.TGlobal, PreludeBase.TTuple2<PreludeBase.TList<QNames.TQName>, Global.TGlobal>>)((
              final Lazy<Global.TGlobal> arg$21192
            ) -> {
                  final State.TState<Global.TGlobal, PreludeBase.TList<QNames.TQName>> $21194 =
                  Resolve.resolve(
                        (Func.U<String/*<Character>*/, QNames.TQName>)((
                          final Lazy<String/*<Character>*/> η$21193
                        ) -> QNames.TQName.DVName.mk(Global.TGlobal.thisPack(arg$21192.call()), η$21193.call())),
                        Positions.TPosition.$null, arg$1
                      );
                  final Func.U<
                    Global.TGlobal, PreludeBase.TTuple2<PreludeBase.TList<QNames.TQName>, Global.TGlobal>
                  > v7688$20297 = $21194.mem$fun;
                  final PreludeBase.TTuple2<PreludeBase.TList<QNames.TQName>, Global.TGlobal> $21196 =
                  v7688$20297.apply(arg$21192).call();
                  final PreludeBase.TList<QNames.TQName> v7691$20300 = $21196.mem1.call();
                  return PreludeBase.TTuple2.<PreludeBase.TList<QNames.TQName>, Global.TGlobal>mk(
                            v7691$20300, $21196.mem2
                          );
                })
          );
}
final public static State.TState<Global.TGlobal, PreludeBase.TList<Symbols.TSymbolT<Global.TGlobal>>> resolveSymbol2(
  final Tokens.TToken arg$1
) {
  return State.TState.<Global.TGlobal, PreludeBase.TList<Symbols.TSymbolT<Global.TGlobal>>>mk(
            (Func.U<Global.TGlobal, PreludeBase.TTuple2<PreludeBase.TList<Symbols.TSymbolT<Global.TGlobal>>, Global.TGlobal>>)((
              final Lazy<Global.TGlobal> arg$21198
            ) -> {
                  final State.TState<Global.TGlobal, PreludeBase.TList<QNames.TQName>> $21199 =
                  Hover.sNameToQName(Hover.tokenToSName(arg$1));
                  final Func.U<
                    Global.TGlobal, PreludeBase.TTuple2<PreludeBase.TList<QNames.TQName>, Global.TGlobal>
                  > v7688$20449 = $21199.mem$fun;
                  final PreludeBase.TTuple2<PreludeBase.TList<QNames.TQName>, Global.TGlobal> $21201 =
                  v7688$20449.apply(arg$21198).call();
                  final State.TState<Global.TGlobal, PreludeBase.TList<Symbols.TSymbolT<Global.TGlobal>>> $21203 =
                  State.IMonad_State.<Global.TGlobal, PreludeBase.TList<Symbols.TSymbolT<Global.TGlobal>>>pure(
                        Maybe.<Symbols.TSymbolT<Global.TGlobal>, PreludeBase.TList<?>>catMaybes(
                              PreludeList.IListSource_$lbrack$rbrack.<PreludeBase.TList<?>>mk(),
                              Thunk.<Kind.U<PreludeBase.TList<?>, PreludeBase.TMaybe<Symbols.TSymbolT<Global.TGlobal>>>>shared(
                                    (Lazy<Kind.U<
                                      PreludeBase.TList<?>, PreludeBase.TMaybe<Symbols.TSymbolT<Global.TGlobal>>
                                    >>)(() -> (Kind.U<
                                          PreludeBase.TList<?>, PreludeBase.TMaybe<Symbols.TSymbolT<Global.TGlobal>>
                                        >)Thunk.<PreludeBase.TList<PreludeBase.TMaybe<Symbols.TSymbolT<Global.TGlobal>>>>shared(
                                              (Lazy<PreludeBase.TList<
                                                PreludeBase.TMaybe<Symbols.TSymbolT<Global.TGlobal>>
                                              >>)(() -> PreludeMonad.IFunctor_$lbrack$rbrack.<
                                                    QNames.TQName, PreludeBase.TMaybe<Symbols.TSymbolT<Global.TGlobal>>
                                                  >fmap(
                                                        (Func.U<
                                                          QNames.TQName, PreludeBase.TMaybe<Symbols.TSymbolT<Global.TGlobal>>
                                                        >)((final Lazy<QNames.TQName> η$21202) -> Thunk.<
                                                              PreludeBase.TMaybe<Symbols.TSymbolT<Global.TGlobal>>
                                                            >nested(
                                                                  (Lazy<Lazy<PreludeBase.TMaybe<
                                                                    Symbols.TSymbolT<Global.TGlobal>
                                                                  >>>)(() -> Global.TGlobal.find(
                                                                            arg$21198.call(), η$21202.call()
                                                                          ))
                                                                )),
                                                        $21201.mem1.call()
                                                      ))
                                            ).call())
                                  )
                            )
                      );
                  final Func.U<
                    Global.TGlobal, PreludeBase.TTuple2<PreludeBase.TList<Symbols.TSymbolT<Global.TGlobal>>, Global.TGlobal>
                  > v7693$20454 = $21203.mem$fun;
                  return Thunk.<PreludeBase.TTuple2<PreludeBase.TList<Symbols.TSymbolT<Global.TGlobal>>, Global.TGlobal>>nested(
                            (Lazy<Lazy<PreludeBase.TTuple2<
                              PreludeBase.TList<Symbols.TSymbolT<Global.TGlobal>>, Global.TGlobal
                            >>>)(() -> v7693$20454.apply($21201.mem2))
                          );
                })
          );
}
final public static PreludeBase.TList<Tokens.TToken> posToTokens(
  final PreludeBase.TList<Positions.TPosition> arg$1, final Lazy<Global.TGlobal> arg$2
) {
  final PreludeBase.TList.DCons<Positions.TPosition> $21205 = arg$1.asCons();
  if ($21205 != null) {
    final Positions.TPosition µ$$18731 = $21205.mem1.call();
    return PreludeList.IListMonoid_$lbrack$rbrack.<Tokens.TToken>$plus$plus(
              Global.tokens(µ$$18731, arg$2),
              Thunk.<PreludeBase.TList<Tokens.TToken>>shared(
                    (Lazy<PreludeBase.TList<Tokens.TToken>>)(() -> Hover.posToTokens($21205.mem2.call(), arg$2))
                  )
            );
  }
  final PreludeBase.TList.DList<Positions.TPosition> $21207 = arg$1.asList();
  assert $21207 != null;
  return PreludeBase.TList.DList.<Tokens.TToken>mk();
}
final public static <α> PreludeBase.TList<PreludeBase.TTuple2<PreludeBase.TList<String/*<Character>*/>, α>> magicPNs(
  final PreludeBase.TList<PreludeBase.TTuple2<PreludeBase.TList<String/*<Character>*/>, α>> arg$1
) {
  final PreludeBase.TList.DList<PreludeBase.TTuple2<PreludeBase.TList<String/*<Character>*/>, α>> $21208 =
  arg$1.asList();
  if ($21208 != null) {
    return PreludeBase.TList.DList.<PreludeBase.TTuple2<PreludeBase.TList<String/*<Character>*/>, α>>mk();
  }
  final PreludeBase.TList.DCons<PreludeBase.TTuple2<PreludeBase.TList<String/*<Character>*/>, α>> $21209 =
  arg$1.asCons();
  assert $21209 != null;
  final PreludeBase.TTuple2<PreludeBase.TList<String/*<Character>*/>, α> x$18409 = $21209.mem1
  .call();
  final PreludeBase.TList<String/*<Character>*/> $21211 = x$18409.mem1.call();
  final PreludeBase.TList.DCons<String/*<Character>*/> $21212 = $21211.asCons();
  if ($21212 != null) {
    final PreludeBase.TList<String/*<Character>*/> $21213 = $21212.mem2.call();
    final PreludeBase.TList.DCons<String/*<Character>*/> $21214 = $21213.asCons();
    if ($21214 != null) {
      final String/*<Character>*/ y$18411 = $21214.mem1.call();
      final String/*<Character>*/ $21216 = $21212.mem1.call();
      if ("frege".equals($21216)) {
        if (y$18411.length() > 0) {
          if (! Character.isUpperCase((char)PreludeList.IListView_StringJ.<Character>head(y$18411).call())) {
            return PreludeBase.<PreludeBase.TTuple2<PreludeBase.TList<String/*<Character>*/>, α>>$excl$colon(
                      PreludeBase.TTuple2.<PreludeBase.TList<String/*<Character>*/>, α>mk(
                            Thunk.<PreludeBase.TList<String/*<Character>*/>>shared(
                                  (Lazy<PreludeBase.TList<String/*<Character>*/>>)(() -> PreludeBase.<
                                        String/*<Character>*/
                                      >$excl$colon(
                                            Character.toString(
                                                  Character.toUpperCase(
                                                        (char)PreludeList.IListView_StringJ.<
                                                          Character
                                                        >head(y$18411).call()
                                                      )
                                                ) + PreludeList.IListView_StringJ.<Character>tail(
                                                  y$18411
                                                ).call(),
                                            $21214.mem2
                                          ))
                                ),
                            x$18409.mem2
                          ),
                      Thunk.<PreludeBase.TList<PreludeBase.TTuple2<PreludeBase.TList<String/*<Character>*/>, α>>>shared(
                            (Lazy<PreludeBase.TList<
                              PreludeBase.TTuple2<PreludeBase.TList<String/*<Character>*/>, α>
                            >>)(() -> PreludeBase.<PreludeBase.TTuple2<PreludeBase.TList<String/*<Character>*/>, α>>$excl$colon(
                                      x$18409,
                                      Thunk.<
                                        PreludeBase.TList<PreludeBase.TTuple2<PreludeBase.TList<String/*<Character>*/>, α>>
                                      >shared(
                                            (Lazy<PreludeBase.TList<
                                              PreludeBase.TTuple2<PreludeBase.TList<String/*<Character>*/>, α>
                                            >>)(() -> Hover.<α>magicPNs($21209.mem2.call()))
                                          )
                                    ))
                          )
                    );
          }
        }
      }
    }
  }
  return PreludeBase.<PreludeBase.TTuple2<PreludeBase.TList<String/*<Character>*/>, α>>$excl$colon(
            x$18409,
            Thunk.<PreludeBase.TList<PreludeBase.TTuple2<PreludeBase.TList<String/*<Character>*/>, α>>>shared(
                  (Lazy<PreludeBase.TList<PreludeBase.TTuple2<PreludeBase.TList<String/*<Character>*/>, α>>>)(() -> Hover.<
                        α
                      >magicPNs($21209.mem2.call()))
                )
          );
}
final public static <𝓐> String/*<Character>*/ label(final Lazy<Global.TGlobal> arg$1, final Symbols.TSymbolT<𝓐> arg$2) {
  final Symbols.TSymbolT.DSymA<𝓐> $21217 = arg$2.asSymA();
  if ($21217 != null) {
    final frege.compiler.types.Types.TSigmaT<QNames.TQName> µ$$18739 = $21217.mem$typ;
    final QNames.TQName µ$$18737 = $21217.mem$name;
    return QNames.TQName.base(µ$$18737) + (" = " + Nicer.INice_RhoT.<QNames.TQName>nicer(
              Nice.INice_QName.it, QNameMatcher.IQNameMatcher_QName.it,
              frege.compiler.types.Types.TSigmaT.<QNames.TQName>rho(µ$$18739),
              Global.TGlobal.chg$options(
                    arg$1.call(),
                    (Func.U<Global.TOptions, Global.TOptions>)((final Lazy<Global.TOptions> arg$21220) -> {
                          final Global.TOptions in$18496 = arg$21220.call();
                          return Thunk.<Global.TOptions>shared(
                                    (Lazy<Global.TOptions>)(() -> Global.TOptions.chg$flags(
                                              in$18496,
                                              (Func.U<Long, Long>)((final Lazy<Long> η$21222) -> Thunk.<
                                                    Long
                                                  >shared(
                                                        (Lazy<Long>)(() -> Flags.<Short>flagSet(
                                                                  Flags.IEnum_Flag.it, Flags.TFlag.SPECIAL,
                                                                  (long)η$21222.call()
                                                                ))
                                                      ))
                                            ))
                                  );
                        })
                  )
            ));
  }
  final Symbols.TSymbolT.DSymC<𝓐> $21223 = arg$2.asSymC();
  if ($21223 != null) {
    final frege.compiler.types.Types.TTauT<QNames.TQName> µ$$18746 = $21223.mem$tau;
    final QNames.TQName µ$$18745 = $21223.mem$name;
    return QNames.TQName.base(µ$$18745) + (frege.tools.doc.Utilities.symDcolon(
              arg$1.call()
            ) + frege.compiler.types.Types.IShow_KindT.<QNames.TQName>show(
              frege.compiler.types.Types.TTauT.<QNames.TQName>kind(µ$$18746)
            ));
  }
  final Symbols.TSymbolT.DSymD<𝓐> $21226 = arg$2.asSymD();
  if ($21226 != null) {
    final frege.compiler.types.Types.TSigmaT<QNames.TQName> µ$$18756 = $21226.mem$typ;
    final QNames.TQName µ$$18754 = $21226.mem$name;
    return QNames.TQName.base(µ$$18754) + (frege.tools.doc.Utilities.symDcolon(arg$1.call()) + Hover.<
          QNames.TQName
        >verbose(Nice.INice_QName.it, QNameMatcher.IQNameMatcher_QName.it, arg$1, µ$$18756));
  }
  final Symbols.TSymbolT.DSymI<𝓐> $21229 = arg$2.asSymI();
  if ($21229 != null) {
    final frege.compiler.types.Types.TSigmaT<QNames.TQName> µ$$18766 = $21229.mem$typ;
    final QNames.TQName µ$$18765 = $21229.mem$clas;
    return Nicer.INice_RhoT.<QNames.TQName>nicer(
              Nice.INice_QName.it, QNameMatcher.IQNameMatcher_QName.it,
              Types.instanceHead(µ$$18765, frege.compiler.types.Types.TSigmaT.<QNames.TQName>rho(µ$$18766)), arg$1.call()
            );
  }
  final Symbols.TSymbolT.DSymT<𝓐> $21232 = arg$2.asSymT();
  if ($21232 != null) {
    final boolean µ$$18780 = $21232.mem$pur;
    final PreludeBase.TMaybe<String/*<Character>*/> µ$$18776 = $21232.mem$nativ;
    final QNames.TQName µ$$18772 = $21232.mem$name;
    final PreludeBase.TMaybe.DJust<String/*<Character>*/> $21236 = µ$$18776.asJust();
    if ($21236 != null) {
      final String/*<Character>*/ µ$$18782 = $21236.mem1.call();
      if (µ$$18780) {
        return QNames.TQName.base(µ$$18772) + (frege.tools.doc.Utilities.symDcolon(
                  arg$1.call()
                ) + ("immutable native " + µ$$18782));
      }
      return QNames.TQName.base(µ$$18772) + (frege.tools.doc.Utilities.symDcolon(
                arg$1.call()
              ) + ("mutable native " + µ$$18782));
    }
  }
  final Symbols.TSymbolT.DSymV<𝓐> $21238 = arg$2.asSymV();
  if ($21238 != null) {
    final frege.compiler.types.Types.TSigmaT<QNames.TQName> µ$$18788 = $21238.mem$typ;
    final QNames.TQName µ$$18787 = $21238.mem$name;
    return QNames.TQName.base(µ$$18787) + (frege.tools.doc.Utilities.symDcolon(arg$1.call()) + Hover.<
          QNames.TQName
        >verbose(Nice.INice_QName.it, QNameMatcher.IQNameMatcher_QName.it, arg$1, µ$$18788));
  }
  if (Symbols.TSymbolT.<𝓐>has$kind(arg$2)) {
    return QNames.TQName.base(Symbols.TSymbolT.<𝓐>name(arg$2)) + (frege.tools.doc.Utilities.symDcolon(
              arg$1.call()
            ) + frege.compiler.types.Types.IShow_KindT.<QNames.TQName>show(Symbols.TSymbolT.<𝓐>kind(arg$2)));
  }
  return QNames.TQName.base(Symbols.TSymbolT.<𝓐>name(arg$2));
}
final public static Func.U<RealWorld, Modules.TY<Modules.TRTree<?>>> initRoot(final Lazy<String/*<Character>*/> arg$1) {
  return PreludeMonad.IMonad_ST.<RealWorld, Modules.TY<Modules.TRTree<?>>>pure(Modules.noPacks);
}
final public static PreludeBase.TMaybe<PreludeBase.TList<PreludeBase.TMaybe<String/*<Character>*/>>> match(
  final String/*<Character>*/ arg$1, final java.util.regex.Pattern arg$2
) {
  final class Let$21241  {
    final Let$21241 let$21241 = this;
    final public PreludeBase.TList<PreludeBase.TMaybe<String/*<Character>*/>> groups$18696(
      final java.util.regex.MatchResult arg$3
    ) {
      final class Let$21242  {
        final Let$21242 let$21242 = this;
        final public PreludeBase.TList<PreludeBase.TMaybe<String/*<Character>*/>> $lc1002$18698(
          final PreludeBase.TList<Integer> arg$4
        ) {
          final PreludeBase.TList.DCons<Integer> $21243 = arg$4.asCons();
          if ($21243 != null) {
            final int i$18700 = (int)$21243.mem1.call();
            return PreludeBase.<PreludeBase.TMaybe<String/*<Character>*/>>$excl$colon(
                      Regex.TMatchResult.group(arg$3, i$18700),
                      Thunk.<PreludeBase.TList<PreludeBase.TMaybe<String/*<Character>*/>>>shared(
                            (Lazy<PreludeBase.TList<PreludeBase.TMaybe<String/*<Character>*/>>>)(() -> let$21242
                                .$lc1002$18698($21243.mem2.call()))
                          )
                    );
          }
          final PreludeBase.TList.DList<Integer> $21245 = arg$4.asList();
          assert $21245 != null;
          return PreludeBase.TList.DList.<PreludeBase.TMaybe<String/*<Character>*/>>mk();
        }
      }
      final Let$21242 let$21242 = new Let$21242();
      return let$21242.$lc1002$18698(PreludeBase.IEnum_Int.enumFromTo(1, arg$3.groupCount()));
    }
  }
  final Let$21241 let$21241 = new Let$21241();
  return Maybe.IFunctor_Maybe.<java.util.regex.MatchResult, PreludeBase.TList<PreludeBase.TMaybe<String/*<Character>*/>>>fmap(
            (Func.U<java.util.regex.MatchResult, PreludeBase.TList<PreludeBase.TMaybe<String/*<Character>*/>>>)((
              final Lazy<java.util.regex.MatchResult> η$21246
            ) -> Thunk.<PreludeBase.TList<PreludeBase.TMaybe<String/*<Character>*/>>>shared(
                      (Lazy<PreludeBase.TList<PreludeBase.TMaybe<String/*<Character>*/>>>)(() -> let$21241
                          .groups$18696(η$21246.call()))
                    )),
            PreludeBase._toMaybe(frege.runtime.Regex9.findResult(arg$1, arg$2))
          );
}
final public static PreludeBase.TList<Symbols.TSymbolT<Global.TGlobal>> getSymbols(
  final Lazy<Global.TGlobal> arg$1, final Lazy<TreeMap.TTreeMap<String/*<Character>*/, Symbols.TSymbolT<Global.TGlobal>>> arg$2
) {
  final class Let$21247  {
    final Let$21247 let$21247 = this;
    final public short positionAndName$18624(
      final Symbols.TSymbolT<Global.TGlobal> arg$3, final Symbols.TSymbolT<Global.TGlobal> arg$4
    ) {
      final short $21248 = Positions.IOrd_Position.$lt$eq$gt(
            Symbols.TSymbolT.<Global.TGlobal>pos(arg$3), Symbols.TSymbolT.<Global.TGlobal>pos(arg$4)
          );
      if ($21248 == PreludeBase.TOrdering.Eq) {
        return PreludeBase.<Symbols.TSymbolT<Global.TGlobal>, String/*<Character>*/>comparing(
                  PreludeBase.IOrd_String.it,
                  (Func.U<Symbols.TSymbolT<Global.TGlobal>, String/*<Character>*/>)((
                    final Lazy<Symbols.TSymbolT<Global.TGlobal>> arg$21249
                  ) -> {
                        final Symbols.TSymbolT<Global.TGlobal> v2338$20690 = arg$21249
                        .call();
                        return Thunk.<String/*<Character>*/>shared(
                                  (Lazy<String/*<Character>*/>)(() -> QNames.TQName.base(
                                            Symbols.TSymbolT.<Global.TGlobal>name(v2338$20690)
                                          ))
                                );
                      }),
                  arg$3, arg$4
                );
      }
      return $21248;
    }
  }
  final Let$21247 let$21247 = new Let$21247();
  return List.<Symbols.TSymbolT<Global.TGlobal>, PreludeBase.TList<?>>sortBy(
            PreludeList.IListSource_$lbrack$rbrack.<PreludeBase.TList<?>>mk(),
            (Func.U<Symbols.TSymbolT<Global.TGlobal>, Func.U<Symbols.TSymbolT<Global.TGlobal>, Short>>)((
              final Lazy<Symbols.TSymbolT<Global.TGlobal>> η$21251
            ) -> (Func.U<Symbols.TSymbolT<Global.TGlobal>, Short>)((
                  final Lazy<Symbols.TSymbolT<Global.TGlobal>> η$21252
                ) -> Thunk.<Short>shared(
                          (Lazy<Short>)(() -> let$21247.positionAndName$18624(η$21251.call(), η$21252.call()))
                        ))),
            Thunk.<Kind.U<PreludeBase.TList<?>, Symbols.TSymbolT<Global.TGlobal>>>shared(
                  (Lazy<Kind.U<PreludeBase.TList<?>, Symbols.TSymbolT<Global.TGlobal>>>)(() -> (Kind.U<
                        PreludeBase.TList<?>, Symbols.TSymbolT<Global.TGlobal>
                      >)Thunk.<PreludeBase.TList<Symbols.TSymbolT<Global.TGlobal>>>shared(
                            (Lazy<PreludeBase.TList<Symbols.TSymbolT<Global.TGlobal>>>)(() -> PreludeList.<
                                  Symbols.TSymbolT<Global.TGlobal>
                                >filter(
                                      (Func.U<Symbols.TSymbolT<Global.TGlobal>, Boolean>)((
                                        final Lazy<Symbols.TSymbolT<Global.TGlobal>> η$21253
                                      ) -> Thunk.<Boolean>shared((Lazy<Boolean>)(() -> Hover.wanted(η$21253.call())))),
                                      TreeMap.<String/*<Character>*/, Symbols.TSymbolT<Global.TGlobal>>values(
                                            arg$2.call()
                                          ).call()
                                    ))
                          ).call())
                )
          );
}
final public static Lazy<String/*<Character>*/> getSymbolType(
  final Lazy<Global.TGlobal> arg$1, final Symbols.TSymbolT<Global.TGlobal> arg$2
) {
  final Symbols.TSymbolT.DSymC<Global.TGlobal> $21254 = arg$2.asSymC();
  if ($21254 != null) {
    final frege.compiler.types.Types.TTauT<QNames.TQName> µ$$18813 = $21254.mem$tau;
    return Thunk.<String/*<Character>*/>shared(
              (Lazy<String/*<Character>*/>)(() -> frege.compiler.types.Types.IShow_KindT.<
                    QNames.TQName
                  >show(frege.compiler.types.Types.TTauT.<QNames.TQName>kind(µ$$18813)))
            );
  }
  final Symbols.TSymbolT.DSymD<Global.TGlobal> $21256 = arg$2.asSymD();
  if ($21256 != null) {
    final frege.compiler.types.Types.TSigmaT<QNames.TQName> µ$$18823 = $21256.mem$typ;
    return Thunk.<String/*<Character>*/>shared(
              (Lazy<String/*<Character>*/>)(() -> Hover.<QNames.TQName>verbose(
                        Nice.INice_QName.it, QNameMatcher.IQNameMatcher_QName.it, arg$1, µ$$18823
                      ))
            );
  }
  final Symbols.TSymbolT.DSymI<Global.TGlobal> $21258 = arg$2.asSymI();
  if ($21258 != null) {
    final frege.compiler.types.Types.TSigmaT<QNames.TQName> µ$$18833 = $21258.mem$typ;
    return Thunk.<String/*<Character>*/>shared(
              (Lazy<String/*<Character>*/>)(() -> Hover.<QNames.TQName>verbose(
                        Nice.INice_QName.it, QNameMatcher.IQNameMatcher_QName.it, arg$1, µ$$18833
                      ))
            );
  }
  final Symbols.TSymbolT.DSymL<Global.TGlobal> $21260 = arg$2.asSymL();
  if ($21260 != null) {
    final QNames.TQName µ$$18839 = $21260.mem$alias;
    return PreludeBase.<String/*<Character>*/, Symbols.TSymbolT<Global.TGlobal>>maybe(
              Thunk.<String/*<Character>*/>lazy(""),
              (Func.U<Symbols.TSymbolT<Global.TGlobal>, String/*<Character>*/>)((
                final Lazy<Symbols.TSymbolT<Global.TGlobal>> η$21262
              ) -> Thunk.<String/*<Character>*/>nested(
                        (Lazy<Lazy<String/*<Character>*/>>)(() -> Hover.getSymbolType(
                                  arg$1, η$21262.call()
                                ))
                      )),
              Global.TGlobal.find(arg$1.call(), µ$$18839).call()
            );
  }
  final Symbols.TSymbolT.DSymT<Global.TGlobal> $21263 = arg$2.asSymT();
  if ($21263 != null) {
    final boolean µ$$18852 = $21263.mem$pur;
    final PreludeBase.TMaybe<String/*<Character>*/> µ$$18848 = $21263.mem$nativ;
    final PreludeBase.TMaybe.DJust<String/*<Character>*/> $21266 = µ$$18848.asJust();
    if ($21266 != null) {
      final String/*<Character>*/ µ$$18854 = $21266.mem1.call();
      if (µ$$18852) {
        return Thunk.<String/*<Character>*/>shared((Lazy<String/*<Character>*/>)(() -> "immutable native " + µ$$18854));
      }
      return Thunk.<String/*<Character>*/>shared((Lazy<String/*<Character>*/>)(() -> "mutable native " + µ$$18854));
    }
  }
  final Symbols.TSymbolT.DSymV<Global.TGlobal> $21268 = arg$2.asSymV();
  if ($21268 != null) {
    final frege.compiler.types.Types.TSigmaT<QNames.TQName> µ$$18860 = $21268.mem$typ;
    return Thunk.<String/*<Character>*/>shared(
              (Lazy<String/*<Character>*/>)(() -> Hover.<QNames.TQName>verbose(
                        Nice.INice_QName.it, QNameMatcher.IQNameMatcher_QName.it, arg$1, µ$$18860
                      ))
            );
  }
  if (Symbols.TSymbolT.<Global.TGlobal>has$kind(arg$2)) {
    return Thunk.<String/*<Character>*/>shared(
              (Lazy<String/*<Character>*/>)(() -> frege.compiler.types.Types.IShow_KindT.<
                    QNames.TQName
                  >show(Symbols.TSymbolT.<Global.TGlobal>kind(arg$2)))
            );
  }
  return Thunk.<String/*<Character>*/>lazy("");
}
final public static Lazy<String/*<Character>*/> signature(final Lazy<Global.TGlobal> arg$1, final Tokens.TToken arg$2) {
  final short µ$$18724 = arg$2.mem$tokid;
  if (µ$$18724 == TokenID.TTokenID.VARID) {
    final PreludeBase.TList<Symbols.TSymbolT<Global.TGlobal>> allSymbols$18508 = PreludeList.IListMonoid_$lbrack$rbrack.<
      Symbols.TSymbolT<Global.TGlobal>
    >$plus$plus(
          Utilities.allourvars(arg$1).call(),
          Thunk.<PreludeBase.TList<Symbols.TSymbolT<Global.TGlobal>>>nested(
                (Lazy<Lazy<PreludeBase.TList<Symbols.TSymbolT<Global.TGlobal>>>>)(() -> TreeMap.<
                      Integer, Symbols.TSymbolT<Global.TGlobal>
                    >values(Global.TGlobal.locals(arg$1.call())))
              )
        );
    final Lazy<PreludeBase.TList<Symbols.TSymbolT<Global.TGlobal>>> gen$3989$18509 = Thunk.<
      PreludeBase.TList<Symbols.TSymbolT<Global.TGlobal>>
    >shared(
          (Lazy<PreludeBase.TList<Symbols.TSymbolT<Global.TGlobal>>>)(() -> {
                final class Let$21272  {
                  final Let$21272 let$21272 = this;
                  final public PreludeBase.TList<Symbols.TSymbolT<Global.TGlobal>> $lc999$18512(
                    PreludeBase.TList<Symbols.TSymbolT<Global.TGlobal>> arg$3
                  ) {
                    tailrecursion: while (true) {
                      final PreludeBase.TList<Symbols.TSymbolT<Global.TGlobal>> arg$3f =
                      arg$3;
                      final PreludeBase.TList.DCons<Symbols.TSymbolT<Global.TGlobal>> $21273 =
                      arg$3f.asCons();
                      if ($21273 != null) {
                        final Symbols.TSymbolT<Global.TGlobal> s$18514 = $21273.mem1.call();
                        final Symbols.TSymbolT.DSymV<Global.TGlobal> $21275 = s$18514
                        .asSymV();
                        if ($21275 != null) {
                          final PreludeBase.TMaybe<State.TState<Global.TGlobal, Expression.TExprT>> $21276 =
                          $21275.mem$expr;
                          final PreludeBase.TMaybe.DJust<State.TState<Global.TGlobal, Expression.TExprT>> $21277 =
                          $21276.asJust();
                          if ($21277 != null) {
                            if (
                              (boolean)Prelude.traceLn(
                                    "signature value for: " + frege.runtime.Runtime.quoteStr(
                                          QNames.TQName.base(Symbols.TSymbolT.<Global.TGlobal>name(s$18514))
                                        )
                                  ).call() || true
                            ) {
                              if (
                                Tokens.TToken.offset(
                                      Positions.TPosition.first(Symbols.TSymbolT.<Global.TGlobal>pos(s$18514))
                                    ) == arg$2.mem$offset
                              ) {
                                return PreludeBase.<Symbols.TSymbolT<Global.TGlobal>>$excl$colon(
                                          s$18514,
                                          Thunk.<PreludeBase.TList<Symbols.TSymbolT<Global.TGlobal>>>shared(
                                                (Lazy<PreludeBase.TList<Symbols.TSymbolT<Global.TGlobal>>>)(() -> let$21272
                                                    .$lc999$18512($21273.mem2.call()))
                                              )
                                        );
                              }
                              else {
                                arg$3 = $21273.mem2.call();
                                continue tailrecursion;
                              }
                            }
                            else {
                              arg$3 = $21273.mem2.call();
                              continue tailrecursion;
                            }
                          }
                        }
                      }
                      final PreludeBase.TList.DList<Symbols.TSymbolT<Global.TGlobal>> $21278 =
                      arg$3f.asList();
                      if ($21278 != null) {
                        return PreludeBase.TList.DList.<Symbols.TSymbolT<Global.TGlobal>>mk();
                      }
                      final PreludeBase.TList.DCons<Symbols.TSymbolT<Global.TGlobal>> $21279 =
                      arg$3f.asCons();
                      assert $21279 != null;
                      final PreludeBase.TList<Symbols.TSymbolT<Global.TGlobal>> $xs1000$18536 =
                      $21279.mem2.call();
                      arg$3 = $xs1000$18536;
                      continue tailrecursion;
                    }
                  }
                }
                final Let$21272 let$21272 = new Let$21272();
                return let$21272.$lc999$18512(allSymbols$18508);
              })
        );
    final Lazy<Symbols.TSymbolT<Global.TGlobal>> sym$18510 = Thunk.<Symbols.TSymbolT<Global.TGlobal>>shared(
          (Lazy<Symbols.TSymbolT<Global.TGlobal>>)(() -> {
                final PreludeBase.TList<Symbols.TSymbolT<Global.TGlobal>> $21281 = gen$3989$18509
                .call();
                final PreludeBase.TList.DCons<Symbols.TSymbolT<Global.TGlobal>> $21282 =
                $21281.asCons();
                if ($21282 != null) {
                  final Symbols.TSymbolT<Global.TGlobal> sym$18537 = $21282.mem1.call();
                  return sym$18537;
                }
                throw new frege.runtime.NoMatch("signature", 105, $21281);
              })
        );
    return Hover.getSymbolType(arg$1, sym$18510.call());
  }
  return Thunk.<String/*<Character>*/>lazy("");
}
final public static Lazy<Func.U<RealWorld, Short>> $main = Thunk.<Func.U<RealWorld, Short>>shared(
      (Lazy<Func.U<RealWorld, Short>>)(() -> {
            return (Func.U<RealWorld, Short>)((final Lazy<RealWorld> arg$21284) -> {
                      final Global.TGlobal v2056$20498 = CompilerHelper.lspGlobal.call()
                      .apply(arg$21284).call();
                      final Func.U<RealWorld, Global.TGlobal> v2053$20517 = Func.<RealWorld, Global.TGlobal>coerceU(
                            State.<Global.TGlobal, Func.U<RealWorld, ?>, Global.TGlobal>execStateT(
                                  PreludeMonad.IMonad_ST.<RealWorld>mk(),
                                  Thunk.<State.TStateT<Global.TGlobal, Func.U<RealWorld, ?>, Global.TGlobal>>shared(
                                        (Lazy<State.TStateT<
                                          Global.TGlobal, Func.U<RealWorld, ?>, Global.TGlobal
                                        >>)(() -> CompilerHelper.compileFregeFile(
                                                  Thunk.<String/*<Character>*/>shared(
                                                        (Lazy<String/*
                                                          <Character>
                                                        */>)(() -> "module HoverTest where\n\n" + ("import frege.compiler.Main(runpass)\n\n" + ("pass = runpass\n" + ("me = 42\n\n" + "main = do\n  a = \"Hello\"\n  println a"))))
                                                      )
                                                ))
                                      ),
                                  v2056$20498
                                )
                          );
                      final Global.TGlobal v2056$20520 = v2053$20517.apply(arg$21284)
                      .call();
                      final Lazy<PreludeBase.TList<Tokens.TToken>> tokens$18709 = Thunk.<
                        PreludeBase.TList<Tokens.TToken>
                      >shared(
                            (Lazy<PreludeBase.TList<Tokens.TToken>>)(() -> Tokens.IArrayElement_Token.listFromArray(
                                      Global.TSubSt.toks(Global.TGlobal.sub(v2056$20520))
                                    ))
                          );
                      final Func.U<RealWorld, Short> v4793$20542 = Prelude.<String/*<Character>*/>println(
                            PreludeText.IShow_String.it, Global.TSubSt.code(Global.TGlobal.sub(v2056$20520)).toString()
                          );
                      final short v4796$20544 = (short)v4793$20542.apply(arg$21284).call();
                      final Func.U<RealWorld, Short> v4797$20545 = ((Func.U<RealWorld, Short>)((
                        final Lazy<RealWorld> arg$21312
                      ) -> {
                            final short v4796$20575 = (short)Func.<RealWorld, Short>coerceU(
                                  PreludeMonad.<Func.U<RealWorld, ?>, Tokens.TToken, Short, PreludeBase.TList<?>>$for(
                                        PreludeMonad.IMonad_ST.<RealWorld>mk(),
                                        PreludeList.IListSource_$lbrack$rbrack.<PreludeBase.TList<?>>mk(),
                                        Thunk.<Kind.U<PreludeBase.TList<?>, Tokens.TToken>>shared(
                                              (Lazy<Kind.U<PreludeBase.TList<?>, Tokens.TToken>>)(() -> (Kind.U<
                                                    PreludeBase.TList<?>, Tokens.TToken
                                                  >)tokens$18709.call())
                                            ),
                                        (Func.U<Tokens.TToken, Kind.U<Func.U<RealWorld, ?>, Short>>)((
                                          final Lazy<Tokens.TToken> η$21311
                                        ) -> Thunk.<Kind.U<Func.U<RealWorld, ?>, Short>>shared(
                                                  (Lazy<Kind.U<Func.U<RealWorld, ?>, Short>>)(() -> (Kind.U<
                                                        Func.U<RealWorld, ?>, Short
                                                      >)Thunk.<Func.U<RealWorld, Short>>shared(
                                                            (Lazy<Func.U<RealWorld, Short>>)(() -> Prelude.<
                                                                  Tokens.TToken
                                                                >println(Tokens.IShow_Token.it, η$21311.call()))
                                                          ).call())
                                                ))
                                      )
                                ).apply(arg$21312).call();
                            final Func.U<RealWorld, Short> v4797$20576 = ((Func.U<RealWorld, Short>)((
                              final Lazy<RealWorld> arg$21308
                            ) -> {
                                  final short v4796$20599 = (short)Prelude.<String/*<Character>*/>println(
                                        PreludeText.IShow_String.it, "finished"
                                      ).apply(arg$21308).call();
                                  final Func.U<RealWorld, Short> v4797$20600 = ((Func.U<
                                    RealWorld, Short
                                  >)((final Lazy<RealWorld> arg$21288) -> {
                                        final Modules.TY<Modules.TRTree<?>> v2056$20621 =
                                        Hover.initRoot(
                                              Thunk.<String/*<Character>*/>lazy(
                                                    "/Users/tricktron/github/master/frege-lsp-server/src/main/resources/HoverTest.fr"
                                                  )
                                            ).apply(arg$21288).call();
                                        final Lazy<Func.U<RealWorld, Short>> tmp$20684 =
                                        Thunk.<Func.U<RealWorld, Short>>shared(
                                              (Lazy<Func.U<RealWorld, Short>>)(() -> {
                                                    final PreludeBase.TMaybe<PreludeBase.TEither<Short, QNames.TQName>> $21290 =
                                                    Global.TGlobal.resolved(
                                                          v2056$20520,
                                                          Thunk.<Tokens.TToken>shared(
                                                                (Lazy<Tokens.TToken>)(() -> PreludeList.<
                                                                      Tokens.TToken
                                                                    >$excl$excl(tokens$18709.call(), 1))
                                                              )
                                                        );
                                                    final PreludeBase.TMaybe.DNothing<
                                                      PreludeBase.TEither<Short, QNames.TQName>
                                                    > $21291 = $21290.asNothing();
                                                    if ($21291 != null) {
                                                      return Prelude.<String/*<Character>*/>println(
                                                                PreludeText.IShow_String.it, "symbol not found"
                                                              );
                                                    }
                                                    final PreludeBase.TMaybe.DJust<
                                                      PreludeBase.TEither<Short, QNames.TQName>
                                                    > $21292 = $21290.asJust();
                                                    if ($21292 != null) {
                                                      final PreludeBase.TEither<Short, QNames.TQName> $21293 =
                                                      $21292.mem1.call();
                                                      final PreludeBase.TEither.DLeft<
                                                        Short, QNames.TQName
                                                      > $21294 = $21293.asLeft();
                                                      if ($21294 != null) {
                                                        return Prelude.<String/*<Character>*/>println(
                                                                  PreludeText.IShow_String.it, "no qname found"
                                                                );
                                                      }
                                                    }
                                                    final PreludeBase.TMaybe.DJust<
                                                      PreludeBase.TEither<Short, QNames.TQName>
                                                    > $21295 = $21290.asJust();
                                                    assert $21295 != null;
                                                    final PreludeBase.TEither<Short, QNames.TQName> $21296 =
                                                    $21295.mem1.call();
                                                    final PreludeBase.TEither.DRight<Short, QNames.TQName> $21297 =
                                                    $21296.asRight();
                                                    assert $21297 != null;
                                                    final Lazy<Func.U<RealWorld, Short>> tmp$20683 =
                                                    Thunk.<Func.U<RealWorld, Short>>shared(
                                                          (Lazy<Func.U<RealWorld, Short>>)(() -> {
                                                                final PreludeBase.TMaybe<
                                                                  Symbols.TSymbolT<Global.TGlobal>
                                                                > $21298 = Global.TGlobal.findit(
                                                                      v2056$20520, $21297.mem1.call()
                                                                    ).call();
                                                                final PreludeBase.TMaybe.DNothing<
                                                                  Symbols.TSymbolT<Global.TGlobal>
                                                                > $21299 = $21298.asNothing();
                                                                if ($21299 != null) {
                                                                  return Prelude.<String/*<Character>*/>println(
                                                                            PreludeText.IShow_String.it, "qname not found"
                                                                          );
                                                                }
                                                                final PreludeBase.TMaybe.DJust<
                                                                  Symbols.TSymbolT<Global.TGlobal>
                                                                > $21300 = $21298.asJust();
                                                                assert $21300 != null;
                                                                final Symbols.TSymbolT<
                                                                  Global.TGlobal
                                                                > sym$18715 = $21300.mem1
                                                                .call();
                                                                return Prelude.<String/*<Character>*/>println(
                                                                          PreludeText.IShow_String.it,
                                                                          Hover.getSymbolType(
                                                                                v2056$20520, sym$18715
                                                                              ).call()
                                                                        );
                                                              })
                                                        );
                                                    return (Func.U<RealWorld, Short>)((
                                                          final Lazy<RealWorld> arg$21302
                                                        ) -> {
                                                              final short v4796$20669 =
                                                              (short)Prelude.<String/*<Character>*/>println(
                                                                    PreludeText.IShow_String.it, "symbol found"
                                                                  ).apply(arg$21302).call();
                                                              final Func.U<RealWorld, Short> v4797$20670 =
                                                              tmp$20683.call();
                                                              return Thunk.<Short>nested(
                                                                        (Lazy<Lazy<Short>>)(() -> v4797$20670
                                                                            .apply(arg$21302))
                                                                      );
                                                            });
                                                  })
                                            );
                                        final Func.U<RealWorld, Short> v4793$20643 = tmp$20684
                                        .call();
                                        final short v4796$20645 = (short)v4793$20643.apply(
                                              arg$21288
                                            ).call();
                                        final Func.U<RealWorld, Short> v4797$20646 = Thunk.<
                                          Func.U<RealWorld, Short>
                                        >shared(
                                              (Lazy<Func.U<RealWorld, Short>>)(() -> Prelude.<
                                                    String/*<Character>*/
                                                  >println(PreludeText.IShow_String.it, "end"))
                                            ).call();
                                        return Thunk.<Short>nested((Lazy<Lazy<Short>>)(() -> v4797$20646.apply(arg$21288)));
                                      })).call();
                                  return Thunk.<Short>nested((Lazy<Lazy<Short>>)(() -> v4797$20600.apply(arg$21308)));
                                })).call();
                            return Thunk.<Short>nested((Lazy<Lazy<Short>>)(() -> v4797$20576.apply(arg$21312)));
                          })).call();
                      return Thunk.<Short>nested((Lazy<Lazy<Short>>)(() -> v4797$20545.apply(arg$21284)));
                    });
          })
    );
final public static State.TStateT<Global.TGlobal, PreludeBase.TMaybe<?>, String/*<Character>*/> getSymbolType2(
  final Lazy<Symbols.TSymbolT<Global.TGlobal>> arg$1
) {
  return State.TStateT.<Global.TGlobal, PreludeBase.TMaybe<?>, String/*<Character>*/>mk(
            (Func.U<
              Global.TGlobal, Kind.U<PreludeBase.TMaybe<?>, PreludeBase.TTuple2<String/*<Character>*/, Global.TGlobal>>
            >)((final Lazy<Global.TGlobal> arg$21318) -> {
                  final PreludeBase.TTuple2<Global.TGlobal, Global.TGlobal> v2895$20766 =
                  PreludeBase.TTuple2.<Global.TGlobal, Global.TGlobal>mk(arg$21318, arg$21318)
                  .call();
                  final State.TStateT<Global.TGlobal, PreludeBase.TMaybe<?>, String/*<Character>*/> $21320 =
                  State.IMonad_StateT.<Global.TGlobal, PreludeBase.TMaybe<?>, String/*<Character>*/>pure(
                        Maybe.IMonad_Maybe.it, Hover.getSymbolType(v2895$20766.mem1, arg$1.call()).call()
                      );
                  final Func.U<
                    Global.TGlobal, Kind.U<PreludeBase.TMaybe<?>, PreludeBase.TTuple2<String/*<Character>*/, Global.TGlobal>>
                  > v7739$20739 = $21320.mem$run;
                  return Thunk.<
                        Kind.U<PreludeBase.TMaybe<?>, PreludeBase.TTuple2<String/*<Character>*/, Global.TGlobal>>
                      >shared(
                            (Lazy<Kind.U<
                              PreludeBase.TMaybe<?>, PreludeBase.TTuple2<String/*<Character>*/, Global.TGlobal>
                            >>)(() -> (Kind.U<
                                  PreludeBase.TMaybe<?>, PreludeBase.TTuple2<String/*<Character>*/, Global.TGlobal>
                                >)Thunk.<PreludeBase.TMaybe<PreludeBase.TTuple2<String/*<Character>*/, Global.TGlobal>>>nested(
                                      (Lazy<Lazy<PreludeBase.TMaybe<
                                        PreludeBase.TTuple2<String/*<Character>*/, Global.TGlobal>
                                      >>>)(() -> RunTM.<
                                            Func.U<
                                              Global.TGlobal,
                                              PreludeBase.TMaybe<PreludeBase.TTuple2<String/*<Character>*/, Global.TGlobal>>
                                            >
                                          >cast(v7739$20739).apply(v2895$20766.mem2))
                                    ).call())
                          );
                })
          );
}
final public static <α, β, γ> State.TState<Global.TGlobal, QNames.TQName> findVariableName(
  final Lazy<α> arg$1, final Lazy<β> arg$2, final Lazy<γ> arg$3, final Lazy<Func.U<String/*<Character>*/, QNames.TQName>> arg$4,
  final Lazy<Positions.TPosition> arg$5, final SNames.TSName arg$6
) {
  return Resolve.resolveVName(arg$4, arg$5, arg$6);
}
final public static State.TStateT<Global.TGlobal, PreludeBase.TMaybe<?>, Tokens.TToken> findToken(
  final Lazy<Diagnostic.TPosition> arg$1
) {
  final class Let$21322  {
    final Let$21322 let$21322 = this;
    final public boolean isHoverOverToken$18636(final Tokens.TToken arg$2) {
      return (Diagnostic.TPosition.line(arg$1.call()) == Tokens.TToken.line(arg$2)) && ((Diagnostic.TPosition.character(
                arg$1.call()
              ) < (Tokens.TToken.col(arg$2) + Tokens.TToken.value(arg$2).length())) && (Diagnostic.TPosition.character(
                arg$1.call()
              ) >= Tokens.TToken.col(arg$2)));
    }
  }
  final Let$21322 let$21322 = new Let$21322();
  return State.TStateT.<Global.TGlobal, PreludeBase.TMaybe<?>, Tokens.TToken>mk(
            (Func.U<Global.TGlobal, Kind.U<PreludeBase.TMaybe<?>, PreludeBase.TTuple2<Tokens.TToken, Global.TGlobal>>>)((
              final Lazy<Global.TGlobal> arg$21323
            ) -> {
                  final PreludeBase.TTuple2<Global.TGlobal, Global.TGlobal> v2895$21095 =
                  PreludeBase.TTuple2.<Global.TGlobal, Global.TGlobal>mk(arg$21323, arg$21323)
                  .call();
                  final State.TStateT<Global.TGlobal, PreludeBase.TMaybe<?>, Tokens.TToken> $21326 =
                  State.IMonadTrans_StateT.<Global.TGlobal, Tokens.TToken, PreludeBase.TMaybe<?>>lift(
                        Maybe.IMonad_Maybe.it,
                        Thunk.<Kind.U<PreludeBase.TMaybe<?>, Tokens.TToken>>shared(
                              (Lazy<Kind.U<PreludeBase.TMaybe<?>, Tokens.TToken>>)(() -> (Kind.U<
                                    PreludeBase.TMaybe<?>, Tokens.TToken
                                  >)Thunk.<PreludeBase.TMaybe<Tokens.TToken>>shared(
                                        (Lazy<PreludeBase.TMaybe<Tokens.TToken>>)(() -> List.<
                                              Tokens.TToken
                                            >find(
                                                  (Func.U<Tokens.TToken, Boolean>)((
                                                    final Lazy<Tokens.TToken> η$21325
                                                  ) -> Thunk.<Boolean>shared(
                                                            (Lazy<Boolean>)(() -> let$21322
                                                                .isHoverOverToken$18636(
                                                                      η$21325.call()
                                                                    ))
                                                          )),
                                                  Thunk.<PreludeBase.TList<Tokens.TToken>>shared(
                                                        (Lazy<PreludeBase.TList<
                                                          Tokens.TToken
                                                        >>)(() -> Tokens.IArrayElement_Token.listFromArray(
                                                                  Global.TSubSt.toks(
                                                                        Global.TGlobal.sub(
                                                                              v2895$21095.mem1
                                                                              .call()
                                                                            )
                                                                      )
                                                                ))
                                                      )
                                                ))
                                      ).call())
                            )
                      );
                  final Func.U<
                    Global.TGlobal, Kind.U<PreludeBase.TMaybe<?>, PreludeBase.TTuple2<Tokens.TToken, Global.TGlobal>>
                  > v7739$21068 = $21326.mem$run;
                  return Thunk.<Kind.U<PreludeBase.TMaybe<?>, PreludeBase.TTuple2<Tokens.TToken, Global.TGlobal>>>shared(
                            (Lazy<Kind.U<
                              PreludeBase.TMaybe<?>, PreludeBase.TTuple2<Tokens.TToken, Global.TGlobal>
                            >>)(() -> (Kind.U<PreludeBase.TMaybe<?>, PreludeBase.TTuple2<Tokens.TToken, Global.TGlobal>>)Thunk.<
                                  PreludeBase.TMaybe<PreludeBase.TTuple2<Tokens.TToken, Global.TGlobal>>
                                >nested(
                                      (Lazy<Lazy<PreludeBase.TMaybe<
                                        PreludeBase.TTuple2<Tokens.TToken, Global.TGlobal>
                                      >>>)(() -> RunTM.<
                                            Func.U<
                                              Global.TGlobal,
                                              PreludeBase.TMaybe<PreludeBase.TTuple2<Tokens.TToken, Global.TGlobal>>
                                            >
                                          >cast(v7739$21068).apply(v2895$21095.mem2))
                                    ).call())
                          );
                })
          );
}
final public static State.TStateT<Global.TGlobal, PreludeBase.TMaybe<?>, Symbols.TSymbolT<Global.TGlobal>> findSymbol(
  final Lazy<QNames.TQName> arg$1
) {
  return State.TStateT.<Global.TGlobal, PreludeBase.TMaybe<?>, Symbols.TSymbolT<Global.TGlobal>>mk(
            (Func.U<
              Global.TGlobal,
              Kind.U<PreludeBase.TMaybe<?>, PreludeBase.TTuple2<Symbols.TSymbolT<Global.TGlobal>, Global.TGlobal>>
            >)((final Lazy<Global.TGlobal> arg$21328) -> {
                  final PreludeBase.TTuple2<Global.TGlobal, Global.TGlobal> v2895$21027 =
                  PreludeBase.TTuple2.<Global.TGlobal, Global.TGlobal>mk(arg$21328, arg$21328)
                  .call();
                  final State.TStateT<Global.TGlobal, PreludeBase.TMaybe<?>, Symbols.TSymbolT<Global.TGlobal>> $21330 =
                  State.IMonadTrans_StateT.<Global.TGlobal, Symbols.TSymbolT<Global.TGlobal>, PreludeBase.TMaybe<?>>lift(
                        Maybe.IMonad_Maybe.it,
                        Thunk.<Kind.U<PreludeBase.TMaybe<?>, Symbols.TSymbolT<Global.TGlobal>>>shared(
                              (Lazy<Kind.U<PreludeBase.TMaybe<?>, Symbols.TSymbolT<Global.TGlobal>>>)(() -> (Kind.U<
                                    PreludeBase.TMaybe<?>, Symbols.TSymbolT<Global.TGlobal>
                                  >)Thunk.<PreludeBase.TMaybe<Symbols.TSymbolT<Global.TGlobal>>>nested(
                                        (Lazy<Lazy<PreludeBase.TMaybe<
                                          Symbols.TSymbolT<Global.TGlobal>
                                        >>>)(() -> Global.TGlobal.find(v2895$21027.mem1.call(), arg$1.call()))
                                      ).call())
                            )
                      );
                  final Func.U<
                    Global.TGlobal,
                    Kind.U<PreludeBase.TMaybe<?>, PreludeBase.TTuple2<Symbols.TSymbolT<Global.TGlobal>, Global.TGlobal>>
                  > v7739$21000 = $21330.mem$run;
                  return Thunk.<
                        Kind.U<PreludeBase.TMaybe<?>, PreludeBase.TTuple2<Symbols.TSymbolT<Global.TGlobal>, Global.TGlobal>>
                      >shared(
                            (Lazy<Kind.U<
                              PreludeBase.TMaybe<?>, PreludeBase.TTuple2<Symbols.TSymbolT<Global.TGlobal>, Global.TGlobal>
                            >>)(() -> (Kind.U<
                                  PreludeBase.TMaybe<?>, PreludeBase.TTuple2<Symbols.TSymbolT<Global.TGlobal>, Global.TGlobal>
                                >)Thunk.<
                                  PreludeBase.TMaybe<PreludeBase.TTuple2<Symbols.TSymbolT<Global.TGlobal>, Global.TGlobal>>
                                >nested(
                                      (Lazy<Lazy<PreludeBase.TMaybe<
                                        PreludeBase.TTuple2<Symbols.TSymbolT<Global.TGlobal>, Global.TGlobal>
                                      >>>)(() -> RunTM.<
                                            Func.U<
                                              Global.TGlobal,
                                              PreludeBase.TMaybe<
                                                PreludeBase.TTuple2<Symbols.TSymbolT<Global.TGlobal>, Global.TGlobal>
                                              >
                                            >
                                          >cast(v7739$21000).apply(v2895$21027.mem2))
                                    ).call())
                          );
                })
          );
}
final public static State.TStateT<Global.TGlobal, PreludeBase.TMaybe<?>, String/*<Character>*/> getTypeOnHover(
  final Lazy<Diagnostic.TPosition> arg$1
) {
  return State.TStateT.<Global.TGlobal, PreludeBase.TMaybe<?>, String/*<Character>*/>mk(
            (Func.U<
              Global.TGlobal, Kind.U<PreludeBase.TMaybe<?>, PreludeBase.TTuple2<String/*<Character>*/, Global.TGlobal>>
            >)((final Lazy<Global.TGlobal> arg$21332) -> {
                  final PreludeBase.TTuple2<Global.TGlobal, Global.TGlobal> v2895$20834 =
                  PreludeBase.TTuple2.<Global.TGlobal, Global.TGlobal>mk(arg$21332, arg$21332)
                  .call();
                  final State.TStateT<Global.TGlobal, PreludeBase.TMaybe<?>, Tokens.TToken> $21334 =
                  Hover.findToken(arg$1);
                  final Func.U<
                    Global.TGlobal, Kind.U<PreludeBase.TMaybe<?>, PreludeBase.TTuple2<Tokens.TToken, Global.TGlobal>>
                  > v7734$20863 = $21334.mem$run;
                  final PreludeBase.TMaybe<PreludeBase.TTuple2<Tokens.TToken, Global.TGlobal>> $21336 =
                  RunTM.<Func.U<Global.TGlobal, PreludeBase.TMaybe<PreludeBase.TTuple2<Tokens.TToken, Global.TGlobal>>>>cast(
                        v7734$20863
                      ).apply(v2895$20834.mem2).call();
                  final PreludeBase.TMaybe.DJust<PreludeBase.TTuple2<Tokens.TToken, Global.TGlobal>> $21337 =
                  $21336.asJust();
                  if ($21337 != null) {
                    final PreludeBase.TTuple2<Tokens.TToken, Global.TGlobal> v2895$20895 =
                    $21337.mem1.call();
                    final State.TStateT<Global.TGlobal, PreludeBase.TMaybe<?>, QNames.TQName> $21339 =
                    Hover.tokenToQName(v2895$20895.mem1);
                    final Func.U<
                      Global.TGlobal, Kind.U<PreludeBase.TMaybe<?>, PreludeBase.TTuple2<QNames.TQName, Global.TGlobal>>
                    > v7734$20907 = $21339.mem$run;
                    final PreludeBase.TMaybe<PreludeBase.TTuple2<QNames.TQName, Global.TGlobal>> $21341 =
                    RunTM.<Func.U<Global.TGlobal, PreludeBase.TMaybe<PreludeBase.TTuple2<QNames.TQName, Global.TGlobal>>>>cast(
                          v7734$20907
                        ).apply(v2895$20895.mem2).call();
                    final PreludeBase.TMaybe.DJust<PreludeBase.TTuple2<QNames.TQName, Global.TGlobal>> $21342 =
                    $21341.asJust();
                    if ($21342 != null) {
                      final PreludeBase.TTuple2<QNames.TQName, Global.TGlobal> v2895$20939 =
                      $21342.mem1.call();
                      final State.TStateT<Global.TGlobal, PreludeBase.TMaybe<?>, Symbols.TSymbolT<Global.TGlobal>> $21344 =
                      Hover.findSymbol(v2895$20939.mem1);
                      final Func.U<
                        Global.TGlobal,
                        Kind.U<PreludeBase.TMaybe<?>, PreludeBase.TTuple2<Symbols.TSymbolT<Global.TGlobal>, Global.TGlobal>>
                      > v7734$20951 = $21344.mem$run;
                      final PreludeBase.TMaybe<PreludeBase.TTuple2<Symbols.TSymbolT<Global.TGlobal>, Global.TGlobal>> $21346 =
                      RunTM.<
                        Func.U<
                          Global.TGlobal,
                          PreludeBase.TMaybe<PreludeBase.TTuple2<Symbols.TSymbolT<Global.TGlobal>, Global.TGlobal>>
                        >
                      >cast(v7734$20951).apply(v2895$20939.mem2).call();
                      final PreludeBase.TMaybe.DJust<
                        PreludeBase.TTuple2<Symbols.TSymbolT<Global.TGlobal>, Global.TGlobal>
                      > $21347 = $21346.asJust();
                      if ($21347 != null) {
                        final PreludeBase.TTuple2<Symbols.TSymbolT<Global.TGlobal>, Global.TGlobal> v2895$20983 =
                        $21347.mem1.call();
                        final State.TStateT<Global.TGlobal, PreludeBase.TMaybe<?>, String/*<Character>*/> $21349 =
                        Hover.getSymbolType2(v2895$20983.mem1);
                        final Func.U<
                          Global.TGlobal,
                          Kind.U<PreludeBase.TMaybe<?>, PreludeBase.TTuple2<String/*<Character>*/, Global.TGlobal>>
                        > v7739$20956 = $21349.mem$run;
                        return Thunk.<
                              Kind.U<PreludeBase.TMaybe<?>, PreludeBase.TTuple2<String/*<Character>*/, Global.TGlobal>>
                            >shared(
                                  (Lazy<Kind.U<
                                    PreludeBase.TMaybe<?>, PreludeBase.TTuple2<String/*<Character>*/, Global.TGlobal>
                                  >>)(() -> (Kind.U<
                                        PreludeBase.TMaybe<?>, PreludeBase.TTuple2<String/*<Character>*/, Global.TGlobal>
                                      >)Thunk.<
                                        PreludeBase.TMaybe<PreludeBase.TTuple2<String/*<Character>*/, Global.TGlobal>>
                                      >nested(
                                            (Lazy<Lazy<PreludeBase.TMaybe<
                                              PreludeBase.TTuple2<String/*<Character>*/, Global.TGlobal>
                                            >>>)(() -> RunTM.<
                                                  Func.U<
                                                    Global.TGlobal,
                                                    PreludeBase.TMaybe<
                                                      PreludeBase.TTuple2<String/*<Character>*/, Global.TGlobal>
                                                    >
                                                  >
                                                >cast(v7739$20956).apply(v2895$20983.mem2))
                                          ).call())
                                );
                      }
                      final PreludeBase.TMaybe.DNothing<
                        PreludeBase.TTuple2<Symbols.TSymbolT<Global.TGlobal>, Global.TGlobal>
                      > $21351 = $21346.asNothing();
                      assert $21351 != null;
                      return Thunk.<
                            Kind.U<PreludeBase.TMaybe<?>, PreludeBase.TTuple2<String/*<Character>*/, Global.TGlobal>>
                          >lazy(
                                (Kind.U<
                                  PreludeBase.TMaybe<?>, PreludeBase.TTuple2<String/*<Character>*/, Global.TGlobal>
                                >)PreludeBase.TMaybe.DNothing.<PreludeBase.TTuple2<String/*<Character>*/, Global.TGlobal>>mk()
                              );
                    }
                    final PreludeBase.TMaybe.DNothing<PreludeBase.TTuple2<QNames.TQName, Global.TGlobal>> $21352 =
                    $21341.asNothing();
                    assert $21352 != null;
                    return Thunk.<
                          Kind.U<PreludeBase.TMaybe<?>, PreludeBase.TTuple2<String/*<Character>*/, Global.TGlobal>>
                        >lazy(
                              (Kind.U<
                                PreludeBase.TMaybe<?>, PreludeBase.TTuple2<String/*<Character>*/, Global.TGlobal>
                              >)PreludeBase.TMaybe.DNothing.<PreludeBase.TTuple2<String/*<Character>*/, Global.TGlobal>>mk()
                            );
                  }
                  final PreludeBase.TMaybe.DNothing<PreludeBase.TTuple2<Tokens.TToken, Global.TGlobal>> $21353 =
                  $21336.asNothing();
                  assert $21353 != null;
                  return Thunk.<Kind.U<PreludeBase.TMaybe<?>, PreludeBase.TTuple2<String/*<Character>*/, Global.TGlobal>>>lazy(
                            (Kind.U<
                              PreludeBase.TMaybe<?>, PreludeBase.TTuple2<String/*<Character>*/, Global.TGlobal>
                            >)PreludeBase.TMaybe.DNothing.<PreludeBase.TTuple2<String/*<Character>*/, Global.TGlobal>>mk()
                          );
                })
          );
}
final public static SNames.TSName createSName(final String/*<Character>*/ arg$1) {
  final class Let$21354  {
    final Let$21354 let$21354 = this;
    final public Tokens.TToken var$18661(final String/*<Character>*/ arg$2) {
      return Tokens.TToken.mk(TokenID.TTokenID.VARID, arg$2, 1, 0, 0, PreludeBase.TList.DList.<Tokens.TToken>mk());
    }
    final public Tokens.TToken con$18660(final String/*<Character>*/ arg$2) {
      return Tokens.TToken.mk(TokenID.TTokenID.CONID, arg$2, 1, 0, 0, PreludeBase.TList.DList.<Tokens.TToken>mk());
    }
    final public Tokens.TToken qual$18659(final String/*<Character>*/ arg$2) {
      return Tokens.TToken.mk(TokenID.TTokenID.QUALIFIER, arg$2, 1, 0, 0, PreludeBase.TList.DList.<Tokens.TToken>mk());
    }
    final public SNames.TSName with1var$18658(final String/*<Character>*/ arg$2, final String/*<Character>*/ arg$3) {
      return SNames.TSName.DWith1.mk(let$21354.qual$18659(arg$2), let$21354.var$18661(arg$3));
    }
    final public SNames.TSName with1con$18657(final String/*<Character>*/ arg$2, final String/*<Character>*/ arg$3) {
      return SNames.TSName.DWith1.mk(let$21354.qual$18659(arg$2), let$21354.con$18660(arg$3));
    }
    final public SNames.TSName with2var$18656(
      final String/*<Character>*/ arg$2, final String/*<Character>*/ arg$3, final String/*<Character>*/ arg$4
    ) {
      return SNames.TSName.DWith2.mk(let$21354.qual$18659(arg$2), let$21354.qual$18659(arg$3), let$21354.var$18661(arg$4));
    }
    final public SNames.TSName with2con$18655(
      final String/*<Character>*/ arg$2, final String/*<Character>*/ arg$3, final String/*<Character>*/ arg$4
    ) {
      return SNames.TSName.DWith2.mk(let$21354.qual$18659(arg$2), let$21354.qual$18659(arg$3), let$21354.con$18660(arg$4));
    }
  }
  final Let$21354 let$21354 = new Let$21354();
  final PreludeBase.TMaybe<PreludeBase.TList<PreludeBase.TMaybe<String/*<Character>*/>>> $21356 =
  Hover.match(arg$1, Hover.K.rgx21355);
  final PreludeBase.TMaybe.DJust<PreludeBase.TList<PreludeBase.TMaybe<String/*<Character>*/>>> $21357 =
  $21356.asJust();
  if ($21357 != null) {
    final PreludeBase.TList<PreludeBase.TMaybe<String/*<Character>*/>> $21358 = $21357.mem1
    .call();
    final PreludeBase.TList.DCons<PreludeBase.TMaybe<String/*<Character>*/>> $21359 =
    $21358.asCons();
    if ($21359 != null) {
      final PreludeBase.TList<PreludeBase.TMaybe<String/*<Character>*/>> $21360 = $21359.mem2
      .call();
      final PreludeBase.TList.DCons<PreludeBase.TMaybe<String/*<Character>*/>> $21361 =
      $21360.asCons();
      if ($21361 != null) {
        final PreludeBase.TList<PreludeBase.TMaybe<String/*<Character>*/>> $21362 = $21361.mem2
        .call();
        final PreludeBase.TList.DCons<PreludeBase.TMaybe<String/*<Character>*/>> $21363 =
        $21362.asCons();
        if ($21363 != null) {
          final PreludeBase.TMaybe<String/*<Character>*/> $21364 = $21363.mem1.call();
          final PreludeBase.TMaybe.DJust<String/*<Character>*/> $21365 = $21364.asJust();
          if ($21365 != null) {
            final String/*<Character>*/ id$18677 = $21365.mem1.call();
            final PreludeBase.TMaybe<String/*<Character>*/> $21367 = $21361.mem1.call();
            final PreludeBase.TMaybe.DJust<String/*<Character>*/> $21368 = $21367.asJust();
            if ($21368 != null) {
              final String/*<Character>*/ ty$18676 = $21368.mem1.call();
              final PreludeBase.TMaybe<String/*<Character>*/> $21370 = $21359.mem1.call();
              final PreludeBase.TMaybe.DJust<String/*<Character>*/> $21371 = $21370.asJust();
              if ($21371 != null) {
                final String/*<Character>*/ ns$18675 = $21371.mem1.call();
                return let$21354.with2con$18655(ns$18675, ty$18676, id$18677);
              }
            }
          }
        }
      }
    }
  }
  final PreludeBase.TMaybe<PreludeBase.TList<PreludeBase.TMaybe<String/*<Character>*/>>> $21374 =
  Hover.match(arg$1, Hover.K.rgx21373);
  final PreludeBase.TMaybe.DJust<PreludeBase.TList<PreludeBase.TMaybe<String/*<Character>*/>>> $21375 =
  $21374.asJust();
  if ($21375 != null) {
    final PreludeBase.TList<PreludeBase.TMaybe<String/*<Character>*/>> $21376 = $21375.mem1
    .call();
    final PreludeBase.TList.DCons<PreludeBase.TMaybe<String/*<Character>*/>> $21377 =
    $21376.asCons();
    if ($21377 != null) {
      final PreludeBase.TList<PreludeBase.TMaybe<String/*<Character>*/>> $21378 = $21377.mem2
      .call();
      final PreludeBase.TList.DCons<PreludeBase.TMaybe<String/*<Character>*/>> $21379 =
      $21378.asCons();
      if ($21379 != null) {
        final PreludeBase.TList<PreludeBase.TMaybe<String/*<Character>*/>> $21380 = $21379.mem2
        .call();
        final PreludeBase.TList.DCons<PreludeBase.TMaybe<String/*<Character>*/>> $21381 =
        $21380.asCons();
        if ($21381 != null) {
          final PreludeBase.TMaybe<String/*<Character>*/> $21382 = $21381.mem1.call();
          final PreludeBase.TMaybe.DJust<String/*<Character>*/> $21383 = $21382.asJust();
          if ($21383 != null) {
            final String/*<Character>*/ id$18682 = $21383.mem1.call();
            final PreludeBase.TMaybe<String/*<Character>*/> $21385 = $21379.mem1.call();
            final PreludeBase.TMaybe.DJust<String/*<Character>*/> $21386 = $21385.asJust();
            if ($21386 != null) {
              final String/*<Character>*/ ty$18681 = $21386.mem1.call();
              final PreludeBase.TMaybe<String/*<Character>*/> $21388 = $21377.mem1.call();
              final PreludeBase.TMaybe.DJust<String/*<Character>*/> $21389 = $21388.asJust();
              if ($21389 != null) {
                final String/*<Character>*/ ns$18680 = $21389.mem1.call();
                return let$21354.with2var$18656(ns$18680, ty$18681, id$18682);
              }
            }
          }
        }
      }
    }
  }
  final PreludeBase.TMaybe<PreludeBase.TList<PreludeBase.TMaybe<String/*<Character>*/>>> $21392 =
  Hover.match(arg$1, Hover.K.rgx21391);
  final PreludeBase.TMaybe.DJust<PreludeBase.TList<PreludeBase.TMaybe<String/*<Character>*/>>> $21393 =
  $21392.asJust();
  if ($21393 != null) {
    final PreludeBase.TList<PreludeBase.TMaybe<String/*<Character>*/>> $21394 = $21393.mem1
    .call();
    final PreludeBase.TList.DCons<PreludeBase.TMaybe<String/*<Character>*/>> $21395 =
    $21394.asCons();
    if ($21395 != null) {
      final PreludeBase.TList<PreludeBase.TMaybe<String/*<Character>*/>> $21396 = $21395.mem2
      .call();
      final PreludeBase.TList.DCons<PreludeBase.TMaybe<String/*<Character>*/>> $21397 =
      $21396.asCons();
      if ($21397 != null) {
        final PreludeBase.TMaybe<String/*<Character>*/> $21398 = $21397.mem1.call();
        final PreludeBase.TMaybe.DJust<String/*<Character>*/> $21399 = $21398.asJust();
        if ($21399 != null) {
          final String/*<Character>*/ id$18686 = $21399.mem1.call();
          final PreludeBase.TMaybe<String/*<Character>*/> $21401 = $21395.mem1.call();
          final PreludeBase.TMaybe.DJust<String/*<Character>*/> $21402 = $21401.asJust();
          if ($21402 != null) {
            final String/*<Character>*/ ty$18685 = $21402.mem1.call();
            return let$21354.with1con$18657(ty$18685, id$18686);
          }
        }
      }
    }
  }
  final PreludeBase.TMaybe<PreludeBase.TList<PreludeBase.TMaybe<String/*<Character>*/>>> $21405 =
  Hover.match(arg$1, Hover.K.rgx21404);
  final PreludeBase.TMaybe.DJust<PreludeBase.TList<PreludeBase.TMaybe<String/*<Character>*/>>> $21406 =
  $21405.asJust();
  if ($21406 != null) {
    final PreludeBase.TList<PreludeBase.TMaybe<String/*<Character>*/>> $21407 = $21406.mem1
    .call();
    final PreludeBase.TList.DCons<PreludeBase.TMaybe<String/*<Character>*/>> $21408 =
    $21407.asCons();
    if ($21408 != null) {
      final PreludeBase.TList<PreludeBase.TMaybe<String/*<Character>*/>> $21409 = $21408.mem2
      .call();
      final PreludeBase.TList.DCons<PreludeBase.TMaybe<String/*<Character>*/>> $21410 =
      $21409.asCons();
      if ($21410 != null) {
        final PreludeBase.TMaybe<String/*<Character>*/> $21411 = $21410.mem1.call();
        final PreludeBase.TMaybe.DJust<String/*<Character>*/> $21412 = $21411.asJust();
        if ($21412 != null) {
          final String/*<Character>*/ id$18690 = $21412.mem1.call();
          final PreludeBase.TMaybe<String/*<Character>*/> $21414 = $21408.mem1.call();
          final PreludeBase.TMaybe.DJust<String/*<Character>*/> $21415 = $21414.asJust();
          if ($21415 != null) {
            final String/*<Character>*/ ty$18689 = $21415.mem1.call();
            return let$21354.with1var$18658(ty$18689, id$18690);
          }
        }
      }
    }
  }
  if (frege.runtime.Regex9.find(arg$1, Hover.K.rgx21417)) {
    return SNames.TSName.DSimple.mk(
              Tokens.TToken.mk(TokenID.TTokenID.CONID, arg$1, 1, 0, 0, PreludeBase.TList.DList.<Tokens.TToken>mk())
            );
  }
  return SNames.TSName.DSimple.mk(
            Tokens.TToken.mk(TokenID.TTokenID.VARID, arg$1, 1, 0, 0, PreludeBase.TList.DList.<Tokens.TToken>mk())
          );
}
final public static State.TState<Global.TGlobal, PreludeBase.TList<Symbols.TSymbolT<Global.TGlobal>>> resolveSymbol(
  final String/*<Character>*/ arg$1
) {
  return State.TState.<Global.TGlobal, PreludeBase.TList<Symbols.TSymbolT<Global.TGlobal>>>mk(
            (Func.U<Global.TGlobal, PreludeBase.TTuple2<PreludeBase.TList<Symbols.TSymbolT<Global.TGlobal>>, Global.TGlobal>>)((
              final Lazy<Global.TGlobal> arg$21418
            ) -> {
                  final State.TState<Global.TGlobal, PreludeBase.TList<QNames.TQName>> $21419 =
                  Hover.sNameToQName(Hover.createSName(arg$1));
                  final Func.U<
                    Global.TGlobal, PreludeBase.TTuple2<PreludeBase.TList<QNames.TQName>, Global.TGlobal>
                  > v7688$20369 = $21419.mem$fun;
                  final PreludeBase.TTuple2<PreludeBase.TList<QNames.TQName>, Global.TGlobal> $21421 =
                  v7688$20369.apply(arg$21418).call();
                  final State.TState<Global.TGlobal, PreludeBase.TList<Symbols.TSymbolT<Global.TGlobal>>> $21423 =
                  State.IMonad_State.<Global.TGlobal, PreludeBase.TList<Symbols.TSymbolT<Global.TGlobal>>>pure(
                        Maybe.<Symbols.TSymbolT<Global.TGlobal>, PreludeBase.TList<?>>catMaybes(
                              PreludeList.IListSource_$lbrack$rbrack.<PreludeBase.TList<?>>mk(),
                              Thunk.<Kind.U<PreludeBase.TList<?>, PreludeBase.TMaybe<Symbols.TSymbolT<Global.TGlobal>>>>shared(
                                    (Lazy<Kind.U<
                                      PreludeBase.TList<?>, PreludeBase.TMaybe<Symbols.TSymbolT<Global.TGlobal>>
                                    >>)(() -> (Kind.U<
                                          PreludeBase.TList<?>, PreludeBase.TMaybe<Symbols.TSymbolT<Global.TGlobal>>
                                        >)Thunk.<PreludeBase.TList<PreludeBase.TMaybe<Symbols.TSymbolT<Global.TGlobal>>>>shared(
                                              (Lazy<PreludeBase.TList<
                                                PreludeBase.TMaybe<Symbols.TSymbolT<Global.TGlobal>>
                                              >>)(() -> PreludeMonad.IFunctor_$lbrack$rbrack.<
                                                    QNames.TQName, PreludeBase.TMaybe<Symbols.TSymbolT<Global.TGlobal>>
                                                  >fmap(
                                                        (Func.U<
                                                          QNames.TQName, PreludeBase.TMaybe<Symbols.TSymbolT<Global.TGlobal>>
                                                        >)((final Lazy<QNames.TQName> η$21422) -> Thunk.<
                                                              PreludeBase.TMaybe<Symbols.TSymbolT<Global.TGlobal>>
                                                            >nested(
                                                                  (Lazy<Lazy<PreludeBase.TMaybe<
                                                                    Symbols.TSymbolT<Global.TGlobal>
                                                                  >>>)(() -> Global.TGlobal.find(
                                                                            arg$21418.call(), η$21422.call()
                                                                          ))
                                                                )),
                                                        $21421.mem1.call()
                                                      ))
                                            ).call())
                                  )
                            )
                      );
                  final Func.U<
                    Global.TGlobal, PreludeBase.TTuple2<PreludeBase.TList<Symbols.TSymbolT<Global.TGlobal>>, Global.TGlobal>
                  > v7693$20374 = $21423.mem$fun;
                  return Thunk.<PreludeBase.TTuple2<PreludeBase.TList<Symbols.TSymbolT<Global.TGlobal>>, Global.TGlobal>>nested(
                            (Lazy<Lazy<PreludeBase.TTuple2<
                              PreludeBase.TList<Symbols.TSymbolT<Global.TGlobal>>, Global.TGlobal
                            >>>)(() -> v7693$20374.apply($21421.mem2))
                          );
                })
          );
}
final public static Func.U<RealWorld, PreludeBase.TMaybe<String/*<Character>*/>> compileAndGetTypeSignatureOnHover(
  final Lazy<String/*<Character>*/> arg$1, final Lazy<Diagnostic.TPosition> arg$2
) {
  return (Func.U<RealWorld, PreludeBase.TMaybe<String/*<Character>*/>>)((final Lazy<RealWorld> arg$21425) -> {
            final Global.TGlobal v2056$21133 = CompilerHelper.lspGlobal.call().apply(arg$21425)
            .call();
            final Func.U<RealWorld, Global.TGlobal> v2053$21152 = Func.<RealWorld, Global.TGlobal>coerceU(
                  State.<Global.TGlobal, Func.U<RealWorld, ?>, Global.TGlobal>execStateT(
                        PreludeMonad.IMonad_ST.<RealWorld>mk(),
                        Thunk.<State.TStateT<Global.TGlobal, Func.U<RealWorld, ?>, Global.TGlobal>>shared(
                              (Lazy<State.TStateT<
                                Global.TGlobal, Func.U<RealWorld, ?>, Global.TGlobal
                              >>)(() -> CompilerHelper.compileFregeFile(arg$1))
                            ),
                        v2056$21133
                      )
                );
            final Global.TGlobal v2056$21155 = v2053$21152.apply(arg$21425).call();
            final Func.U<RealWorld, PreludeBase.TMaybe<String/*<Character>*/>> v2057$21156 =
            PreludeMonad.IMonad_ST.<RealWorld, PreludeBase.TMaybe<String/*<Character>*/>>pure(
                  Thunk.<PreludeBase.TMaybe<String/*<Character>*/>>shared(
                        (Lazy<PreludeBase.TMaybe<String/*<Character>*/>>)(() -> PreludeBase.TMaybe.<
                              String/*<Character>*/
                            >coerce(
                                  Thunk.<Kind.U<PreludeBase.TMaybe<?>, String/*<Character>*/>>shared(
                                        (Lazy<Kind.U<PreludeBase.TMaybe<?>, String/*<Character>*/>>)(() -> State.<
                                              String/*<Character>*/, PreludeBase.TMaybe<?>, Global.TGlobal
                                            >evalStateT(
                                                  Maybe.IMonad_Maybe.it,
                                                  Thunk.<
                                                    State.TStateT<Global.TGlobal, PreludeBase.TMaybe<?>, String/*<Character>*/>
                                                  >shared(
                                                        (Lazy<State.TStateT<
                                                          Global.TGlobal, PreludeBase.TMaybe<?>, String/*<Character>*/
                                                        >>)(() -> Hover.getTypeOnHover(
                                                                  arg$2
                                                                ))
                                                      ),
                                                  v2056$21155
                                                ))
                                      ).call()
                                ))
                      )
                );
            return Thunk.<PreludeBase.TMaybe<String/*<Character>*/>>nested(
                      (Lazy<Lazy<PreludeBase.TMaybe<String/*<Character>*/>>>)(() -> v2057$21156
                          .apply(arg$21425))
                    );
          });
}
final public static Lazy<QuickCheckGen.TGen<
  QuickCheckProperty.TRose<QuickCheckProperty.TResult>
>> shouldShowVaridTypeSignature = Thunk.<QuickCheckGen.TGen<QuickCheckProperty.TRose<QuickCheckProperty.TResult>>>shared(
      (Lazy<QuickCheckGen.TGen<QuickCheckProperty.TRose<QuickCheckProperty.TResult>>>)(() -> {
            return QuickCheckProperty.<QuickCheckGen.TGen<QuickCheckProperty.TRose<QuickCheckProperty.TResult>>>once(
                      new QuickCheckProperty.ITestable_Gen<QuickCheckProperty.TRose<QuickCheckProperty.TResult>>(
                        QuickCheckProperty.ITestable_Prop.it
                      ),
                      Thunk.<QuickCheckGen.TGen<QuickCheckProperty.TRose<QuickCheckProperty.TResult>>>shared(
                            (Lazy<QuickCheckGen.TGen<
                              QuickCheckProperty.TRose<QuickCheckProperty.TResult>
                            >>)(() -> QuickCheckProperty.<Boolean>morallyDubiousIOProperty(
                                      QuickCheckProperty.ITestable_Bool.it,
                                      (Func.U<RealWorld, Boolean>)((final Lazy<RealWorld> arg$21430) -> {
                                            final PreludeBase.TMaybe<String/*<Character>*/> v2056$20235 =
                                            Hover.compileAndGetTypeSignatureOnHover(
                                                  Thunk.<String/*<Character>*/>shared(
                                                        (Lazy<String/*
                                                          <Character>
                                                        */>)(() -> "module HoverTest where\n\n" + "simplyString = \"Hello\"")
                                                      ),
                                                  Diagnostic.TPosition.mk(Thunk.<Integer>lazy(3), Thunk.<Integer>lazy(3))
                                                ).apply(arg$21430).call();
                                            final Func.U<RealWorld, Boolean> v2057$20236 =
                                            PreludeMonad.IMonad_ST.<RealWorld, Boolean>pure(
                                                  Thunk.<Boolean>shared(
                                                        (Lazy<Boolean>)(() -> Maybe.IEq_Maybe.<
                                                              String/*<Character>*/
                                                            >$eq$eq(
                                                                  PreludeBase.IEq_String.it,
                                                                  PreludeBase.TMaybe.DJust.<
                                                                    String/*<Character>*/
                                                                  >mk(Thunk.<String/*<Character>*/>lazy("String")),
                                                                  v2056$20235
                                                                ))
                                                      )
                                                );
                                            return Thunk.<Boolean>nested(
                                                      (Lazy<Lazy<Boolean>>)(() -> v2057$20236
                                                          .apply(arg$21430))
                                                    );
                                          })
                                    ))
                          )
                    );
          })
    );
final public static PreludeBase.TList<Tokens.TToken> backwards(final Lazy<Tokens.TToken[]> arg$1, final int arg$2) {
  if (arg$2 > 0) {
    return PreludeBase.TList.DCons.<Tokens.TToken>mk(
              Thunk.<Tokens.TToken>shared((Lazy<Tokens.TToken>)(() -> Hover.trans(arg$1.call()[arg$2]))),
              Thunk.<PreludeBase.TList<Tokens.TToken>>shared(
                    (Lazy<PreludeBase.TList<Tokens.TToken>>)(() -> Hover.backwards(arg$1, PreludeBase.IEnum_Int.pred(arg$2)))
                  )
            );
  }
  return PreludeBase.TList.DList.<Tokens.TToken>mk();
}
public static class K  {
  final public static java.util.regex.Pattern rgx21404 = java.util.regex.Pattern.compile(
        "^(.*)\\.(.*)$", 448
      );
  final public static java.util.regex.Pattern rgx21373 = java.util.regex.Pattern.compile(
        "^(.*)\\.(.*)\\.(.*)$", 448
      );
  final public static java.util.regex.Pattern rgx21355 = java.util.regex.Pattern.compile(
        "^(.*)\\.(.*)\\.(\\p{Lu}.*)$", 448
      );
  final public static java.util.regex.Pattern rgx21391 = java.util.regex.Pattern.compile(
        "^(.*)\\.(\\p{Lu}.*)$", 448
      );
  final public static java.util.regex.Pattern rgx21178 = java.util.regex.Pattern.compile(
        "^(chg|upd|has|let|anon|lc)\\$", 448
      );
  final public static java.util.regex.Pattern rgx21417 = java.util.regex.Pattern.compile(
        "^\\p{Lu}.*$", 448
      );
}
  public static void main(final java.lang.String[] argv) {
    try {
      frege.run.RunTM.argv = argv;
      
        PreludeBase.TST.<Short>performUnsafe($main
               .call()
          ).call();
      frege.runtime.Runtime.stdout.get().close();
      frege.runtime.Runtime.stderr.get().close();

    } finally { frege.run.Concurrent.shutDownIfExists(); }
  }
}
